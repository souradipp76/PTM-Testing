{"meta": {"format": 2, "version": "7.4.4", "timestamp": "2024-04-28T17:33:41.904130", "branch_coverage": false, "show_contexts": false}, "files": {"colossalai/_C/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/__init__.py": {"executed_lines": [1, 2, 4, 6, 13], "summary": {"covered_lines": 5, "num_statements": 8, "percent_covered": 62.5, "percent_covered_display": "62", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [7, 10, 11], "excluded_lines": []}, "colossalai/_analyzer/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/_analyzer/_subclasses/__init__.py": {"executed_lines": [1, 2, 3, 4], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/_analyzer/_subclasses/_meta_registration.py": {"executed_lines": [6, 8, 9, 10, 12, 14, 15, 19, 21, 22, 23, 26, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 55, 58, 59, 184, 185, 200, 201, 217, 218, 226, 227, 279, 280, 298, 307, 312, 313, 318, 319, 324, 325, 340, 341, 354, 355, 369, 370, 375, 376, 384, 385, 389, 390, 394, 395, 399, 400, 407, 408, 415, 416, 421, 422, 425], "summary": {"covered_lines": 71, "num_statements": 230, "percent_covered": 30.869565217391305, "percent_covered_display": "31", "missing_lines": 159, "excluded_lines": 0}, "missing_lines": [16, 17, 27, 31, 35, 70, 83, 85, 100, 102, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 137, 138, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 175, 176, 177, 178, 179, 180, 181, 182, 197, 198, 214, 222, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 260, 265, 267, 268, 270, 273, 274, 276, 289, 308, 314, 320, 321, 337, 342, 343, 366, 371, 372, 379, 386, 391, 396, 401, 402, 411, 418, 423, 427, 428, 429, 431, 432, 433, 436, 437, 438, 439, 444, 445, 446, 447, 448, 449, 452, 454, 456, 457, 458, 462, 464, 466, 467, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 487, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 512, 513, 514, 515, 516, 517, 518, 520, 522, 523], "excluded_lines": []}, "colossalai/_analyzer/_subclasses/_monkey_patch.py": {"executed_lines": [1, 2, 4, 15, 25, 35, 37, 39, 50, 51, 54, 64, 78], "summary": {"covered_lines": 13, "num_statements": 16, "percent_covered": 81.25, "percent_covered_display": "81", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [90, 91, 92], "excluded_lines": []}, "colossalai/_analyzer/_subclasses/flop_tensor.py": {"executed_lines": [5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 19, 22, 23, 24, 27, 33, 50, 225, 259, 276, 290, 304, 329, 340, 344, 360, 366, 383, 386, 397, 406, 416, 419, 426, 427, 466, 514, 515, 518, 549, 550], "summary": {"covered_lines": 42, "num_statements": 252, "percent_covered": 16.666666666666668, "percent_covered_display": "17", "missing_lines": 210, "excluded_lines": 0}, "missing_lines": [28, 29, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 62, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 91, 92, 95, 97, 99, 101, 102, 103, 104, 106, 107, 108, 109, 111, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 219, 220, 222, 231, 232, 235, 237, 238, 240, 243, 244, 247, 248, 249, 251, 254, 255, 256, 265, 268, 269, 270, 271, 272, 273, 282, 285, 286, 287, 296, 297, 298, 299, 300, 301, 323, 324, 325, 326, 333, 334, 335, 337, 341, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 371, 373, 378, 380, 381, 387, 388, 389, 390, 391, 392, 393, 394, 407, 408, 409, 410, 411, 412, 413, 414, 423, 552, 553, 554], "excluded_lines": []}, "colossalai/_analyzer/_subclasses/meta_tensor.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 11, 14, 23, 30, 34, 35, 47, 49, 50, 83, 89, 90, 126, 152, 157, 162, 166, 167, 179, 183, 200], "summary": {"covered_lines": 26, "num_statements": 106, "percent_covered": 24.528301886792452, "percent_covered_display": "25", "missing_lines": 80, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 19, 20, 24, 25, 26, 31, 51, 53, 54, 55, 60, 70, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 91, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 113, 115, 116, 117, 121, 122, 124, 140, 142, 144, 145, 146, 147, 149, 150, 153, 154, 155, 158, 159, 160, 163, 180, 181, 184, 185, 187, 188, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205], "excluded_lines": []}, "colossalai/_analyzer/envs.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 5, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 6, 7], "excluded_lines": []}, "colossalai/_analyzer/fx/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 3], "excluded_lines": []}, "colossalai/_analyzer/fx/codegen.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 246, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 246, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 9, 20, 22, 23, 25, 28, 32, 35, 39, 42, 46, 47, 48, 51, 55, 56, 57, 60, 64, 65, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83, 86, 91, 92, 93, 94, 96, 97, 98, 102, 103, 104, 109, 110, 111, 112, 113, 114, 116, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 134, 151, 155, 156, 157, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 173, 174, 183, 186, 187, 188, 189, 190, 192, 193, 197, 198, 199, 200, 202, 204, 205, 206, 207, 210, 222, 223, 224, 225, 227, 228, 230, 231, 234, 235, 236, 237, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 256, 258, 264, 268, 271, 273, 274, 275, 276, 277, 280, 281, 283, 284, 286, 288, 290, 292, 293, 295, 297, 299, 302, 304, 308, 311, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 332, 333, 335, 336, 337, 338, 340, 341, 342, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 380, 381, 382, 384, 385, 386, 390, 394, 395, 399, 401, 402, 405, 412, 415, 416, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 444, 448, 450, 451, 452, 454, 456, 457, 459, 460, 462, 463, 464, 466, 467, 468, 472], "excluded_lines": []}, "colossalai/_analyzer/fx/graph_module.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 119, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 119, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 27, 28, 29, 30, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 58, 59, 60, 63, 65, 66, 67, 68, 70, 71, 72, 73, 78, 79, 80, 82, 85, 107, 110, 112, 123, 124, 125, 126, 127, 128, 129, 130, 132, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 151, 153, 154, 162, 164, 165, 167, 168, 170, 173, 174, 176, 187, 188, 189, 190, 193, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 241, 242], "excluded_lines": []}, "colossalai/_analyzer/fx/node_util.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 97, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 97, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 11, 12, 15, 16, 19, 20, 23, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 85, 88, 92, 93, 98, 99, 101, 102, 103, 106, 107, 110, 111, 115, 116, 117, 119, 120, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 151, 152, 153, 155, 156, 158, 163, 165, 166, 168, 173, 175, 176, 178, 183, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 213], "excluded_lines": []}, "colossalai/_analyzer/fx/passes/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 2], "excluded_lines": []}, "colossalai/_analyzer/fx/passes/graph_profile.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 100, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 100, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 7, 9, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 30, 31, 32, 33, 36, 37, 40, 46, 52, 53, 55, 71, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 89, 91, 102, 103, 104, 105, 107, 119, 121, 123, 133, 134, 135, 136, 143, 144, 146, 148, 149, 150, 164, 168, 181, 184, 189, 190, 193, 230, 232, 246, 247, 249, 250, 251, 257, 258, 264, 265, 267, 269, 285, 288, 289, 291, 293, 308, 309, 311, 328, 329, 330, 333, 346, 350, 351, 353, 354, 355], "excluded_lines": []}, "colossalai/_analyzer/fx/passes/shape_prop.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 104, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 104, "excluded_lines": 0}, "missing_lines": [3, 5, 6, 7, 8, 10, 11, 12, 14, 17, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 47, 48, 49, 50, 53, 54, 55, 56, 57, 60, 61, 94, 95, 97, 98, 99, 101, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 136, 138, 139, 140, 142, 143, 144, 145, 148, 155, 157, 162, 163, 165, 167, 168, 170, 171, 172, 174, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 218, 220, 222, 223, 226, 228, 229, 230, 231, 233, 235, 246, 247, 248, 250, 252, 253, 256, 269, 270], "excluded_lines": []}, "colossalai/_analyzer/fx/symbolic_profile.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 17, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 17, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 7, 8, 9, 10, 12, 15, 16, 17, 18, 20, 23, 34, 35, 36], "excluded_lines": []}, "colossalai/_analyzer/fx/tracer/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 2], "excluded_lines": []}, "colossalai/_analyzer/fx/tracer/bias_addition.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 60, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 60, "excluded_lines": 0}, "missing_lines": [6, 7, 8, 10, 12, 15, 16, 17, 18, 20, 23, 24, 25, 26, 28, 33, 34, 35, 36, 38, 43, 44, 45, 46, 48, 53, 54, 64, 65, 75, 86, 87, 90, 91, 101, 112, 113, 123, 124, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "excluded_lines": []}, "colossalai/_analyzer/fx/tracer/custom_leaf_module.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 22, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 27, 29, 30], "excluded_lines": []}, "colossalai/_analyzer/fx/tracer/proxy.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 78, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 78, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 10, 13, 14, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 82, 83, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 105, 106, 108, 109], "excluded_lines": []}, "colossalai/_analyzer/fx/tracer/symbolic_trace.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 30, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 9, 10, 12, 13, 14, 15, 16, 19, 20, 23, 24, 25, 26, 27, 30, 145, 146, 147, 148, 151, 152, 153, 155, 156, 157], "excluded_lines": []}, "colossalai/_analyzer/fx/tracer/tracer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 222, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 222, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 16, 19, 20, 23, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 40, 43, 44, 47, 48, 51, 52, 53, 54, 55, 56, 57, 67, 68, 69, 70, 73, 74, 75, 77, 80, 82, 85, 86, 88, 92, 95, 96, 97, 98, 99, 101, 102, 104, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 162, 163, 164, 166, 172, 173, 175, 176, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194, 195, 197, 198, 200, 201, 202, 203, 204, 206, 207, 209, 210, 213, 216, 220, 221, 222, 223, 224, 225, 227, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 249, 250, 253, 256, 257, 259, 261, 263, 264, 266, 268, 269, 272, 273, 274, 275, 278, 281, 282, 283, 285, 286, 288, 290, 292, 297, 298, 300, 303, 304, 306, 309, 310, 312, 313, 316, 319, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 368, 369, 371], "excluded_lines": []}, "colossalai/accelerator/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 7], "summary": {"covered_lines": 6, "num_statements": 6, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/accelerator/api.py": {"executed_lines": [2, 3, 5, 6, 7, 8, 10, 13, 19, 22, 40, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 69, 70, 71], "summary": {"covered_lines": 24, "num_statements": 30, "percent_covered": 80.0, "percent_covered_display": "80", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [32, 33, 34, 35, 37, 57], "excluded_lines": []}, "colossalai/accelerator/base_accelerator.py": {"executed_lines": [3, 4, 6, 8, 11, 12, 14, 15, 16, 17, 23, 24, 30, 31, 37, 38, 44, 51, 52, 57, 58, 63, 64, 69, 70, 75, 76, 81, 82, 87, 88, 93, 94, 99, 115, 116, 121, 122, 127, 128, 133, 134, 142, 143, 148, 149, 154, 155, 160, 161, 166, 167, 172, 173, 178, 179, 184, 185, 190, 191, 199, 200, 205, 206, 211, 212, 217, 218, 223, 224, 229, 230, 235, 236, 241, 242, 247, 248, 253, 254, 259, 260, 265, 266, 275, 276, 281, 282, 287, 288, 293, 294, 299, 300, 305, 306, 314, 315], "summary": {"covered_lines": 98, "num_statements": 111, "percent_covered": 88.28828828828829, "percent_covered_display": "88", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [28, 35, 42, 45, 46, 105, 106, 107, 108, 109, 110, 111, 113], "excluded_lines": []}, "colossalai/accelerator/cpu_accelerator.py": {"executed_lines": [3, 4, 5, 7, 8, 10, 12, 15, 16, 17, 21, 22, 27, 33, 37, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 102, 108, 114, 120, 126, 132, 138, 144, 150, 160, 166, 172, 178, 184, 190, 196, 202, 208, 214, 220, 228, 238, 244, 250, 256, 262, 268, 277, 283], "summary": {"covered_lines": 54, "num_statements": 94, "percent_covered": 57.4468085106383, "percent_covered_display": "57", "missing_lines": 40, "excluded_lines": 0}, "missing_lines": [31, 43, 49, 55, 61, 67, 73, 79, 85, 91, 97, 106, 112, 118, 124, 130, 136, 142, 148, 154, 164, 170, 176, 182, 188, 194, 200, 206, 212, 218, 224, 225, 226, 232, 242, 248, 254, 260, 266, 272], "excluded_lines": []}, "colossalai/accelerator/cuda_accelerator.py": {"executed_lines": [3, 5, 6, 8, 10, 13, 14, 18, 19, 24, 30, 36, 42, 52, 58, 64, 68, 70, 76, 82, 88, 94, 103, 109, 115, 121, 127, 133, 139, 145, 151, 161, 167, 173, 179, 185, 191, 197, 203, 209, 215, 221, 227, 237, 243, 249, 255, 261, 267, 276], "summary": {"covered_lines": 49, "num_statements": 92, "percent_covered": 53.26086956521739, "percent_covered_display": "53", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [28, 34, 40, 46, 47, 48, 49, 50, 56, 62, 74, 80, 86, 92, 98, 107, 113, 119, 125, 131, 137, 143, 149, 155, 165, 171, 177, 183, 189, 195, 201, 207, 213, 219, 225, 231, 241, 247, 253, 259, 265, 271, 282], "excluded_lines": []}, "colossalai/accelerator/npu_accelerator.py": {"executed_lines": [3, 5, 6, 8, 10, 11, 12, 13, 16, 19, 20, 24, 25, 30, 36, 42, 48, 58, 64, 70, 74, 76, 82, 88, 94, 100, 109, 115, 121, 127, 133, 139, 145, 151, 157, 167, 173, 179, 185, 191, 197, 203, 209, 215, 221, 227, 233, 243, 249, 255, 261, 267, 273, 282], "summary": {"covered_lines": 53, "num_statements": 96, "percent_covered": 55.208333333333336, "percent_covered_display": "55", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [34, 40, 46, 52, 53, 54, 55, 56, 62, 68, 80, 86, 92, 98, 104, 113, 119, 125, 131, 137, 143, 149, 155, 161, 171, 177, 183, 189, 195, 201, 207, 213, 219, 225, 231, 237, 247, 253, 259, 265, 271, 277, 288], "excluded_lines": []}, "colossalai/amp/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/amp/naive_amp/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/amp/naive_amp/grad_scaler/__init__.py": {"executed_lines": [1, 2, 3, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/amp/naive_amp/grad_scaler/base_grad_scaler.py": {"executed_lines": [4, 5, 7, 8, 10, 11, 13, 16, 17, 24, 32, 33, 38, 39, 44, 51, 60, 61, 68], "summary": {"covered_lines": 18, "num_statements": 31, "percent_covered": 58.064516129032256, "percent_covered_display": "58", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [25, 26, 27, 29, 30, 36, 42, 47, 48, 49, 58, 77, 78], "excluded_lines": []}, "colossalai/amp/naive_amp/grad_scaler/constant_grad_scaler.py": {"executed_lines": [3, 5, 8, 9, 16, 20], "summary": {"covered_lines": 5, "num_statements": 7, "percent_covered": 71.42857142857143, "percent_covered_display": "71", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [17, 18], "excluded_lines": []}, "colossalai/amp/naive_amp/grad_scaler/dynamic_grad_scaler.py": {"executed_lines": [4, 6, 8, 10, 12, 15, 16, 29, 65, 78, 103, 110, 117, 125], "summary": {"covered_lines": 13, "num_statements": 66, "percent_covered": 19.696969696969695, "percent_covered_display": "20", "missing_lines": 53, "excluded_lines": 0}, "missing_lines": [40, 41, 42, 43, 44, 48, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 106, 107, 108, 113, 114, 115, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129], "excluded_lines": []}, "colossalai/amp/naive_amp/mixed_precision_mixin/__init__.py": {"executed_lines": [1, 2, 3, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/amp/naive_amp/mixed_precision_mixin/base.py": {"executed_lines": [1, 3, 4, 7, 8, 43, 45, 46, 56, 57, 68, 69, 76, 77, 80, 81], "summary": {"covered_lines": 15, "num_statements": 15, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/amp/naive_amp/mixed_precision_mixin/bf16.py": {"executed_lines": [1, 2, 4, 7, 8, 10, 13, 16, 19, 22], "summary": {"covered_lines": 10, "num_statements": 15, "percent_covered": 66.66666666666667, "percent_covered_display": "67", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [11, 14, 17, 20, 23], "excluded_lines": []}, "colossalai/amp/naive_amp/mixed_precision_mixin/fp16.py": {"executed_lines": [1, 2, 4, 5, 6, 8, 9, 11, 14, 15, 16, 19, 20, 22, 45, 46, 49, 50, 57, 65, 70, 74, 81, 84], "summary": {"covered_lines": 24, "num_statements": 48, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [32, 33, 42, 43, 47, 59, 60, 61, 62, 63, 66, 67, 68, 71, 72, 75, 76, 77, 78, 79, 82, 85, 86, 87], "excluded_lines": []}, "colossalai/amp/naive_amp/mixed_precision_optimizer.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 10, 13, 14, 30, 37, 38, 88, 92, 96, 102, 134, 163, 201, 210, 213], "summary": {"covered_lines": 21, "num_statements": 112, "percent_covered": 18.75, "percent_covered_display": "19", "missing_lines": 91, "excluded_lines": 0}, "missing_lines": [25, 28, 31, 32, 33, 34, 51, 52, 53, 54, 55, 56, 57, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 93, 94, 97, 98, 99, 100, 112, 115, 116, 118, 121, 124, 125, 128, 129, 130, 131, 132, 146, 147, 150, 152, 153, 156, 157, 158, 159, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 178, 180, 183, 189, 190, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 211, 214], "excluded_lines": []}, "colossalai/auto_parallel/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/auto_parallel/checkpoint/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 3], "excluded_lines": []}, "colossalai/auto_parallel/checkpoint/build_c_ext.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 5, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 13], "excluded_lines": []}, "colossalai/auto_parallel/checkpoint/ckpt_solver_base.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 72, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 13, 15, 18, 20, 21, 22, 25, 27, 30, 31, 61, 62, 63, 64, 67, 68, 73, 74, 75, 76, 77, 79, 81, 82, 85, 87, 89, 114, 116, 126, 127, 129, 131, 138, 140, 141, 142, 143, 144, 145, 147, 149, 151, 158, 159, 160, 161, 164, 165, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 183, 184, 185, 188, 191, 193, 194], "excluded_lines": []}, "colossalai/auto_parallel/checkpoint/ckpt_solver_chen.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 47, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 9, 11, 14, 15, 33, 34, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86], "excluded_lines": []}, "colossalai/auto_parallel/checkpoint/ckpt_solver_rotor.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 252, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 252, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 9, 16, 18, 19, 21, 24, 25, 54, 55, 58, 59, 60, 62, 63, 64, 66, 76, 79, 80, 82, 84, 85, 88, 89, 92, 93, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 114, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154, 155, 158, 159, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 176, 177, 179, 181, 182, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 223, 224, 225, 226, 227, 228, 231, 232, 235, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 259, 260, 262, 263, 264, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 284, 286, 287, 288, 289, 299, 300, 301, 303, 304, 305, 307, 308, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 349, 350, 351, 352, 358, 360, 361, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 382, 383, 384, 385, 386, 388, 389, 391, 392, 393, 394, 396, 397, 400, 401, 402, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 424, 425, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 440, 444, 445, 446, 447, 448, 449, 452, 453], "excluded_lines": []}, "colossalai/auto_parallel/checkpoint/operation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 104, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 104, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 8, 9, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 64, 65, 66, 67, 70, 71, 73, 74, 76, 77, 78, 80, 83, 84, 86, 87, 89, 90, 91, 93, 96, 97, 100, 101, 104, 105, 108, 109, 110, 112, 113, 115, 116, 117, 119, 122, 123, 126, 127, 129, 130, 132, 133, 134, 136, 139, 140, 141, 143, 144, 146, 147, 150, 151, 153, 154, 156, 157, 160, 161, 164, 165, 168, 169, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 3], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/constants.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 6, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 7, 10, 13], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 10, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/activation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 11, 14, 25, 26, 33, 34, 36, 38, 39, 41, 48, 57, 65, 72, 75, 76, 77, 79, 81, 86, 89, 92], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/binary_elementwise_ops.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 26, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 12, 15, 16, 27, 28, 31, 32, 38, 39, 40, 43, 44, 48, 54, 59, 62, 63, 64, 66], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/conv.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 47, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 52, 53, 54, 55, 56, 58, 61, 62, 64, 65, 67, 70, 73, 76, 77, 78, 81, 84, 87, 88, 89, 90, 97, 98, 103, 108, 117, 129, 134, 137, 138, 139, 141], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 11, 14, 15, 21, 22, 23, 26, 27, 31, 38, 41, 43, 45, 48, 49, 50, 52], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 113, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 113, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 8, 10, 12, 15, 16, 17, 61, 63, 64, 65, 66, 68, 71, 73, 75, 77, 79, 80, 81, 82, 84, 86, 88, 94, 97, 104, 112, 120, 128, 133, 141, 144, 150, 158, 166, 174, 179, 182, 183, 184, 186, 189, 190, 220, 221, 224, 226, 227, 229, 230, 232, 237, 242, 249, 250, 252, 254, 256, 260, 261, 268, 271, 277, 287, 288, 295, 298, 303, 314, 315, 317, 319, 327, 338, 342, 348, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 365, 366, 368, 372, 381, 395, 396, 400, 401, 404, 409, 414, 422, 425, 432, 435, 442, 445, 446, 447, 449], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/non_spmd.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 15, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 8, 10, 13, 14, 15, 16, 17, 24, 25, 26, 27], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/norm.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 56, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 11, 14, 15, 16, 17, 40, 41, 42, 43, 44, 45, 46, 52, 53, 59, 70, 73, 74, 75, 80, 89, 97, 102, 105, 106, 107, 109, 112, 113, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 135, 136, 140, 147, 154, 161, 164, 165, 166, 168], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/pooling.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 51, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 51, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 11, 14, 15, 16, 17, 33, 34, 35, 38, 39, 42, 43, 50, 51, 52, 55, 56, 59, 61, 64, 65, 66, 68, 71, 72, 73, 74, 91, 92, 95, 96, 99, 100, 103, 110, 111, 112, 117, 120, 126, 128, 131, 132, 133, 135], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/tensor.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 24, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 8, 10, 13, 24, 30, 33, 37, 39, 46, 53, 56, 57, 58, 60, 63, 65, 67, 72, 77, 92], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/meta_registry/where.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 25, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 11, 14, 15, 22, 25, 28, 29, 30, 31, 32, 34, 41, 42, 51, 58, 61, 62, 63, 65], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/registry.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 20, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 19, 21, 22, 23, 24, 26, 27, 30], "excluded_lines": []}, "colossalai/auto_parallel/meta_profiler/shard_metainfo.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 63, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 63, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 8, 9, 11, 14, 20, 22, 25, 28, 31, 34, 37, 40, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 95, 98, 100, 103, 106, 109, 112, 115, 116, 117, 118, 120, 123, 126, 127], "excluded_lines": []}, "colossalai/auto_parallel/offload/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/auto_parallel/offload/amp_optimizer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 99, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 99, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 17, 18, 19, 22, 40, 54, 56, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 73, 82, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 110, 111, 113, 114, 115, 117, 119, 120, 122, 124, 125, 126, 128, 129, 130, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178, 182], "excluded_lines": []}, "colossalai/auto_parallel/offload/base_offload_module.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 71, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 10, 11, 14, 24, 25, 26, 27, 28, 30, 32, 34, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 102, 105], "excluded_lines": []}, "colossalai/auto_parallel/offload/mem_optimize.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 44, 46, 48, 49, 50], "excluded_lines": []}, "colossalai/auto_parallel/offload/region.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 82, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 82, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 10, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 45, 47, 48, 52, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 83, 84, 85, 86, 87, 88, 90, 92, 97, 98, 99, 100, 101, 103, 105, 106, 110, 119, 120, 121, 123, 125, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 143, 144, 145, 146], "excluded_lines": []}, "colossalai/auto_parallel/offload/region_manager.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 283, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 283, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 9, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 51, 53, 54, 55, 57, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 104, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 139, 144, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 208, 209, 210, 211, 212, 213, 215, 217, 222, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 239, 241, 246, 247, 248, 249, 250, 251, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 285, 287, 297, 298, 300, 302, 312, 313, 314, 315, 316, 317, 318, 320, 330, 331, 332, 333, 334, 335, 336, 340, 342, 344, 354, 356, 357, 358, 359, 360, 361, 363, 365, 366, 367, 368, 372, 374, 375, 379, 381, 383, 384, 387, 388, 389, 390, 393, 394, 396, 398, 399, 401, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 435, 436, 437, 438, 441, 444, 446, 449, 454, 455, 458, 459, 461, 462, 464, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 478, 480, 481, 482, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 498, 499, 500, 502, 509, 511, 512, 513], "excluded_lines": []}, "colossalai/auto_parallel/offload/runtime.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 146, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 146, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 10, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 47, 50, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 125, 126, 127, 130, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 162, 163, 166, 170, 171, 173, 175, 176, 177, 180, 181, 183, 185, 186, 188, 189, 190, 193, 195, 197, 200, 204, 207, 208, 209, 210, 211, 214, 215, 217, 219, 220, 221, 222, 223, 224, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 244, 246, 248, 249, 250, 251, 254, 256], "excluded_lines": []}, "colossalai/auto_parallel/offload/solver.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 259, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 259, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 16, 17, 18, 21, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 42, 53, 54, 56, 57, 58, 60, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 80, 94, 96, 97, 99, 111, 112, 113, 114, 116, 121, 122, 124, 133, 134, 135, 136, 137, 138, 140, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 197, 199, 200, 203, 204, 205, 207, 208, 210, 215, 216, 217, 219, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 254, 259, 260, 261, 263, 265, 266, 267, 269, 272, 273, 275, 287, 288, 290, 292, 293, 294, 296, 299, 300, 301, 303, 305, 306, 308, 310, 315, 316, 317, 318, 320, 329, 331, 332, 333, 334, 335, 339, 340, 341, 342, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363, 364, 365, 366, 368, 369, 371, 373, 374, 376, 381, 383, 389, 390, 391, 393, 394, 396, 397, 399, 402, 403, 404, 406, 408, 414, 415, 416, 418, 419, 421, 424, 425, 427, 429, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 452, 453, 454, 455, 456, 458, 459, 461, 462, 463, 465, 467, 468, 470, 472, 481, 482, 484, 485, 487, 490, 491, 493, 494, 495, 496, 497, 499, 500, 501], "excluded_lines": []}, "colossalai/auto_parallel/offload/training_simulator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 228, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 228, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 8, 9, 12, 13, 14, 15, 18, 29, 30, 31, 33, 34, 35, 37, 38, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 56, 58, 70, 71, 72, 75, 76, 77, 79, 80, 82, 83, 86, 87, 88, 90, 95, 96, 98, 99, 101, 107, 108, 110, 111, 112, 113, 114, 116, 117, 119, 125, 126, 129, 131, 133, 135, 136, 137, 138, 141, 142, 144, 147, 148, 149, 150, 151, 152, 154, 155, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 176, 178, 180, 182, 184, 186, 188, 191, 192, 194, 197, 202, 203, 205, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 227, 228, 229, 230, 232, 234, 239, 240, 241, 242, 243, 245, 246, 248, 253, 254, 255, 256, 258, 259, 260, 261, 262, 265, 266, 267, 269, 274, 275, 276, 277, 278, 280, 286, 287, 290, 291, 292, 295, 297, 303, 304, 305, 307, 308, 309, 312, 313, 314, 315, 317, 318, 319, 321, 322, 324, 325, 327, 328, 330, 336, 337, 338, 341, 342, 345, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 361, 366, 367, 369, 370, 373, 374, 375, 378, 379, 380, 383, 384, 385, 386, 389, 391, 393, 395, 396, 397, 398, 401, 403, 405, 408, 409, 410, 411, 412, 413, 415, 416, 423, 424], "excluded_lines": []}, "colossalai/auto_parallel/offload/util.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 58, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 9, 12, 13, 14, 15, 16, 19, 24, 25, 27, 28, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 70, 71, 73, 76, 77, 80, 81, 84, 85, 90, 91, 96, 97], "excluded_lines": []}, "colossalai/auto_parallel/passes/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/auto_parallel/passes/comm_metainfo_pass.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 60, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 60, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 17, 21, 25, 28, 30, 31, 33, 34, 35, 36, 37, 39, 42, 51, 52, 54, 55, 56, 58, 61, 67, 68, 69, 74, 77, 79, 81, 82, 84, 85, 86, 87, 89, 90, 96, 97, 98, 99, 102, 106, 108, 111, 117, 118, 119, 120, 121, 123, 124], "excluded_lines": []}, "colossalai/auto_parallel/passes/constants.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 13], "excluded_lines": []}, "colossalai/auto_parallel/passes/meta_info_prop.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 94, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 94, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 18, 19, 22, 23, 24, 25, 26, 35, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 54, 58, 60, 62, 63, 67, 68, 69, 70, 72, 73, 77, 78, 80, 81, 85, 86, 87, 88, 89, 90, 91, 93, 94, 98, 99, 100, 104, 105, 106, 108, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 127, 130, 131, 134, 135, 136, 139, 140, 143, 144, 147, 148, 149, 152, 153, 154, 155, 156, 161, 162, 163, 165], "excluded_lines": []}, "colossalai/auto_parallel/passes/runtime_apply_pass.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 146, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 146, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 9, 10, 12, 15, 20, 21, 22, 25, 32, 33, 36, 41, 42, 45, 49, 50, 51, 53, 54, 55, 56, 59, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 85, 89, 90, 92, 94, 95, 96, 98, 99, 100, 103, 104, 107, 108, 109, 110, 111, 118, 121, 122, 123, 124, 129, 130, 135, 136, 138, 140, 141, 142, 143, 145, 146, 148, 151, 155, 156, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 182, 184, 185, 186, 189, 190, 191, 193, 194, 195, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 222, 225, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 256, 257, 259], "excluded_lines": []}, "colossalai/auto_parallel/passes/runtime_preparation_pass.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 294, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 294, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 21, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 59, 61, 62, 65, 66, 67, 69, 70, 71, 76, 77, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 131, 138, 139, 140, 143, 144, 145, 147, 157, 158, 159, 160, 161, 162, 164, 171, 172, 174, 175, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 197, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 221, 222, 226, 227, 229, 232, 233, 238, 240, 241, 257, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 277, 280, 284, 285, 287, 292, 293, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 308, 309, 310, 316, 317, 318, 319, 320, 322, 324, 327, 328, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 349, 351, 353, 354, 356, 358, 360, 361, 362, 363, 364, 366, 368, 369, 370, 372, 374, 375, 377, 378, 379, 381, 384, 389, 390, 392, 394, 395, 397, 398, 404, 405, 410, 411, 413, 414, 416, 418, 419, 420, 421, 422, 424, 426, 428, 430, 432, 433, 434, 438, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458, 459, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 489, 490, 491, 493, 496, 502, 509, 512, 513, 516, 518], "excluded_lines": []}, "colossalai/auto_parallel/pipeline_shard/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/constants.py": {"executed_lines": [1, 3, 5, 24, 25, 36, 42, 50, 57, 73, 81, 89, 90, 91, 92, 93, 94, 95, 125], "summary": {"covered_lines": 19, "num_statements": 19, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/initialize.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 120, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 120, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 42, 43, 44, 45, 46, 48, 49, 58, 65, 73, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 111, 112, 114, 117, 126, 127, 128, 129, 130, 132, 135, 149, 152, 153, 154, 155, 157, 160, 182, 183, 185, 186, 187, 189, 191, 192, 194, 196, 198, 199, 200, 203, 205, 206, 209, 211, 218, 221, 261, 263, 264, 265, 267, 268, 270, 277, 278, 280, 281, 282, 284, 288, 290, 291, 292, 293, 294, 295, 297, 300, 349, 352, 353, 355, 369, 370, 371, 373, 374], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 26, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/addmm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 44, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 44, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 9, 11, 14, 15, 16, 23, 24, 25, 27, 28, 30, 32, 33, 38, 39, 43, 44, 45, 53, 55, 62, 64, 65, 66, 67, 70, 72, 74, 76, 77, 78, 79, 80, 83, 85, 86, 89, 91], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/batch_norm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 30, 33, 39, 41, 48, 55, 62, 71, 72, 75, 76], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/binary_elementwise_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 62, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 62, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 8, 9, 10, 11, 12, 14, 17, 18, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 47, 48, 49, 51, 53, 54, 55, 58, 60, 66, 72, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 91, 93, 94, 96, 101, 102, 103, 104, 108, 109, 110, 113, 115], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/bmm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 55, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 55, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 9, 11, 14, 20, 25, 30, 31, 33, 35, 36, 42, 43, 46, 47, 48, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 92, 94, 95, 96, 97, 98, 99, 102, 104, 105, 108, 110], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/conv_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 65, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 65, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 23, 24, 25, 26, 27, 29, 32, 35, 36, 40, 46, 48, 50, 51, 54, 55, 57, 61, 62, 63, 64, 67, 68, 69, 70, 75, 76, 77, 78, 79, 81, 84, 89, 90, 92, 94, 95, 99, 105, 107, 109, 111, 112, 114, 115, 118, 119, 121, 125, 126, 127, 128], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/default_reshape_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 50, 51, 53, 55, 56, 57, 61, 62, 63, 67, 69], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/embedding_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 89, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 89, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 18, 31, 34, 35, 36, 37, 40, 41, 44, 49, 53, 54, 55, 56, 57, 58, 60, 67, 68, 70, 72, 79, 80, 82, 83, 90, 91, 92, 95, 99, 100, 102, 104, 110, 112, 115, 116, 121, 122, 123, 124, 125, 127, 132, 133, 134, 141, 150, 151, 152, 159, 161, 163, 170, 173, 176, 177, 182, 183, 184, 185, 186, 188, 193, 194, 195, 203, 204, 206, 208, 217, 218, 219, 226, 228, 230, 237, 240], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/getattr_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 15, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 10, 15, 16, 17, 18, 19, 21, 30, 32, 34], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/getitem_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 8, 9, 11, 14, 15, 20, 21, 22, 23, 24, 26, 28, 30, 33, 36, 37, 39, 41], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/layer_norm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 19, 20, 21, 22, 23, 25, 28, 31, 37, 39, 41, 42, 45, 46], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/linear_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 117, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 117, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 18, 30, 31, 32, 35, 36, 37, 40, 55, 58, 59, 60, 61, 64, 65, 66, 67, 69, 70, 72, 74, 75, 77, 80, 86, 90, 91, 92, 93, 94, 95, 97, 98, 100, 106, 107, 109, 115, 116, 117, 118, 125, 126, 127, 130, 131, 132, 139, 140, 141, 147, 148, 151, 152, 157, 158, 159, 160, 168, 170, 173, 174, 175, 181, 187, 188, 189, 196, 198, 199, 202, 203, 205, 212, 217, 220, 223, 224, 229, 230, 231, 232, 235, 237, 240, 241, 242, 250, 251, 253, 255, 261, 262, 263, 270, 272, 274, 275, 277, 278, 281, 283, 285, 287, 293, 296], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/matmul_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 266, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 266, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 8, 10, 15, 17, 18, 19, 20, 21, 30, 41, 42, 43, 44, 47, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 70, 76, 77, 78, 80, 81, 82, 85, 90, 92, 94, 95, 96, 97, 99, 102, 103, 104, 105, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 124, 127, 128, 129, 130, 133, 135, 138, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 164, 165, 167, 168, 171, 172, 175, 178, 181, 182, 183, 184, 187, 188, 189, 191, 192, 194, 196, 198, 199, 200, 201, 203, 204, 209, 210, 213, 215, 217, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 241, 242, 244, 245, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 268, 269, 270, 271, 274, 275, 276, 277, 280, 281, 282, 285, 286, 288, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 317, 319, 320, 322, 323, 324, 326, 329, 330, 331, 338, 339, 342, 343, 344, 346, 347, 348, 350, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 373, 374, 380, 381, 382, 384, 386, 387, 389, 390, 392, 393, 396, 402, 408, 415, 416, 418, 422, 424, 430, 431, 432, 434, 435, 437, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 455, 456, 457, 460, 461, 464, 465, 466, 467, 468, 469, 472, 477, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 498, 499, 500], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/node_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 162, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 162, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 9, 16, 17, 18, 19, 21, 24, 34, 42, 43, 44, 45, 46, 47, 48, 50, 55, 56, 58, 59, 64, 65, 66, 68, 69, 72, 75, 76, 81, 82, 84, 92, 93, 94, 95, 96, 97, 98, 102, 107, 112, 114, 119, 120, 121, 122, 125, 128, 129, 130, 131, 132, 137, 138, 139, 140, 141, 143, 148, 149, 151, 152, 153, 154, 155, 156, 158, 160, 162, 166, 167, 168, 172, 173, 175, 176, 177, 179, 183, 184, 185, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 224, 226, 227, 232, 233, 255, 263, 268, 269, 273, 274, 275, 276, 277, 278, 279, 282, 285, 286, 288, 291, 292, 293, 296, 299, 300, 301, 303, 304, 305, 306, 307, 310, 318, 323, 324, 328, 329, 330, 331, 332, 333, 334, 337, 340, 341, 343], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/normal_pooling_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 25, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 24, 25, 26, 27, 28, 30, 33, 36, 37, 39, 41], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/output_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 7, 8, 9, 11, 14, 19, 22, 23, 25, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 52, 53], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/permute_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 44, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 44, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 53, 56, 58, 59, 61, 62, 64, 66, 67, 69, 75], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/placeholder_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 20, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 7, 8, 9, 11, 14, 19, 22, 23, 25, 26, 27, 28, 31, 33, 36, 38, 40], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/registry.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 16, 18, 19, 20, 21, 23, 24, 27], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/softmax_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 30, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 21, 22, 23, 24, 25, 27, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 55], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/split_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 34, 35, 36, 38, 40, 41, 43, 45, 47, 48, 50, 51, 53, 54, 56, 62], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 16, 17, 24, 25, 26, 27, 28, 29, 31], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/batch_norm_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 115, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 115, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 12, 13, 15, 17, 20, 32, 39, 40, 46, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 82, 83, 84, 86, 87, 90, 93, 94, 95, 99, 102, 103, 106, 111, 112, 114, 115, 116, 117, 125, 126, 128, 130, 132, 138, 139, 140, 141, 149, 150, 152, 154, 156, 162, 163, 164, 165, 173, 174, 176, 178, 180, 186, 187, 188, 189, 197, 198, 200, 206, 215, 217, 223, 224, 225, 226, 234, 235, 237, 243, 252, 254, 260, 261, 262, 263, 283, 284, 288, 294, 303, 305, 311, 316, 318, 319, 322, 325, 334, 335, 338, 339, 342, 344], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/binary_elementwise_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 58, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 8, 13, 15, 17, 20, 28, 29, 32, 33, 34, 36, 37, 42, 43, 44, 47, 49, 51, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 73, 74, 77, 78, 79, 80, 83, 86, 89, 90, 94, 95, 96, 99, 100, 101, 106, 107, 108, 109, 111, 112, 113], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/conv_strategy_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 205, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 205, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 12, 13, 15, 18, 24, 31, 32, 38, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 85, 86, 87, 89, 90, 93, 94, 95, 99, 100, 101, 104, 107, 108, 110, 111, 112, 114, 119, 120, 122, 125, 132, 134, 135, 143, 151, 153, 154, 155, 162, 169, 171, 177, 178, 179, 181, 188, 189, 191, 193, 194, 195, 203, 211, 213, 214, 215, 222, 229, 231, 237, 238, 239, 241, 251, 252, 254, 257, 264, 266, 267, 275, 282, 283, 284, 285, 292, 299, 301, 307, 308, 309, 311, 324, 325, 329, 332, 338, 346, 348, 354, 355, 356, 358, 368, 369, 371, 374, 381, 383, 389, 390, 391, 393, 403, 404, 408, 411, 419, 421, 427, 428, 429, 431, 437, 438, 440, 442, 446, 447, 448, 450, 460, 461, 463, 465, 466, 467, 474, 482, 484, 485, 486, 493, 500, 502, 508, 509, 510, 511, 521, 522, 524, 527, 534, 536, 542, 543, 544, 545, 555, 556, 560, 563, 571, 573, 579, 580, 582, 583, 586, 587, 590, 591, 594, 595, 598, 599, 602, 603, 606, 609, 612, 615, 617], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/embedding_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 106, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 106, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 12, 13, 15, 18, 24, 25, 27, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 49, 51, 52, 54, 55, 61, 62, 65, 66, 67, 71, 72, 73, 76, 79, 80, 82, 83, 84, 86, 92, 94, 98, 99, 100, 102, 110, 112, 113, 114, 122, 130, 132, 138, 139, 140, 142, 155, 158, 165, 167, 168, 176, 184, 186, 192, 193, 194, 196, 204, 207, 209, 210, 218, 226, 228, 234, 235, 236, 238, 248, 251, 259, 261, 267, 268, 269, 271, 281, 284, 292, 294, 300, 301, 304, 307, 308, 311, 312, 315, 318, 319, 322, 324], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/getattr_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 45, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 9, 11, 13, 16, 21, 22, 24, 25, 26, 28, 32, 36, 37, 39, 42, 43, 44, 46, 47, 49, 50, 53, 54, 57, 58, 59, 60, 63, 66, 69, 70, 72, 73, 74, 77, 78, 83, 84, 85, 87, 89, 90], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/getitem_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 92, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 92, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 10, 13, 24, 25, 27, 28, 29, 31, 35, 40, 41, 44, 45, 46, 50, 51, 52, 55, 58, 59, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 85, 86, 87, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 111, 115, 117, 119, 124, 125, 126, 127, 129, 130, 131, 132, 134, 137, 142, 143, 144, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 163, 169, 171], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/layer_norm_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 99, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 99, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 12, 17, 19, 21, 24, 30, 31, 33, 42, 43, 44, 46, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 68, 74, 75, 76, 78, 79, 82, 83, 84, 88, 89, 90, 93, 96, 97, 99, 100, 101, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 120, 126, 128, 129, 135, 137, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 169, 170, 172, 174, 176, 182, 186, 187, 188, 190, 193, 194, 197, 200, 202], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/matmul_strategy_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 387, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 387, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 12, 13, 15, 18, 24, 25, 31, 32, 33, 37, 38, 39, 43, 44, 47, 50, 51, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 86, 87, 90, 96, 97, 103, 104, 108, 112, 113, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 138, 139, 140, 141, 145, 146, 147, 150, 156, 157, 158, 161, 162, 163, 170, 177, 179, 180, 181, 188, 195, 197, 203, 204, 207, 210, 211, 213, 216, 217, 224, 225, 226, 228, 233, 234, 235, 236, 237, 239, 240, 241, 244, 246, 247, 250, 252, 254, 255, 258, 261, 264, 265, 268, 269, 272, 273, 275, 277, 278, 281, 282, 285, 286, 289, 291, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 310, 311, 319, 320, 321, 322, 324, 326, 329, 330, 338, 339, 346, 354, 355, 359, 360, 361, 368, 375, 377, 383, 384, 386, 389, 398, 399, 400, 401, 403, 405, 408, 410, 417, 418, 425, 433, 434, 438, 439, 440, 447, 454, 456, 462, 463, 464, 467, 477, 480, 481, 487, 494, 495, 496, 502, 503, 504, 507, 515, 518, 519, 526, 527, 533, 534, 535, 538, 546, 549, 550, 558, 559, 565, 566, 567, 569, 578, 579, 580, 581, 583, 585, 588, 589, 590, 597, 604, 608, 609, 610, 617, 624, 625, 631, 632, 633, 636, 645, 648, 649, 655, 657, 663, 664, 665, 668, 677, 680, 681, 688, 690, 696, 697, 698, 701, 710, 713, 715, 721, 722, 723, 726, 727, 728, 729, 731, 732, 733, 736, 751, 752, 753, 755, 757, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 776, 777, 780, 781, 784, 786, 787, 788, 791, 792, 793, 794, 797, 798, 799, 806, 807, 813, 814, 815, 816, 822, 823, 824, 827, 828, 829, 836, 838, 844, 845, 846, 847, 853, 854, 855, 858, 859, 866, 868, 869, 876, 878, 880, 886, 887, 888, 889, 895, 896, 897, 900, 901, 908, 910, 911, 917, 919, 921, 927, 928, 929, 930, 938, 939, 940, 943, 944, 950, 952, 953, 960, 962, 968, 969, 970, 971, 972, 974, 979, 980, 982, 983, 988, 989, 993, 994, 998, 999, 1002, 1004], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/normal_pooling_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 58, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 13, 16, 23, 30, 31, 37, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 65, 66, 71, 72, 75, 76, 80, 81, 84, 85, 86, 88, 89, 90, 92, 94, 97, 99, 105, 107, 108, 109, 110, 111, 113, 115, 117, 118, 120, 121, 122, 123, 125], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/output_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 62, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 62, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 11, 13, 15, 18, 23, 30, 31, 33, 34, 36, 37, 38, 40, 44, 46, 49, 50, 51, 53, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 71, 73, 75, 76, 78, 80, 85, 87, 92, 93, 94, 95, 99, 102, 103, 104, 106, 107, 109, 111, 116, 118, 119, 120, 121, 122, 123, 124, 126], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/placeholder_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 46, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [1, 3, 9, 11, 13, 16, 21, 24, 25, 27, 28, 30, 31, 32, 34, 38, 42, 43, 45, 48, 49, 50, 52, 56, 59, 60, 62, 64, 70, 72, 76, 79, 80, 82, 84, 90, 92, 93, 94, 95, 96, 97, 99, 102, 103, 105], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/reshape_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 179, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 179, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 12, 17, 18, 20, 23, 28, 29, 31, 32, 33, 35, 39, 44, 45, 48, 49, 50, 54, 55, 56, 59, 62, 63, 65, 66, 69, 74, 75, 76, 77, 78, 79, 81, 82, 84, 86, 87, 89, 90, 94, 96, 100, 105, 106, 108, 111, 112, 113, 115, 116, 118, 119, 127, 129, 131, 132, 133, 136, 137, 140, 142, 143, 145, 150, 152, 155, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 178, 183, 185, 190, 192, 195, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 224, 229, 231, 236, 238, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 262, 263, 267, 271, 274, 276, 277, 278, 286, 288, 290, 292, 294, 295, 296, 299, 301, 302, 304, 309, 311, 314, 320, 321, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 343, 345, 346, 347, 349, 350, 351, 358, 359, 361, 362, 363, 366, 367, 370, 372, 373, 374, 379, 381], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/softmax_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 50, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 9, 12, 17, 18, 20, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 39, 44, 45, 48, 49, 50, 54, 55, 56, 59, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 82, 86, 88, 93, 95], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/strategy_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 134, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 134, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 9, 17, 18, 19, 20, 23, 30, 31, 32, 35, 37, 38, 42, 44, 45, 46, 48, 49, 50, 52, 65, 66, 67, 69, 81, 82, 83, 84, 86, 92, 93, 94, 95, 100, 101, 102, 103, 106, 109, 111, 113, 114, 115, 117, 121, 122, 123, 124, 125, 127, 136, 140, 152, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 203, 204, 209, 210, 215, 223, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 246, 247, 250, 251, 254, 256, 258, 262, 267, 273, 274, 275, 276, 278, 280, 281, 282, 284, 285, 292, 299, 302, 303, 304, 307, 312, 315, 316], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/sum_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 54, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 9, 12, 17, 18, 20, 21, 22, 23, 24, 26, 30, 32, 36, 41, 42, 45, 46, 47, 51, 52, 53, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 86, 90, 94, 96, 101, 103], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/tensor_constructor_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 7, 10, 16, 17, 19, 20, 21, 23, 27, 31, 32, 33, 36, 39, 40, 41, 43, 44, 45, 48, 49, 51, 53, 58, 60], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/unary_elementwise_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 8, 11, 16, 17, 19, 20, 21, 23, 27, 32, 33, 36, 37, 38, 42, 43, 44, 47, 50, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 68, 72, 73, 78, 80], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/strategy/where_generator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 46, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 11, 13, 16, 21, 22, 24, 25, 26, 28, 32, 39, 40, 43, 44, 48, 49, 52, 53, 54, 56, 57, 58, 65, 67, 68, 70, 76, 78, 79, 80, 81, 82, 84, 86, 88, 92, 94, 95, 96, 97, 98, 100], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/sum_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 46, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 34, 36, 37, 39, 41, 42, 45, 46, 47, 48, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 75, 81], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/tensor_constructor_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 20, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 9, 11, 14, 15, 20, 21, 22, 23, 24, 26, 27, 28, 30, 32], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/transpose_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 20, 21, 22, 23, 24, 26, 28, 29, 31, 33, 34, 36, 38, 39, 40, 41, 43, 45, 46, 48, 49, 51, 55, 56, 58, 64], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/unary_elementwise_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 27, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 27, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 33, 36, 39, 41, 43], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/view_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 32, 33, 35, 37, 38, 40, 41, 43, 44, 46, 52], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/node_handler/where_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 42, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 8, 9, 10, 12, 15, 16, 21, 22, 23, 24, 25, 27, 30, 33, 36, 39, 40, 46, 47, 48, 49, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/options.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 20, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 7, 12, 13, 14, 17, 30, 31, 32, 33, 36, 41, 42, 45, 46, 51, 52, 53], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/sharding_strategy.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 9, 10, 12, 20, 23, 24, 28, 29, 30, 31, 32, 35, 36, 37, 47, 48, 49, 50, 52, 72, 75, 78, 82, 83, 84, 93, 94, 95, 98, 99, 100, 110, 111, 112, 113, 116, 117, 127, 128, 129, 130, 133, 134, 135, 145, 146, 147, 148, 151, 152, 153, 165, 166, 167, 168, 169, 170, 171, 173, 174, 180, 181, 184, 185, 188, 189, 192, 196, 202, 208, 237, 238, 246, 254], "summary": {"covered_lines": 72, "num_statements": 136, "percent_covered": 52.94117647058823, "percent_covered_display": "53", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [54, 56, 60, 61, 62, 63, 64, 65, 66, 68, 70, 73, 76, 79, 175, 176, 177, 178, 182, 186, 190, 193, 194, 197, 198, 199, 200, 203, 204, 205, 206, 209, 210, 212, 217, 221, 222, 223, 224, 226, 247, 248, 251, 252, 255, 256, 257, 258, 259, 260, 263, 264, 266, 268, 269, 275, 276, 278, 280, 281, 282, 283, 284, 285], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/solver/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 5, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/solver/cost_graph.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 131, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 131, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 95, 96, 98, 99, 101, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/solver/graph_analysis.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 91, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 91, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 10, 13, 14, 19, 20, 21, 24, 29, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 48, 49, 50, 51, 54, 55, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 76, 78, 79, 83, 85, 90, 91, 98, 99, 100, 102, 108, 109, 111, 112, 113, 115, 116, 117, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 142, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/solver/solver.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 274, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 274, "excluded_lines": 0}, "missing_lines": [5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 29, 30, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 70, 71, 73, 75, 76, 78, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 144, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 169, 171, 174, 175, 179, 180, 181, 182, 184, 185, 187, 188, 189, 192, 194, 211, 232, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 269, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 324, 325, 327, 328, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 362, 363, 364, 367, 371, 372, 373, 374, 376, 381, 382, 383, 385, 394, 395, 396, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 418, 421, 422, 423, 426, 427, 428, 429, 451, 452, 453, 457, 459, 461, 462, 463, 464, 465, 466, 468, 469, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 492, 493, 495, 497, 502, 503, 504, 506, 508, 509, 512, 513, 514, 515, 516, 517, 519], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/solver/strategies_constructor.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 109, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 109, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 10, 11, 12, 14, 16, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 67, 68, 69, 70, 72, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 96, 99, 100, 101, 103, 106, 107, 110, 113, 114, 121, 124, 125, 126, 127, 128, 135, 137, 138, 141, 142, 143, 150, 152, 153, 156, 157, 158, 165, 167, 168, 171, 172, 173, 175, 178, 179, 180, 182, 183, 184, 185, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/utils/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 6, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [1, 8, 9, 10, 11, 19], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/utils/broadcast.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 77, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 77, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 13, 14, 16, 25, 26, 27, 28, 31, 35, 36, 37, 39, 40, 43, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 61, 63, 64, 66, 71, 73, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 89, 92, 107, 108, 109, 112, 113, 116, 119, 120, 122, 123, 125, 126, 129, 130, 132, 138, 141, 148, 150, 151, 156, 157, 159, 160, 161, 162, 163, 164, 165, 170], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/utils/factory.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 123, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 123, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 17, 20, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 51, 52, 55, 72, 73, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 93, 94, 95, 96, 97, 98, 101, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 166, 168, 170, 172, 173, 174, 175, 176, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 207, 208, 209, 211], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/utils/misc.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 45, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 9, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 47, 48, 49, 50, 51, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 69, 74, 79, 91, 92, 93, 94, 95, 96, 97, 98, 100], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/utils/reshape.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 86, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 86, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 7, 12, 14, 16, 19, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 59, 60, 63, 64, 68, 69, 73, 74, 75, 77, 78, 82, 83, 84, 86, 87, 89, 91, 92, 94, 98, 99, 100, 101, 102, 104, 107, 108, 109, 112, 114, 118, 119, 120, 121, 122, 124, 127, 128, 129, 131, 134, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 184, 187, 188, 189, 190, 191, 192, 195, 196], "excluded_lines": []}, "colossalai/auto_parallel/tensor_shard/utils/sharding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 61, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 61, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 8, 10, 19, 28, 29, 32, 33, 35, 36, 37, 38, 41, 42, 43, 46, 47, 50, 62, 63, 65, 67, 68, 71, 72, 73, 75, 76, 77, 79, 82, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 105, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 121], "excluded_lines": []}, "colossalai/booster/__init__.py": {"executed_lines": [1, 2, 3], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/booster/accelerator.py": {"executed_lines": [1, 2, 4, 6, 16, 17, 24, 31, 46], "summary": {"covered_lines": 8, "num_statements": 17, "percent_covered": 47.05882352941177, "percent_covered_display": "47", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [25, 27, 35, 36, 37, 42, 44, 53, 54], "excluded_lines": []}, "colossalai/booster/booster.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 19, 20, 21, 22, 24, 25, 26, 27, 29, 32, 33, 73, 119, 168, 178, 216, 233, 283, 296, 330, 343, 368, 377, 386], "summary": {"covered_lines": 35, "num_statements": 103, "percent_covered": 33.980582524271846, "percent_covered_display": "34", "missing_lines": 68, "excluded_lines": 0}, "missing_lines": [16, 17, 79, 80, 83, 86, 87, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 103, 105, 106, 108, 110, 114, 115, 117, 144, 146, 147, 151, 153, 155, 158, 160, 161, 163, 164, 166, 176, 211, 214, 227, 230, 231, 252, 253, 255, 256, 257, 258, 261, 264, 265, 268, 269, 270, 274, 281, 294, 320, 341, 366, 375, 384, 397, 398, 399, 400, 401], "excluded_lines": []}, "colossalai/booster/mixed_precision/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 19, 28], "summary": {"covered_lines": 9, "num_statements": 12, "percent_covered": 75.0, "percent_covered_display": "75", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [36, 37, 39], "excluded_lines": []}, "colossalai/booster/mixed_precision/bf16.py": {"executed_lines": [1, 4, 5], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/booster/mixed_precision/fp16_apex.py": {"executed_lines": [1, 3, 5, 8, 9, 26], "summary": {"covered_lines": 5, "num_statements": 6, "percent_covered": 83.33333333333333, "percent_covered_display": "83", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [40], "excluded_lines": []}, "colossalai/booster/mixed_precision/fp16_naive.py": {"executed_lines": [1, 4, 5, 18], "summary": {"covered_lines": 3, "num_statements": 4, "percent_covered": 75.0, "percent_covered_display": "75", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [28], "excluded_lines": []}, "colossalai/booster/mixed_precision/fp16_torch.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 11, 13, 16, 17, 33, 49, 53, 58, 61, 64, 68, 80, 81, 88, 91, 96, 97, 112, 127], "summary": {"covered_lines": 23, "num_statements": 47, "percent_covered": 48.93617021276596, "percent_covered_display": "49", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [41, 42, 50, 51, 54, 55, 56, 59, 62, 65, 66, 76, 77, 89, 92, 93, 119, 120, 133, 134, 135, 136, 137, 138], "excluded_lines": []}, "colossalai/booster/mixed_precision/fp8.py": {"executed_lines": [1, 4, 5], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/booster/mixed_precision/mixed_precision_base.py": {"executed_lines": [1, 2, 4, 5, 7, 10, 11, 15, 16], "summary": {"covered_lines": 8, "num_statements": 9, "percent_covered": 88.88888888888889, "percent_covered_display": "89", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [23], "excluded_lines": []}, "colossalai/booster/plugin/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 9, 10, 12, 13, 15], "summary": {"covered_lines": 11, "num_statements": 11, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/booster/plugin/dp_plugin_base.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 12, 13, 15, 23], "summary": {"covered_lines": 10, "num_statements": 23, "percent_covered": 43.47826086956522, "percent_covered_display": "43", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [16, 17, 20, 21, 56, 57, 58, 61, 62, 63, 64, 65, 67], "excluded_lines": []}, "colossalai/booster/plugin/gemini_plugin.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 28, 29, 30, 31, 32, 34, 36, 38, 39, 41, 44, 62, 63, 67, 78, 86, 98, 106, 152, 161, 210, 246, 254, 255, 326, 440, 444, 447, 450, 453, 456, 459, 462, 526, 571, 574, 577, 580], "summary": {"covered_lines": 55, "num_statements": 192, "percent_covered": 28.645833333333332, "percent_covered_display": "29", "missing_lines": 137, "excluded_lines": 0}, "missing_lines": [47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 64, 65, 73, 74, 75, 76, 83, 84, 93, 94, 95, 96, 103, 104, 119, 120, 121, 122, 124, 126, 127, 128, 131, 132, 142, 143, 144, 145, 146, 158, 159, 168, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 201, 202, 203, 204, 215, 216, 217, 219, 222, 225, 226, 227, 231, 232, 234, 238, 239, 240, 241, 242, 244, 250, 251, 366, 367, 368, 369, 370, 390, 393, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 421, 422, 425, 426, 427, 429, 442, 445, 448, 451, 454, 457, 460, 495, 496, 497, 498, 499, 500, 501, 509, 510, 511, 512, 513, 515, 534, 535, 546, 547, 548, 550, 558, 559, 569, 572, 575, 578, 583], "excluded_lines": []}, "colossalai/booster/plugin/hybrid_parallel_plugin.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 42, 48, 49, 106, 113, 114, 136, 160, 192, 198, 205, 234, 243, 244, 267, 294, 320, 342, 420, 439, 442, 445, 449, 450, 491, 517, 542, 624, 625, 679, 697, 744, 769, 794, 880, 881, 948, 1136, 1140, 1141, 1144, 1147, 1150, 1153, 1156, 1159, 1162, 1165, 1246, 1294, 1354, 1357, 1363], "summary": {"covered_lines": 86, "num_statements": 496, "percent_covered": 17.338709677419356, "percent_covered_display": "17", "missing_lines": 410, "excluded_lines": 0}, "missing_lines": [43, 44, 45, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 100, 102, 104, 107, 108, 109, 110, 111, 122, 124, 125, 126, 128, 129, 131, 134, 149, 150, 153, 154, 156, 158, 174, 175, 176, 178, 181, 183, 185, 187, 190, 193, 194, 195, 196, 199, 200, 201, 202, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 231, 235, 236, 237, 238, 239, 240, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 285, 287, 289, 292, 311, 313, 315, 318, 329, 331, 334, 337, 340, 354, 355, 357, 360, 362, 363, 364, 367, 368, 369, 370, 371, 374, 376, 378, 379, 380, 387, 388, 389, 390, 396, 397, 398, 399, 400, 401, 403, 405, 408, 410, 411, 413, 416, 418, 430, 431, 433, 434, 435, 436, 437, 440, 443, 446, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 508, 510, 512, 515, 533, 535, 537, 540, 553, 554, 556, 558, 561, 563, 567, 568, 569, 570, 572, 576, 578, 580, 581, 582, 589, 590, 591, 592, 598, 599, 600, 601, 602, 603, 604, 606, 608, 611, 613, 614, 616, 619, 621, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 695, 713, 715, 716, 717, 718, 719, 721, 723, 724, 725, 726, 727, 728, 730, 731, 733, 736, 737, 738, 740, 742, 760, 762, 764, 767, 785, 787, 789, 792, 807, 808, 810, 811, 812, 813, 815, 818, 820, 824, 825, 826, 827, 829, 831, 832, 833, 840, 841, 842, 844, 845, 851, 852, 853, 854, 855, 856, 857, 859, 861, 864, 866, 867, 869, 870, 872, 875, 877, 992, 993, 997, 998, 999, 1002, 1003, 1006, 1007, 1010, 1011, 1012, 1013, 1016, 1019, 1020, 1022, 1023, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1063, 1064, 1065, 1072, 1073, 1080, 1082, 1083, 1084, 1085, 1086, 1088, 1090, 1106, 1116, 1125, 1134, 1138, 1142, 1145, 1148, 1151, 1154, 1157, 1160, 1163, 1173, 1174, 1175, 1181, 1182, 1184, 1185, 1196, 1197, 1198, 1199, 1211, 1221, 1222, 1223, 1228, 1229, 1243, 1244, 1257, 1259, 1260, 1266, 1268, 1269, 1274, 1277, 1280, 1282, 1287, 1288, 1290, 1292, 1327, 1328, 1329, 1337, 1338, 1339, 1340, 1341, 1343, 1355, 1358, 1361, 1366], "excluded_lines": []}, "colossalai/booster/plugin/low_level_zero_plugin.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 30, 31, 32, 34, 35, 37, 40, 46, 49, 50, 51, 52, 55, 56, 71, 78, 79, 95, 162, 205, 210, 222, 236, 237, 272, 320, 323, 326, 329, 332, 335, 338, 341, 363, 371, 387, 411, 440, 443, 446], "summary": {"covered_lines": 57, "num_statements": 218, "percent_covered": 26.146788990825687, "percent_covered_display": "26", "missing_lines": 161, "excluded_lines": 0}, "missing_lines": [41, 42, 43, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 87, 91, 92, 93, 117, 118, 119, 120, 122, 125, 127, 130, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 170, 171, 174, 177, 178, 179, 183, 185, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 218, 219, 220, 223, 224, 225, 226, 228, 229, 230, 233, 292, 293, 294, 295, 296, 297, 298, 314, 315, 318, 321, 324, 327, 330, 333, 336, 339, 348, 350, 351, 352, 354, 355, 357, 358, 360, 361, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 409, 419, 420, 422, 425, 426, 428, 429, 431, 432, 436, 438, 441, 444, 447, 448], "excluded_lines": []}, "colossalai/booster/plugin/moe_hybrid_parallel_plugin.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 36, 92, 93, 149, 300, 347, 354], "summary": {"covered_lines": 29, "num_statements": 116, "percent_covered": 25.0, "percent_covered_display": "25", "missing_lines": 87, "excluded_lines": 0}, "missing_lines": [62, 63, 64, 65, 66, 67, 68, 69, 70, 187, 191, 192, 193, 196, 199, 200, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 249, 250, 251, 254, 255, 256, 258, 260, 271, 281, 290, 298, 324, 325, 330, 331, 332, 333, 334, 336, 348, 349, 351, 352, 362, 363, 364, 365, 376, 377, 378, 379, 389, 393, 394, 395, 410, 412], "excluded_lines": []}, "colossalai/booster/plugin/plugin_base.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 12, 15, 16, 17, 20, 21, 24, 25, 28, 29, 32, 33, 36, 37, 40, 41, 52, 53, 58, 59, 64, 65, 70, 71, 76, 77], "summary": {"covered_lines": 34, "num_statements": 41, "percent_covered": 82.92682926829268, "percent_covered_display": "83", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [18, 22, 26, 30, 34, 38, 50], "excluded_lines": []}, "colossalai/booster/plugin/pp_plugin_base.py": {"executed_lines": [1, 2, 4, 6, 8, 11, 12, 13], "summary": {"covered_lines": 8, "num_statements": 9, "percent_covered": 88.88888888888889, "percent_covered_display": "89", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [22], "excluded_lines": []}, "colossalai/booster/plugin/torch_ddp_plugin.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 16, 19, 20, 24, 31, 39, 46, 54, 61, 79, 93, 108, 120, 137, 138, 142, 146, 147, 171, 190, 193, 196, 199, 202, 205, 208, 230, 233, 236, 240], "summary": {"covered_lines": 40, "num_statements": 98, "percent_covered": 40.816326530612244, "percent_covered_display": "41", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [21, 22, 28, 29, 35, 36, 37, 43, 44, 50, 51, 52, 58, 59, 73, 74, 75, 90, 91, 104, 105, 106, 117, 118, 126, 128, 129, 130, 131, 134, 139, 140, 143, 180, 181, 191, 194, 197, 200, 203, 206, 217, 220, 223, 225, 226, 228, 231, 234, 237, 238, 247, 249, 250, 252, 253, 254, 256], "excluded_lines": []}, "colossalai/booster/plugin/torch_fsdp_plugin.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 26, 27, 28, 30, 31, 32, 34, 36, 39, 40, 44, 50, 57, 68, 77, 126, 156, 209, 242, 250, 251, 255, 259, 260, 264, 268, 269, 288, 290, 318, 321, 324, 327, 330, 333, 336, 339, 362, 365, 368], "summary": {"covered_lines": 53, "num_statements": 166, "percent_covered": 31.927710843373493, "percent_covered_display": "32", "missing_lines": 113, "excluded_lines": 0}, "missing_lines": [24, 41, 42, 45, 46, 47, 48, 51, 52, 53, 54, 55, 61, 62, 63, 64, 65, 66, 72, 73, 74, 75, 89, 90, 91, 92, 94, 95, 98, 100, 102, 103, 106, 116, 117, 118, 119, 120, 137, 138, 139, 140, 142, 143, 146, 147, 149, 150, 151, 153, 154, 162, 164, 165, 166, 168, 170, 175, 179, 181, 182, 184, 185, 186, 188, 192, 201, 202, 203, 213, 215, 218, 219, 220, 225, 228, 229, 230, 231, 232, 234, 236, 237, 240, 246, 247, 252, 253, 256, 261, 262, 265, 302, 303, 316, 319, 322, 325, 328, 331, 334, 337, 348, 350, 351, 352, 355, 357, 358, 360, 363, 366, 371], "excluded_lines": []}, "colossalai/checkpoint_io/__init__.py": {"executed_lines": [1, 2, 3, 4, 6], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/checkpoint_io/checkpoint_io_base.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 12, 14, 17, 18, 64, 105, 147, 171, 204, 205, 216, 217, 228, 229, 250, 251, 266, 267, 277, 278, 287, 288, 302, 303, 318, 328, 343, 344], "summary": {"covered_lines": 35, "num_statements": 62, "percent_covered": 56.45161290322581, "percent_covered_display": "56", "missing_lines": 27, "excluded_lines": 0}, "missing_lines": [85, 88, 90, 91, 93, 94, 95, 97, 98, 99, 101, 103, 142, 143, 145, 159, 161, 163, 165, 167, 169, 196, 197, 199, 326, 336, 337], "excluded_lines": []}, "colossalai/checkpoint_io/general_checkpoint_io.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 31, 34, 35, 39, 43, 53, 78, 133, 137, 146, 191, 232], "summary": {"covered_lines": 22, "num_statements": 88, "percent_covered": 25.0, "percent_covered_display": "25", "missing_lines": 66, "excluded_lines": 0}, "missing_lines": [40, 41, 44, 47, 48, 51, 59, 62, 63, 64, 68, 70, 72, 73, 74, 76, 94, 95, 96, 98, 101, 102, 105, 106, 109, 110, 111, 115, 125, 126, 127, 134, 135, 144, 159, 160, 161, 163, 166, 167, 168, 169, 173, 182, 183, 184, 185, 202, 203, 204, 206, 207, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 233], "excluded_lines": []}, "colossalai/checkpoint_io/hybrid_parallel_checkpoint_io.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 23, 25, 26, 27, 46, 47, 52, 53, 64, 86, 87, 128, 129, 170, 295, 395, 537, 628, 668, 695, 763, 824, 831, 832, 888], "summary": {"covered_lines": 39, "num_statements": 429, "percent_covered": 9.090909090909092, "percent_covered_display": "9", "missing_lines": 390, "excluded_lines": 0}, "missing_lines": [48, 49, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 115, 116, 120, 121, 122, 123, 126, 138, 139, 140, 142, 143, 144, 146, 147, 149, 151, 152, 153, 163, 164, 165, 168, 197, 198, 200, 201, 202, 204, 208, 209, 213, 214, 215, 216, 218, 220, 228, 229, 230, 231, 232, 233, 243, 244, 245, 248, 249, 250, 251, 253, 263, 264, 267, 268, 270, 272, 275, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 305, 306, 307, 310, 311, 312, 314, 315, 318, 319, 320, 321, 325, 327, 328, 330, 331, 332, 333, 334, 337, 338, 340, 341, 343, 346, 349, 350, 353, 354, 355, 356, 357, 358, 361, 362, 366, 369, 371, 372, 374, 375, 379, 380, 381, 382, 383, 386, 392, 393, 419, 420, 421, 422, 424, 428, 429, 433, 440, 441, 442, 444, 446, 454, 456, 457, 458, 462, 464, 465, 466, 467, 478, 479, 480, 483, 484, 485, 487, 496, 497, 500, 501, 503, 505, 508, 509, 510, 512, 513, 514, 515, 516, 519, 520, 521, 525, 527, 528, 530, 531, 546, 548, 551, 552, 554, 555, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 574, 575, 576, 580, 582, 583, 585, 586, 587, 588, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 617, 618, 619, 622, 624, 625, 626, 638, 639, 641, 642, 644, 645, 649, 651, 653, 654, 657, 658, 659, 662, 663, 664, 665, 666, 678, 679, 681, 682, 683, 684, 689, 690, 693, 704, 705, 707, 710, 712, 713, 714, 717, 718, 719, 721, 724, 725, 726, 737, 739, 743, 744, 745, 748, 749, 750, 753, 754, 758, 759, 760, 761, 772, 775, 776, 778, 779, 781, 782, 784, 787, 790, 791, 792, 793, 794, 795, 796, 799, 800, 801, 802, 803, 804, 805, 808, 809, 810, 811, 812, 813, 815, 816, 817, 820, 822, 828, 829, 858, 859, 860, 861, 863, 864, 866, 867, 868, 869, 870, 873, 874, 875, 876, 877, 879, 880, 881, 882, 884, 886, 910, 912, 913, 915, 916, 917, 919, 925, 926, 927, 929, 930, 931, 934, 935, 936, 937, 938, 939, 940, 941, 943, 945], "excluded_lines": []}, "colossalai/checkpoint_io/index_file.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 9, 12, 13, 23, 30, 31, 45, 65, 81, 91, 101, 114, 138, 143, 156, 162, 174], "summary": {"covered_lines": 22, "num_statements": 70, "percent_covered": 31.428571428571427, "percent_covered_display": "31", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [24, 27, 28, 41, 42, 43, 53, 54, 57, 58, 59, 60, 63, 73, 74, 75, 78, 79, 89, 99, 109, 110, 111, 112, 122, 125, 127, 128, 130, 131, 132, 134, 136, 139, 140, 141, 153, 154, 160, 168, 169, 170, 172, 178, 179, 180, 181, 182], "excluded_lines": []}, "colossalai/checkpoint_io/utils.py": {"executed_lines": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 36, 50, 63, 79, 95, 123, 137, 138, 143, 160, 197, 217, 265, 283, 307, 331, 343, 380, 414, 449, 465, 488, 509, 530, 580, 625, 672, 687, 723, 756, 765, 778, 794], "summary": {"covered_lines": 53, "num_statements": 324, "percent_covered": 16.358024691358025, "percent_covered_display": "16", "missing_lines": 271, "excluded_lines": 0}, "missing_lines": [47, 57, 58, 59, 60, 73, 74, 76, 89, 90, 92, 109, 110, 111, 112, 113, 114, 115, 120, 124, 125, 126, 127, 128, 129, 139, 140, 141, 144, 145, 146, 150, 151, 152, 153, 154, 156, 157, 158, 163, 164, 165, 169, 170, 173, 174, 175, 177, 178, 181, 182, 186, 187, 188, 189, 190, 192, 193, 194, 208, 209, 210, 211, 212, 214, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 260, 262, 270, 272, 273, 274, 276, 277, 280, 290, 291, 293, 294, 295, 296, 299, 317, 319, 320, 321, 324, 326, 328, 339, 340, 361, 362, 363, 364, 365, 366, 367, 370, 371, 377, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 405, 408, 409, 410, 411, 424, 425, 428, 433, 436, 437, 440, 441, 445, 446, 459, 460, 462, 480, 482, 483, 485, 500, 501, 513, 514, 515, 516, 517, 519, 520, 521, 522, 525, 527, 540, 541, 543, 544, 545, 548, 549, 550, 551, 553, 554, 555, 558, 559, 560, 561, 562, 563, 565, 566, 568, 570, 571, 572, 575, 587, 588, 589, 593, 596, 597, 598, 599, 600, 601, 606, 615, 616, 617, 619, 621, 622, 638, 640, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 656, 661, 662, 663, 664, 665, 666, 667, 669, 680, 681, 683, 684, 697, 698, 700, 701, 702, 704, 705, 707, 710, 711, 715, 716, 718, 720, 734, 738, 739, 743, 745, 746, 747, 748, 749, 753, 757, 758, 759, 760, 762, 769, 770, 772, 773, 775, 782, 783, 785, 786, 788, 789, 791, 798, 799, 800], "excluded_lines": []}, "colossalai/cli/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/cli/check/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 10, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 10, 11, 12, 13, 14], "excluded_lines": []}, "colossalai/cli/check/check_installation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 106, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 106, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 10, 12, 14, 15, 17, 20, 31, 32, 33, 34, 38, 39, 41, 46, 47, 49, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 101, 105, 106, 109, 111, 112, 114, 116, 117, 119, 120, 121, 122, 124, 127, 140, 142, 143, 144, 145, 146, 147, 148, 151, 158, 159, 160, 161, 162, 165, 177, 178, 181, 182, 183, 184, 185, 186, 188, 191, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "excluded_lines": []}, "colossalai/cli/cli.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 14, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 7, 8, 9, 10, 13, 14, 15, 18, 19, 21, 22], "excluded_lines": []}, "colossalai/cli/launcher/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 24, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 12, 20, 26, 33, 40, 46, 47, 53, 59, 66, 67, 68, 69, 105, 106, 107, 109, 110, 111, 112], "excluded_lines": []}, "colossalai/cli/launcher/hostinfo.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 43, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [1, 4, 13, 18, 19, 20, 22, 23, 35, 36, 41, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 58, 63, 64, 66, 74, 76, 84, 85, 87, 98, 99, 100, 102, 104, 114, 115, 116, 117, 119, 120, 122, 123], "excluded_lines": []}, "colossalai/cli/launcher/multinode_runner.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 52, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 52, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 10, 28, 29, 30, 33, 35, 37, 39, 40, 43, 45, 47, 48, 50, 53, 54, 55, 56, 59, 62, 63, 66, 72, 73, 74, 75, 77, 86, 87, 88, 89, 90, 91, 92, 93, 95, 104, 105, 106, 108, 113, 114, 116, 124, 125, 126, 127], "excluded_lines": []}, "colossalai/cli/launcher/run.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 139, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 139, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 9, 11, 12, 15, 18, 33, 34, 35, 37, 38, 40, 41, 42, 44, 47, 48, 50, 51, 52, 54, 55, 58, 75, 76, 77, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 108, 134, 135, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 154, 156, 157, 159, 161, 173, 176, 177, 178, 179, 181, 183, 193, 199, 201, 202, 203, 206, 226, 228, 229, 230, 233, 234, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 250, 252, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 270, 271, 274, 275, 277, 278, 281, 284, 285, 288, 289, 299, 302, 303, 306, 307, 308, 311, 312, 315, 318, 321, 322, 323, 327, 328, 330], "excluded_lines": []}, "colossalai/cluster/__init__.py": {"executed_lines": [1, 2, 3, 4, 6], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/cluster/device_mesh_manager.py": {"executed_lines": [1, 2, 4, 5, 7, 8, 11, 12, 13, 21, 22, 24, 33, 58, 59, 63, 66, 81, 96, 111], "summary": {"covered_lines": 18, "num_statements": 52, "percent_covered": 34.61538461538461, "percent_covered_display": "35", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [25, 26, 27, 28, 41, 42, 43, 45, 46, 48, 49, 52, 54, 55, 64, 74, 75, 76, 77, 79, 91, 92, 94, 103, 104, 105, 106, 107, 109, 115, 116, 117, 118, 120], "excluded_lines": []}, "colossalai/cluster/dist_coordinator.py": {"executed_lines": [1, 2, 3, 5, 6, 8, 11, 12, 40, 49, 50, 53, 54, 57, 58, 61, 69, 82, 92, 106, 118, 129, 130, 159, 168, 177], "summary": {"covered_lines": 25, "num_statements": 63, "percent_covered": 39.682539682539684, "percent_covered_display": "40", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [41, 44, 45, 47, 51, 55, 59, 65, 79, 80, 89, 90, 102, 103, 104, 114, 115, 116, 125, 126, 127, 148, 149, 151, 152, 154, 156, 157, 166, 175, 190, 193, 194, 195, 196, 197, 199, 201], "excluded_lines": []}, "colossalai/cluster/process_group_manager.py": {"executed_lines": [1, 3, 4, 7, 8, 19, 22, 41, 56, 69], "summary": {"covered_lines": 9, "num_statements": 25, "percent_covered": 36.0, "percent_covered_display": "36", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [20, 34, 35, 36, 37, 39, 51, 52, 54, 63, 64, 65, 67, 73, 74, 75], "excluded_lines": []}, "colossalai/cluster/process_group_mesh.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 12, 24, 25, 39, 48, 66, 67, 70, 71, 74, 88, 102, 103, 115, 116, 134, 151, 162, 163, 200, 241], "summary": {"covered_lines": 28, "num_statements": 96, "percent_covered": 29.166666666666668, "percent_covered_display": "29", "missing_lines": 68, "excluded_lines": 0}, "missing_lines": [21, 40, 41, 42, 43, 44, 45, 46, 60, 61, 64, 68, 72, 83, 84, 86, 97, 98, 100, 113, 131, 132, 144, 145, 146, 147, 148, 149, 160, 176, 177, 180, 181, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 216, 217, 220, 221, 222, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 254, 255, 256, 257, 259, 260], "excluded_lines": []}, "colossalai/context/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/context/config.py": {"executed_lines": [4, 5, 6, 7, 9, 12, 13, 20, 25, 28, 35, 38, 44, 50, 51, 106, 107], "summary": {"covered_lines": 16, "num_statements": 58, "percent_covered": 27.586206896551722, "percent_covered_display": "28", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 26, 29, 30, 31, 32, 33, 36, 39, 40, 42, 45, 46, 47, 48, 65, 66, 67, 68, 70, 73, 74, 77, 78, 79, 80, 82, 83, 84, 87, 89, 90, 91, 93, 95, 96, 99, 100, 101, 103], "excluded_lines": []}, "colossalai/context/singleton_meta.py": {"executed_lines": [1, 4, 5, 10, 11, 13, 15, 17, 19, 20, 21, 23, 27], "summary": {"covered_lines": 12, "num_statements": 12, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/device/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/device/alpha_beta_profiler.py": {"executed_lines": [1, 2, 3, 5, 6, 8, 10, 11, 12, 15, 16, 32, 65, 80, 127, 152, 163, 212, 355], "summary": {"covered_lines": 18, "num_statements": 209, "percent_covered": 8.61244019138756, "percent_covered_display": "9", "missing_lines": 191, "excluded_lines": 0}, "missing_lines": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 67, 68, 69, 70, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 119, 122, 125, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 160, 161, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 196, 198, 199, 200, 203, 204, 205, 206, 208, 210, 239, 240, 242, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 264, 265, 267, 268, 270, 272, 276, 277, 278, 279, 280, 282, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 345, 346, 348, 351, 353, 369, 371, 372, 375, 376, 379, 380, 381, 382, 383, 384, 386, 387, 388, 391, 393], "excluded_lines": []}, "colossalai/device/calc_pipeline_strategy.py": {"executed_lines": [1, 3, 6, 29, 92], "summary": {"covered_lines": 5, "num_statements": 80, "percent_covered": 6.25, "percent_covered_display": "6", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 103, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 131], "excluded_lines": []}, "colossalai/device/device_mesh.py": {"executed_lines": [1, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 18, 22, 23, 41, 43, 56, 57, 62, 67, 68, 69, 77, 80, 83, 92, 93, 94, 95, 97, 98, 101, 108, 109, 118, 119, 124, 125, 126, 127, 134, 137, 138, 139, 142, 143, 149, 150, 156, 157, 161, 163, 164, 170, 171, 230, 246, 261, 277, 290, 305, 309, 315, 319, 321, 365, 370, 372, 374, 376, 378, 379, 382, 384, 403, 445, 447, 451, 454, 455, 458, 462, 463, 471, 472, 473, 474, 476, 477, 478, 479, 481, 500, 504, 512, 518], "summary": {"covered_lines": 94, "num_statements": 178, "percent_covered": 52.80898876404494, "percent_covered_display": "53", "missing_lines": 84, "excluded_lines": 0}, "missing_lines": [71, 72, 140, 147, 154, 168, 185, 189, 190, 191, 192, 193, 195, 196, 199, 202, 205, 214, 217, 220, 221, 222, 223, 224, 228, 238, 239, 240, 241, 244, 253, 254, 255, 256, 259, 269, 270, 271, 272, 275, 278, 279, 280, 281, 282, 283, 287, 288, 329, 332, 337, 338, 341, 343, 345, 347, 349, 350, 353, 356, 357, 358, 359, 363, 392, 393, 397, 398, 399, 401, 485, 486, 490, 491, 492, 501, 502, 505, 506, 513, 514, 519, 520, 521], "excluded_lines": []}, "colossalai/fx/__init__.py": {"executed_lines": [1, 2, 3, 4], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/_compatibility.py": {"executed_lines": [1, 3, 5, 6, 8, 10, 12, 14, 15, 18, 28, 29, 30, 41, 44, 52], "summary": {"covered_lines": 16, "num_statements": 24, "percent_covered": 66.66666666666667, "percent_covered_display": "67", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [9, 11, 13, 32, 33, 36, 37, 39], "excluded_lines": []}, "colossalai/fx/_meta_regist_12.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 257, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 257, "excluded_lines": 0}, "missing_lines": [6, 8, 9, 11, 13, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 37, 38, 49, 62, 64, 79, 81, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 177, 178, 181, 182, 195, 199, 200, 204, 205, 210, 211, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 249, 251, 252, 254, 257, 258, 260, 264, 265, 274, 275, 276, 277, 278, 279, 284, 285, 286, 289, 290, 291, 294, 295, 296, 299, 300, 301, 304, 305, 306, 307, 310, 311, 312, 313, 318, 319, 320, 322, 323, 324, 325, 329, 330, 342, 343, 344, 345, 349, 350, 351, 353, 354, 355, 356, 357, 364, 365, 376, 377, 378, 379, 383, 384, 385, 386, 388, 389, 390, 391, 395, 396, 399, 400, 401, 402, 406, 407, 408, 409, 410, 411, 416, 417, 418, 422, 423, 424, 428, 429, 430, 431, 434, 435, 436, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 455, 457, 459, 460, 461, 463, 465, 467, 468, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 488, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 513, 514, 515, 516, 517, 518, 519, 521, 523, 524, 529, 530, 533, 543, 544, 546, 547, 548, 552, 553, 554], "excluded_lines": []}, "colossalai/fx/_meta_regist_13.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 24, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 10, 11, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 49, 53, 57], "excluded_lines": []}, "colossalai/fx/codegen/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/codegen/activation_checkpoint_codegen.py": {"executed_lines": [1, 3, 5, 7, 8, 20, 22, 39, 40, 45, 74, 90, 99, 125, 167, 212, 219, 226, 235, 253, 302, 400, 490, 625, 627, 628], "summary": {"covered_lines": 26, "num_statements": 583, "percent_covered": 4.459691252144082, "percent_covered_display": "4", "missing_lines": 557, "excluded_lines": 0}, "missing_lines": [23, 24, 35, 37, 42, 50, 63, 71, 83, 84, 86, 87, 95, 96, 103, 104, 108, 109, 110, 111, 112, 116, 117, 118, 119, 120, 122, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 163, 164, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 207, 209, 216, 223, 230, 231, 232, 244, 245, 246, 248, 250, 258, 259, 260, 261, 263, 264, 265, 266, 268, 272, 273, 274, 279, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 318, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 340, 341, 342, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 426, 427, 428, 429, 430, 434, 435, 436, 438, 439, 442, 443, 444, 445, 449, 451, 452, 453, 454, 457, 458, 459, 460, 462, 463, 465, 466, 467, 468, 471, 472, 473, 475, 476, 477, 478, 481, 482, 484, 485, 487, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 507, 511, 514, 515, 516, 517, 518, 521, 522, 523, 524, 525, 528, 531, 532, 533, 534, 535, 537, 538, 539, 540, 543, 544, 545, 546, 548, 549, 551, 552, 553, 554, 557, 558, 559, 564, 565, 566, 567, 569, 570, 571, 572, 575, 576, 578, 581, 582, 583, 584, 587, 588, 589, 591, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 612, 613, 616, 617, 618, 619, 621, 622, 629, 630, 631, 632, 635, 637, 643, 647, 650, 652, 653, 654, 655, 656, 659, 662, 663, 665, 666, 668, 670, 672, 674, 675, 677, 679, 681, 684, 686, 690, 693, 695, 696, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 714, 715, 717, 718, 719, 720, 722, 723, 724, 727, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 762, 763, 764, 766, 767, 768, 772, 776, 777, 781, 783, 784, 787, 794, 797, 798, 801, 802, 803, 804, 805, 806, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 827, 828, 830, 832, 836, 838, 839, 840, 842, 844, 845, 847, 848, 852, 853, 854, 856, 857, 858, 862, 866, 871, 872, 873, 874, 877, 879, 885, 889, 892, 894, 895, 896, 897, 898, 901, 904, 905, 907, 908, 910, 912, 915, 916, 917, 920, 922, 925, 931, 932, 934, 935, 936, 937, 939, 940, 941, 944, 950, 951, 952, 953, 954, 955, 956, 957, 958, 960, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 979, 980, 981, 983, 984, 985, 989, 990, 991, 994, 1001, 1004, 1005, 1008, 1009, 1010, 1011, 1012, 1013, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1028, 1029, 1030, 1033, 1037, 1038, 1040, 1042, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1058, 1060, 1061, 1062, 1064, 1066, 1070, 1071, 1072, 1073, 1077, 1082], "excluded_lines": []}, "colossalai/fx/graph_module.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 23, 25, 26, 37, 57, 101], "summary": {"covered_lines": 18, "num_statements": 93, "percent_covered": 19.35483870967742, "percent_covered_display": "19", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 21, 33, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 78, 79, 87, 89, 90, 92, 93, 95, 98, 99, 112, 113, 114, 115, 118, 129, 130, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 168, 169, 171, 172, 174, 175, 182, 183, 184], "excluded_lines": []}, "colossalai/fx/passes/__init__.py": {"executed_lines": [1, 2, 3, 4], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/passes/adding_split_node_pass.py": {"executed_lines": [1, 2, 3, 5, 8, 12, 17, 46, 52, 64, 110, 141, 174, 208, 232, 279, 313, 342], "summary": {"covered_lines": 18, "num_statements": 257, "percent_covered": 7.003891050583658, "percent_covered_display": "7", "missing_lines": 239, "excluded_lines": 0}, "missing_lines": [9, 13, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 47, 48, 49, 53, 54, 56, 57, 58, 59, 61, 72, 75, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 107, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 129, 130, 131, 132, 133, 142, 145, 146, 147, 148, 149, 150, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 178, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 275, 276, 283, 286, 287, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 346, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364], "excluded_lines": []}, "colossalai/fx/passes/concrete_info_prop.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 13, 14, 15, 48, 50, 71, 72, 100, 101, 121, 122, 140, 141, 159, 160, 177, 178, 199, 200, 218, 231], "summary": {"covered_lines": 28, "num_statements": 64, "percent_covered": 43.75, "percent_covered_display": "44", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [67, 68, 69, 85, 86, 88, 90, 91, 94, 95, 97, 119, 138, 156, 157, 175, 195, 196, 197, 216, 229, 238, 239, 240, 241, 247, 250, 252, 253, 259, 261, 262, 264, 266, 282, 294], "excluded_lines": []}, "colossalai/fx/passes/meta_info_prop.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 22, 23, 27, 28, 29, 30, 31, 32, 37, 51, 52, 53, 86, 88, 89, 127, 128, 148, 149, 167, 168, 186, 187, 204, 205, 226, 227, 247, 260, 330], "summary": {"covered_lines": 37, "num_statements": 101, "percent_covered": 36.633663366336634, "percent_covered_display": "37", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [41, 42, 43, 44, 45, 46, 48, 102, 103, 105, 106, 107, 109, 111, 112, 113, 115, 116, 117, 118, 121, 122, 124, 146, 165, 183, 184, 202, 222, 223, 224, 243, 244, 245, 258, 267, 268, 269, 270, 276, 279, 281, 282, 288, 290, 291, 293, 294, 296, 297, 314, 327, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363], "excluded_lines": []}, "colossalai/fx/passes/passes_for_gpt2_test.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 245, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 245, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 14, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 52, 54, 55, 56, 57, 58, 59, 60, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 160, 161, 170, 171, 173, 177, 179, 180, 181, 182, 183, 185, 186, 188, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 232, 233, 234, 236, 237, 238, 243, 244, 245, 248, 249, 250, 252, 253, 254, 255, 257, 258, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 287, 288, 289, 292, 293, 294, 296, 297, 299, 300, 301, 302, 303, 304, 306, 307, 309, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 327, 330, 338, 339, 342, 343, 344, 347, 348, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 368], "excluded_lines": []}, "colossalai/fx/passes/shard_1d_pass.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 10, 11, 28, 46, 61, 74], "summary": {"covered_lines": 12, "num_statements": 91, "percent_covered": 13.186813186813186, "percent_covered_display": "13", "missing_lines": 79, "excluded_lines": 0}, "missing_lines": [39, 40, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 63, 64, 65, 66, 67, 68, 70, 71, 79, 80, 82, 84, 86, 88, 89, 90, 91, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 151, 152, 153, 154, 157, 158, 160, 161, 162, 164], "excluded_lines": []}, "colossalai/fx/passes/split_module.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 10, 11, 12, 16, 27, 39, 40], "summary": {"covered_lines": 12, "num_statements": 146, "percent_covered": 8.219178082191782, "percent_covered_display": "8", "missing_lines": 134, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 176, 178, 179, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 211, 212, 213, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 262, 263, 266, 267, 268, 271, 272, 277, 278, 280, 281, 282, 284, 285, 286, 288, 289, 290, 292, 293, 295, 297], "excluded_lines": []}, "colossalai/fx/passes/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 76, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 8, 14, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 78, 81, 82, 85, 92, 93, 94, 95, 96, 99, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 170, 173, 174, 175], "excluded_lines": []}, "colossalai/fx/profiler/__init__.py": {"executed_lines": [1, 3, 4, 5, 6, 13, 26, 27], "summary": {"covered_lines": 8, "num_statements": 9, "percent_covered": 88.88888888888889, "percent_covered_display": "89", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [15], "excluded_lines": []}, "colossalai/fx/profiler/constants.py": {"executed_lines": [1, 3, 5, 7, 16, 21, 30, 36, 41], "summary": {"covered_lines": 9, "num_statements": 9, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/profiler/dataflow.py": {"executed_lines": [1, 2, 3, 5, 7, 8, 11, 12, 13, 14, 17, 18, 19, 20, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 75, 76], "summary": {"covered_lines": 28, "num_statements": 56, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [71, 72, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 116, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140], "excluded_lines": []}, "colossalai/fx/profiler/experimental/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 5, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5], "excluded_lines": []}, "colossalai/fx/profiler/experimental/constants.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 6, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 22, 38], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 64, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 9, 10, 12, 16, 17, 18, 46, 47, 48, 49, 50, 51, 54, 63, 64, 75, 76, 92, 93, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 114, 115, 124, 126, 129, 131, 132, 136, 137, 138, 140, 143, 144, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/activation_function.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 18, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/arithmetic.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 63, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 63, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 8, 10, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 80, 81, 89, 90, 91, 92], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 19, 20, 21], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 11, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/normalization.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 29, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 19, 20, 21, 22, 25, 26, 33, 34, 35, 36, 39, 40, 47, 48, 49, 50, 53, 54, 64, 65, 66, 68, 69, 70], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/pooling.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/python_ops.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 13, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_function/torch_ops.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 47, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 10, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/activation_function.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 18, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/attention.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 40, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 40, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 9, 10, 20, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 48, 51, 53, 55, 56, 59, 60, 62, 65, 67, 68, 71, 73, 74, 75], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/convolution.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 90, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 90, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 7, 9, 11, 14, 15, 18, 19, 20, 23, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 45, 48, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 67, 68, 71, 74, 77, 83, 84, 85, 86, 87, 88, 89, 92, 93, 96, 97, 98, 105, 109, 110, 113, 114, 115, 116, 117, 120, 121, 124, 125, 126, 133, 140, 145, 146, 147, 148, 149, 150, 151, 154, 155, 158, 159, 160, 167, 174, 181, 187, 188, 189, 190, 191, 192, 193], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/dropout.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 11, 12, 13], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 11, 12, 13], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 12, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/normalization.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 26, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/pooling.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/rnn.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 57, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 57, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 10, 16, 17, 19, 20, 21, 23, 24, 26, 28, 30, 31, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "excluded_lines": []}, "colossalai/fx/profiler/experimental/profiler_module/torch_op.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 10, 11, 12], "excluded_lines": []}, "colossalai/fx/profiler/experimental/registry.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 17, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 17, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 14, 15, 16, 18, 19, 22, 23], "excluded_lines": []}, "colossalai/fx/profiler/experimental/shard_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 12, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [3, 5, 7, 10, 11, 20, 23, 24, 33, 36, 37, 46], "excluded_lines": []}, "colossalai/fx/profiler/memory_utils.py": {"executed_lines": [1, 3, 4, 6, 8, 11, 12, 36, 37, 52], "summary": {"covered_lines": 10, "num_statements": 36, "percent_covered": 27.77777777777778, "percent_covered_display": "28", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 46, 47, 48, 49, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72], "excluded_lines": []}, "colossalai/fx/profiler/opcount.py": {"executed_lines": [4, 5, 6, 7, 9, 10, 12, 15, 49, 66, 80, 94, 107, 132, 143, 147, 163, 189, 200, 222, 229, 371, 372, 373], "summary": {"covered_lines": 24, "num_statements": 114, "percent_covered": 21.05263157894737, "percent_covered_display": "21", "missing_lines": 90, "excluded_lines": 0}, "missing_lines": [21, 22, 25, 27, 28, 30, 33, 34, 37, 38, 39, 41, 44, 45, 46, 55, 58, 59, 60, 61, 62, 63, 72, 75, 76, 77, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 126, 127, 128, 129, 136, 137, 138, 140, 144, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 169, 174, 176, 181, 183, 184, 186, 190, 191, 192, 193, 194, 195, 196, 197, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 226, 232, 278, 327, 328, 331, 367, 368], "excluded_lines": []}, "colossalai/fx/profiler/profiler.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 22, 25, 28, 34, 38, 47, 48, 147, 148, 288, 289, 344, 345, 363, 364], "summary": {"covered_lines": 30, "num_statements": 220, "percent_covered": 13.636363636363637, "percent_covered_display": "14", "missing_lines": 190, "excluded_lines": 0}, "missing_lines": [29, 30, 31, 35, 39, 40, 41, 42, 44, 68, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 106, 107, 108, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 144, 162, 165, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 192, 193, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 227, 228, 229, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 251, 252, 254, 255, 257, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 285, 304, 306, 308, 310, 311, 313, 314, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 351, 353, 354, 355, 357, 358, 360, 379, 381, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 407, 408, 409], "excluded_lines": []}, "colossalai/fx/profiler/shard_utils.py": {"executed_lines": [1, 2, 4, 5, 7, 8, 10, 13, 14, 27, 28, 73, 74, 95, 106], "summary": {"covered_lines": 15, "num_statements": 34, "percent_covered": 44.11764705882353, "percent_covered_display": "44", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [24, 40, 62, 63, 64, 65, 66, 68, 69, 70, 85, 86, 88, 89, 90, 91, 92, 103, 114], "excluded_lines": []}, "colossalai/fx/profiler/tensor.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 10, 13, 20, 21, 22, 27, 29, 30, 57, 62, 63, 102, 130, 135], "summary": {"covered_lines": 19, "num_statements": 72, "percent_covered": 26.38888888888889, "percent_covered_display": "26", "missing_lines": 53, "excluded_lines": 0}, "missing_lines": [14, 15, 16, 17, 32, 33, 34, 39, 49, 51, 52, 54, 55, 58, 59, 60, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 84, 88, 89, 93, 94, 96, 97, 98, 100, 118, 120, 122, 123, 124, 125, 127, 128, 131, 132, 133, 136, 137, 138], "excluded_lines": []}, "colossalai/fx/proxy.py": {"executed_lines": [1, 3, 4, 6, 8, 11, 12, 24, 28, 29, 32, 33, 36, 37, 40, 45, 48, 52, 56, 60, 64, 67, 76, 93, 94, 100, 101, 113], "summary": {"covered_lines": 27, "num_statements": 81, "percent_covered": 33.333333333333336, "percent_covered_display": "33", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [25, 26, 30, 34, 38, 41, 46, 49, 50, 53, 54, 57, 58, 61, 62, 65, 68, 72, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127], "excluded_lines": []}, "colossalai/fx/tracer/__init__.py": {"executed_lines": [1, 3, 4, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/tracer/_meta_trace.py": {"executed_lines": [1, 2, 3, 6, 12, 16], "summary": {"covered_lines": 6, "num_statements": 70, "percent_covered": 8.571428571428571, "percent_covered_display": "9", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [7, 8, 9, 13, 31, 32, 34, 39, 40, 42, 44, 45, 46, 56, 57, 58, 59, 60, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 98, 102, 103, 105, 106, 107, 113, 114, 116, 117, 119, 121, 122, 124, 125, 127, 129, 130, 131, 136, 139], "excluded_lines": []}, "colossalai/fx/tracer/_symbolic_trace.py": {"executed_lines": [1, 3, 5, 6, 8, 11, 12], "summary": {"covered_lines": 7, "num_statements": 10, "percent_covered": 70.0, "percent_covered_display": "70", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [53, 54, 55], "excluded_lines": []}, "colossalai/fx/tracer/_tracer_utils.py": {"executed_lines": [1, 3, 5, 6, 8, 11, 23, 37], "summary": {"covered_lines": 8, "num_statements": 34, "percent_covered": 23.529411764705884, "percent_covered_display": "24", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 15, 17, 18, 20, 24, 25, 26, 27, 28, 30, 32, 33, 34, 38, 41, 42, 43, 44, 46, 47, 48, 49, 51], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/__init__.py": {"executed_lines": [1, 2], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_function/__init__.py": {"executed_lines": [1, 2, 3, 4], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_function/addbmm.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 10, 18, 33, 44], "summary": {"covered_lines": 10, "num_statements": 42, "percent_covered": 23.80952380952381, "percent_covered_display": "24", "missing_lines": 32, "excluded_lines": 0}, "missing_lines": [11, 12, 13, 14, 15, 16, 23, 24, 25, 27, 29, 30, 31, 37, 38, 39, 40, 41, 42, 48, 51, 52, 54, 55, 57, 59, 61, 62, 64, 66, 69, 71], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_function/addmm.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 10, 18, 37], "summary": {"covered_lines": 9, "num_statements": 34, "percent_covered": 26.470588235294116, "percent_covered_display": "26", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [11, 12, 13, 14, 15, 16, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 52, 54, 56], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_function/bias_addition_function.py": {"executed_lines": [1, 2, 4, 5, 8, 9, 14, 21, 22, 33, 34, 53, 71, 72, 77, 92, 104, 110], "summary": {"covered_lines": 16, "num_statements": 39, "percent_covered": 41.02564102564103, "percent_covered_display": "41", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 19, 60, 61, 62, 66, 67, 68, 82, 83, 84, 86, 88, 89, 90, 97, 98, 99, 100, 101], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_function/linear.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 16], "summary": {"covered_lines": 7, "num_statements": 16, "percent_covered": 43.75, "percent_covered_display": "44", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 13, 14, 17, 18, 19, 21], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_module/__init__.py": {"executed_lines": [1, 2, 3], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_module/bias_addition_module.py": {"executed_lines": [1, 2, 4, 5, 8, 9, 14, 23, 35, 47, 48, 58, 72, 83, 84, 104], "summary": {"covered_lines": 15, "num_statements": 43, "percent_covered": 34.883720930232556, "percent_covered_display": "35", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 19, 20, 21, 30, 31, 32, 33, 42, 43, 44, 45, 63, 64, 65, 66, 67, 68, 69, 70, 77, 78, 79, 80, 81], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_module/conv.py": {"executed_lines": [1, 2, 4, 5, 8, 9, 10, 11, 12, 35, 50], "summary": {"covered_lines": 11, "num_statements": 41, "percent_covered": 26.829268292682926, "percent_covered_display": "27", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 40, 41, 42, 43, 44, 45, 48, 51, 52, 53, 54, 55], "excluded_lines": []}, "colossalai/fx/tracer/bias_addition_patch/patched_bias_addition_module/linear.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 12], "summary": {"covered_lines": 7, "num_statements": 11, "percent_covered": 63.63636363636363, "percent_covered_display": "64", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [10, 13, 14, 15], "excluded_lines": []}, "colossalai/fx/tracer/experimental.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 420, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 420, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 22, 23, 25, 26, 35, 36, 50, 53, 54, 56, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 125, 126, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 193, 195, 196, 198, 199, 201, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 255, 257, 258, 260, 266, 267, 269, 270, 273, 274, 275, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 294, 295, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 327, 328, 330, 332, 334, 337, 338, 340, 341, 344, 347, 351, 352, 353, 354, 355, 356, 358, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 381, 382, 383, 384, 386, 387, 388, 389, 391, 392, 395, 396, 398, 401, 402, 408, 409, 410, 411, 412, 415, 417, 419, 421, 424, 425, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 441, 444, 445, 446, 448, 449, 451, 453, 455, 460, 461, 463, 464, 465, 468, 474, 475, 477, 478, 481, 482, 483, 486, 487, 488, 489, 491, 492, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 517, 518, 519, 521, 522, 525, 526, 527, 528, 530, 536, 537, 539, 540, 541, 542, 544, 546, 547, 548, 550, 552, 554, 556, 557, 558, 559, 562, 563, 565, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 589, 590, 592, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 622, 623, 624, 625, 626, 627, 628, 632, 633, 636, 638, 639, 643, 644, 645, 646, 647, 651, 654, 655, 656, 657, 658, 662, 663, 664, 665, 666, 667, 669, 671, 673, 674, 675], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/__init__.py": {"executed_lines": [1, 2], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6], "summary": {"covered_lines": 6, "num_statements": 6, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/activation_function.py": {"executed_lines": [1, 3, 6, 7], "summary": {"covered_lines": 4, "num_statements": 5, "percent_covered": 80.0, "percent_covered_display": "80", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [8], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/arithmetic.py": {"executed_lines": [1, 3, 6, 7, 8, 45, 46, 51, 52, 60, 61, 70, 71, 72, 80, 81, 82, 90, 91], "summary": {"covered_lines": 19, "num_statements": 78, "percent_covered": 24.358974358974358, "percent_covered_display": "24", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 83, 84, 85, 86, 87, 92, 93, 94, 95], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/convolution.py": {"executed_lines": [1, 2, 3, 5, 7, 10, 11, 16, 17, 20, 21, 22, 25, 47, 48, 66, 67, 87, 88, 110, 111, 132, 133, 158, 159], "summary": {"covered_lines": 25, "num_statements": 110, "percent_covered": 22.727272727272727, "percent_covered_display": "23", "missing_lines": 85, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 26, 27, 29, 31, 32, 34, 35, 36, 38, 39, 40, 42, 44, 49, 51, 52, 53, 55, 56, 57, 58, 59, 63, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 84, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 107, 112, 114, 115, 116, 117, 119, 120, 121, 122, 125, 129, 134, 136, 137, 138, 139, 141, 142, 143, 144, 147, 150, 155, 160, 162, 163, 164, 165, 167, 168, 169, 170, 173, 176, 179, 185], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/embedding.py": {"executed_lines": [1, 3, 6, 7], "summary": {"covered_lines": 4, "num_statements": 5, "percent_covered": 80.0, "percent_covered_display": "80", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [10], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/normalization.py": {"executed_lines": [1, 3, 6, 7, 11, 12], "summary": {"covered_lines": 6, "num_statements": 8, "percent_covered": 75.0, "percent_covered_display": "75", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [8, 15], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/python_ops.py": {"executed_lines": [1, 3, 5, 7, 10, 11], "summary": {"covered_lines": 6, "num_statements": 44, "percent_covered": 13.636363636363637, "percent_covered_display": "14", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 53, 55, 56, 58, 59, 60], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_function/torch_ops.py": {"executed_lines": [1, 3, 6, 7, 28, 29, 33, 34, 40, 41, 48, 49, 55, 56, 60, 61, 78, 79, 83, 84, 92, 93, 97, 98, 112, 113, 129, 130, 134, 135, 139, 140, 145, 146, 168, 169, 173, 174], "summary": {"covered_lines": 38, "num_statements": 125, "percent_covered": 30.4, "percent_covered_display": "30", "missing_lines": 87, "excluded_lines": 0}, "missing_lines": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 37, 42, 43, 44, 45, 50, 51, 52, 57, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 85, 86, 87, 88, 89, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 118, 119, 120, 122, 123, 124, 125, 126, 131, 136, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 163, 165, 170, 175], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7], "summary": {"covered_lines": 7, "num_statements": 7, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/activation_function.py": {"executed_lines": [1, 3, 6, 7, 8, 9, 10, 11, 12], "summary": {"covered_lines": 9, "num_statements": 10, "percent_covered": 90.0, "percent_covered_display": "90", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [13], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/convolution.py": {"executed_lines": [1, 3, 5, 8, 9, 24, 25, 44, 45, 68, 69, 88, 89, 116, 117], "summary": {"covered_lines": 15, "num_statements": 51, "percent_covered": 29.41176470588235, "percent_covered_display": "29", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 17, 21, 28, 29, 30, 33, 36, 41, 48, 49, 50, 53, 56, 59, 65, 72, 73, 74, 81, 85, 92, 93, 94, 101, 108, 113, 120, 121, 122, 129, 136, 143, 149], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/embedding.py": {"executed_lines": [1, 3, 6, 7], "summary": {"covered_lines": 4, "num_statements": 6, "percent_covered": 66.66666666666667, "percent_covered_display": "67", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [8, 9], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/linear.py": {"executed_lines": [1, 3, 6, 7], "summary": {"covered_lines": 4, "num_statements": 7, "percent_covered": 57.142857142857146, "percent_covered_display": "57", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [8, 9, 12], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/normalization.py": {"executed_lines": [1, 3, 6, 7, 8, 9, 10, 11, 24, 25, 31, 32], "summary": {"covered_lines": 12, "num_statements": 23, "percent_covered": 52.17391304347826, "percent_covered_display": "52", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [13, 14, 15, 16, 17, 18, 21, 27, 28, 29, 30], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/pooling.py": {"executed_lines": [1, 3, 5, 8, 9, 31, 32, 58, 59, 87, 88, 111, 112, 139, 140, 169, 170, 171, 181, 182, 183, 193, 194, 195], "summary": {"covered_lines": 24, "num_statements": 129, "percent_covered": 18.6046511627907, "percent_covered_display": "19", "missing_lines": 105, "excluded_lines": 0}, "missing_lines": [10, 11, 13, 15, 16, 17, 19, 21, 22, 23, 25, 27, 28, 33, 34, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 51, 55, 60, 61, 63, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 79, 84, 89, 90, 92, 94, 95, 96, 98, 100, 101, 102, 103, 105, 107, 108, 113, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 129, 130, 132, 136, 141, 142, 144, 146, 147, 148, 150, 152, 153, 154, 155, 157, 158, 159, 161, 166, 172, 173, 174, 176, 177, 178, 184, 185, 186, 188, 189, 190, 196, 197, 198, 200, 201, 202], "excluded_lines": []}, "colossalai/fx/tracer/meta_patch/patched_module/rnn.py": {"executed_lines": [1, 3, 6, 7, 8], "summary": {"covered_lines": 5, "num_statements": 9, "percent_covered": 55.55555555555556, "percent_covered_display": "56", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [9, 12, 15, 16], "excluded_lines": []}, "colossalai/fx/tracer/registry.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 18, 22, 23, 24, 25, 26], "summary": {"covered_lines": 16, "num_statements": 20, "percent_covered": 80.0, "percent_covered_display": "80", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [14, 15, 16, 19], "excluded_lines": []}, "colossalai/fx/tracer/tracer.py": {"executed_lines": [2, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 32, 35, 36, 37, 40, 41, 67, 79, 81, 83, 152, 189, 202, 208, 218, 317, 447, 448, 476, 485, 525, 527, 528, 538, 539, 540, 542, 545, 546, 548, 557, 558, 559, 562, 563], "summary": {"covered_lines": 51, "num_statements": 312, "percent_covered": 16.346153846153847, "percent_covered_display": "16", "missing_lines": 261, "excluded_lines": 0}, "missing_lines": [68, 69, 70, 73, 75, 76, 88, 91, 92, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 140, 142, 148, 150, 153, 154, 157, 158, 159, 160, 161, 162, 163, 168, 169, 170, 171, 173, 174, 177, 178, 180, 181, 184, 185, 187, 190, 191, 197, 198, 200, 206, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 229, 230, 232, 233, 235, 241, 242, 245, 247, 248, 249, 251, 253, 255, 256, 257, 258, 259, 261, 267, 268, 269, 270, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 310, 312, 313, 315, 332, 333, 335, 336, 338, 339, 341, 344, 345, 346, 349, 350, 351, 352, 355, 356, 358, 359, 360, 361, 365, 366, 369, 370, 371, 372, 376, 380, 381, 383, 384, 386, 387, 389, 395, 396, 400, 402, 404, 405, 409, 410, 412, 413, 417, 418, 420, 421, 424, 427, 431, 432, 433, 434, 435, 436, 438, 442, 443, 445, 449, 450, 452, 453, 454, 456, 457, 458, 459, 460, 462, 463, 464, 469, 470, 472, 474, 477, 479, 481, 482, 486, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 509, 510, 511, 512, 513, 514, 518, 520, 529, 530, 531, 532, 533, 534, 535, 536, 549, 550, 551, 552, 553, 554, 555], "excluded_lines": []}, "colossalai/inference/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 3, "percent_covered": 33.333333333333336, "percent_covered_display": "33", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [2, 4], "excluded_lines": []}, "colossalai/inference/engine/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 2, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [3], "excluded_lines": []}, "colossalai/inference/engine/engine.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16], "summary": {"covered_lines": 13, "num_statements": 89, "percent_covered": 14.606741573033707, "percent_covered_display": "15", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [18, 20, 29, 49, 68, 69, 71, 72, 73, 74, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 108, 110, 111, 115, 123, 124, 126, 129, 130, 132, 142, 143, 144, 146, 148, 149, 160, 161, 162, 164, 165, 166, 167, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 189, 191, 192, 194, 195], "excluded_lines": []}, "colossalai/inference/engine/microbatch_manager.py": {"executed_lines": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 18, 19, 29, 43, 46, 47, 61, 62, 69, 70, 81, 95, 101, 107, 112, 113, 124, 125, 132, 141, 142, 150, 151, 161, 180, 190, 205, 211, 219, 224, 227, 230, 231, 234, 235, 240, 241], "summary": {"covered_lines": 43, "num_statements": 107, "percent_covered": 40.18691588785047, "percent_covered_display": "40", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [36, 37, 38, 44, 54, 55, 56, 57, 59, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 105, 108, 118, 119, 121, 139, 147, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 186, 202, 203, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 225, 228, 232, 236, 237, 238, 246, 247, 248], "excluded_lines": []}, "colossalai/inference/engine/modeling/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 4, "percent_covered": 25.0, "percent_covered_display": "25", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [2, 3, 5], "excluded_lines": []}, "colossalai/inference/engine/modeling/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [4, 6, 8, 11, 21, 22, 25, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67], "excluded_lines": []}, "colossalai/inference/engine/modeling/bloom.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 15, 17, 18], "summary": {"covered_lines": 10, "num_statements": 185, "percent_covered": 5.405405405405405, "percent_covered_display": "5", "missing_lines": 175, "excluded_lines": 0}, "missing_lines": [19, 21, 22, 26, 27, 28, 31, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 59, 68, 69, 94, 96, 98, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 135, 137, 138, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 176, 177, 183, 186, 188, 189, 190, 191, 192, 193, 195, 197, 198, 200, 203, 204, 206, 207, 209, 211, 213, 214, 215, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 238, 243, 244, 245, 250, 256, 258, 259, 260, 262, 263, 264, 275, 276, 278, 279, 282, 283, 284, 287, 289, 290, 304, 307, 308, 310, 313, 325, 327, 329, 332, 333, 335, 338, 340, 341, 343, 345, 347, 348, 360, 363, 364, 365, 366, 368, 369, 371, 373, 374, 375, 376, 378, 379, 382, 384, 385, 387, 389, 393, 394, 396, 398, 401, 404, 405, 409, 410, 412, 413, 414, 415, 416, 428, 432, 435, 436, 437, 438, 439, 444, 447, 449, 450, 452], "excluded_lines": []}, "colossalai/inference/engine/modeling/chatglm2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 183, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 183, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 9, 10, 19, 21, 22, 23, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 60, 66, 67, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 103, 119, 121, 122, 139, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 163, 164, 166, 168, 171, 172, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 193, 194, 197, 198, 201, 205, 206, 207, 208, 210, 211, 212, 217, 218, 225, 226, 227, 232, 245, 246, 247, 249, 251, 252, 264, 266, 267, 268, 269, 271, 272, 273, 280, 282, 284, 286, 288, 290, 292, 293, 304, 306, 314, 315, 317, 318, 319, 321, 323, 326, 327, 329, 331, 332, 333, 335, 336, 344, 346, 347, 349, 350, 351, 359, 366, 373, 382, 386, 388, 389, 391, 394, 395, 401, 408, 411, 414, 418, 421, 428, 431, 442, 444, 447, 450, 451, 455, 464, 465, 468, 475, 490, 492], "excluded_lines": []}, "colossalai/inference/engine/modeling/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 194, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 194, "excluded_lines": 0}, "missing_lines": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 38, 40, 41, 43, 44, 45, 46, 49, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 68, 71, 72, 73, 83, 93, 94, 105, 108, 109, 118, 120, 121, 132, 145, 151, 152, 177, 179, 181, 182, 183, 184, 185, 186, 189, 190, 191, 194, 211, 213, 214, 230, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 254, 255, 257, 261, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 288, 289, 291, 293, 294, 297, 302, 303, 304, 305, 308, 309, 313, 318, 320, 321, 322, 324, 325, 327, 336, 337, 339, 340, 344, 345, 346, 348, 350, 351, 361, 363, 365, 375, 378, 379, 380, 381, 383, 385, 386, 388, 389, 391, 393, 394, 404, 406, 412, 413, 414, 420, 422, 423, 425, 426, 427, 429, 432, 439, 441, 450, 452, 455, 458, 459, 463, 471, 472, 473, 482, 483, 484, 486, 487, 488, 490, 498, 500, 503], "excluded_lines": []}, "colossalai/inference/engine/policies/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 5, "percent_covered": 20.0, "percent_covered_display": "20", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [2, 3, 5, 11], "excluded_lines": []}, "colossalai/inference/engine/policies/bloom.py": {"executed_lines": [1, 2, 4, 5, 7, 8, 9, 11], "summary": {"covered_lines": 8, "num_statements": 59, "percent_covered": 13.559322033898304, "percent_covered_display": "14", "missing_lines": 51, "excluded_lines": 0}, "missing_lines": [13, 14, 16, 17, 18, 19, 22, 23, 25, 26, 28, 30, 33, 34, 35, 37, 38, 40, 41, 42, 44, 74, 77, 86, 87, 89, 90, 92, 93, 97, 98, 99, 100, 104, 106, 108, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "excluded_lines": []}, "colossalai/inference/engine/policies/chatglm2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 51, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 51, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 14, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 44, 45, 46, 48, 49, 50, 53, 54, 59, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89], "excluded_lines": []}, "colossalai/inference/engine/policies/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 71, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 14, 17, 19, 20, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 37, 39, 42, 43, 44, 46, 47, 48, 54, 55, 57, 98, 99, 100, 107, 147, 149, 150, 151, 153, 154, 155, 159, 160, 161, 166, 170, 171, 172, 174, 175, 176, 180, 182, 183, 184, 186, 188, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206], "excluded_lines": []}, "colossalai/inference/kv_cache/__init__.py": {"executed_lines": [1, 2], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/inference/kv_cache/batch_infer_state.py": {"executed_lines": [2, 4, 5, 7, 11, 12, 13, 17, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 43, 47, 48, 61, 62], "summary": {"covered_lines": 28, "num_statements": 69, "percent_covered": 40.57971014492754, "percent_covered_display": "41", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [40, 41, 44, 52, 53, 54, 55, 58, 59, 69, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108], "excluded_lines": []}, "colossalai/inference/kv_cache/kvcache_manager.py": {"executed_lines": [1, 7, 8, 11, 12, 24, 39, 45, 54, 55, 67, 68, 94, 95, 100, 101], "summary": {"covered_lines": 14, "num_statements": 55, "percent_covered": 25.454545454545453, "percent_covered_display": "25", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [33, 34, 35, 36, 37, 41, 42, 43, 47, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 103, 104, 105], "excluded_lines": []}, "colossalai/inference/quant/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "colossalai/inference/quant/gptq/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5], "excluded_lines": []}, "colossalai/inference/quant/gptq/cai_gptq/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 11, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14], "excluded_lines": []}, "colossalai/inference/quant/gptq/cai_gptq/cai_quant_linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 204, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 204, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 48, 49, 56, 60, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 157, 158, 164, 166, 167, 169, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 190, 191, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 217, 220, 223, 224, 228, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 245, 248, 251, 254, 255, 258, 259, 260, 263, 265, 266, 269, 271, 274, 275, 276, 278, 279, 281, 282, 284, 285, 288, 298, 300, 301, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 317, 319, 320, 323, 325, 328, 329, 330, 332, 333, 335, 336, 338, 339, 342, 351, 353, 354], "excluded_lines": []}, "colossalai/inference/quant/gptq/cai_gptq/gptq_op.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 24, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 7, 8, 9, 10, 11, 12, 14, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 53, 54, 56, 58], "excluded_lines": []}, "colossalai/inference/quant/gptq/gptq_manager.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 40, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 40, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 36, 37, 38, 40, 41, 42, 45, 48, 52, 56, 57, 58, 59, 61], "excluded_lines": []}, "colossalai/inference/quant/smoothquant/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/inference/quant/smoothquant/models/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 9, 10], "excluded_lines": []}, "colossalai/inference/quant/smoothquant/models/base_model.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 299, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 299, "excluded_lines": 0}, "missing_lines": [5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 30, 31, 34, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 108, 109, 111, 112, 114, 117, 118, 119, 121, 122, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 196, 197, 198, 201, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244, 245, 246, 252, 254, 256, 257, 259, 262, 270, 271, 274, 275, 283, 284, 286, 287, 289, 290, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 329, 336, 342, 344, 346, 347, 349, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 370, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 410, 414, 415, 417, 418, 419, 421, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 442, 445, 446, 448, 449, 450, 452, 454, 455, 456, 458, 459, 462, 463, 466, 471, 472, 473, 474, 475, 476, 477, 479, 480, 482, 487, 488, 489, 490, 491, 494], "excluded_lines": []}, "colossalai/inference/quant/smoothquant/models/linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 118, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 118, "excluded_lines": 0}, "missing_lines": [3, 5, 6, 7, 9, 10, 11, 12, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 41, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 76, 77, 78, 79, 81, 91, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 130, 132, 133, 134, 135, 137, 147, 151, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189], "excluded_lines": []}, "colossalai/inference/quant/smoothquant/models/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 421, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 421, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 22, 24, 25, 32, 33, 35, 36, 37, 38, 41, 42, 45, 50, 51, 52, 53, 54, 57, 58, 63, 64, 65, 66, 68, 69, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 100, 101, 111, 113, 115, 116, 117, 119, 120, 122, 123, 124, 125, 127, 129, 131, 132, 134, 135, 146, 148, 149, 150, 152, 154, 161, 169, 170, 171, 172, 174, 175, 176, 178, 182, 190, 192, 207, 209, 212, 215, 216, 220, 229, 231, 246, 247, 249, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 280, 281, 287, 292, 293, 294, 295, 296, 298, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 318, 319, 321, 323, 324, 337, 338, 340, 341, 352, 356, 363, 365, 390, 392, 395, 405, 408, 409, 410, 411, 413, 416, 417, 418, 420, 422, 423, 424, 425, 426, 428, 432, 442, 444, 445, 446, 447, 448, 450, 451, 453, 454, 456, 457, 460, 461, 462, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 477, 478, 480, 482, 483, 485, 487, 488, 493, 494, 495, 498, 501, 502, 504, 505, 510, 512, 514, 515, 516, 517, 519, 521, 522, 524, 527, 534, 535, 536, 538, 540, 541, 542, 543, 545, 546, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 563, 564, 565, 567, 568, 569, 573, 574, 586, 587, 590, 592, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 608, 610, 616, 617, 618, 622, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 635, 637, 638, 639, 642, 644, 646, 647, 649, 650, 651, 653, 654, 656, 658, 662, 664, 665, 667, 668, 671, 675, 676, 679, 680, 681, 682, 683, 684, 685, 687, 689, 700, 701, 703, 704, 706, 707, 709, 712, 713, 715, 716, 717, 718, 720, 721, 722, 723, 731, 732, 734, 735, 738, 745, 747, 748, 750, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 779, 781, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 802, 804, 812, 813, 815, 817, 819, 820, 822, 823, 824, 825, 826, 827, 829, 832, 836, 838, 839, 840, 842, 844, 845, 846, 848, 850, 851, 852], "excluded_lines": []}, "colossalai/inference/quant/smoothquant/models/parallel_linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 172, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 172, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 8, 9, 11, 14, 15, 16, 17, 19, 21, 22, 26, 27, 32, 33, 35, 37, 38, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 57, 59, 62, 63, 64, 66, 67, 69, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 97, 99, 102, 103, 104, 106, 107, 109, 110, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 148, 150, 153, 154, 155, 157, 158, 160, 161, 163, 164, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 181, 182, 184, 185, 188, 190, 193, 194, 195, 197, 198, 200, 201, 203, 204, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 224, 225, 228, 230, 233, 234, 235, 237, 238, 240, 241, 243, 244, 247, 248, 249, 250, 251, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264], "excluded_lines": []}, "colossalai/initialize.py": {"executed_lines": [4, 5, 6, 7, 9, 11, 12, 13, 14, 17, 70, 109, 150], "summary": {"covered_lines": 13, "num_statements": 47, "percent_covered": 27.659574468085108, "percent_covered_display": "28", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [47, 48, 50, 52, 55, 56, 60, 61, 63, 65, 66, 67, 89, 90, 91, 92, 93, 97, 128, 129, 130, 131, 132, 133, 137, 162, 163, 164, 165, 166, 167, 168, 169, 173], "excluded_lines": []}, "colossalai/interface/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/interface/model.py": {"executed_lines": [1, 4, 5, 12, 16, 24, 28, 29, 31], "summary": {"covered_lines": 7, "num_statements": 13, "percent_covered": 53.84615384615385, "percent_covered_display": "54", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [13, 14, 20, 21, 22, 25], "excluded_lines": []}, "colossalai/interface/optimizer.py": {"executed_lines": [1, 3, 4, 5, 6, 9, 10, 17, 20, 21, 28, 29, 32, 33, 36, 39, 45, 51, 57, 60, 66, 72, 85, 108, 121, 131], "summary": {"covered_lines": 25, "num_statements": 45, "percent_covered": 55.55555555555556, "percent_covered_display": "56", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [18, 22, 24, 25, 26, 30, 34, 37, 43, 49, 55, 58, 64, 70, 83, 105, 106, 117, 127, 135], "excluded_lines": []}, "colossalai/interface/pretrained.py": {"executed_lines": [1, 3, 5, 11, 15], "summary": {"covered_lines": 5, "num_statements": 7, "percent_covered": 71.42857142857143, "percent_covered_display": "71", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [12, 16], "excluded_lines": []}, "colossalai/kernel/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/kernel/jit/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5], "excluded_lines": []}, "colossalai/kernel/jit/bias_dropout_add.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 11, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [1, 4, 6, 7, 8, 11, 12, 15, 18, 19, 22], "excluded_lines": []}, "colossalai/kernel/jit/bias_gelu.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 22, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [2, 13, 14, 15, 16, 22, 23, 24, 25, 27, 28, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45], "excluded_lines": []}, "colossalai/kernel/jit/option.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 48, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 9, 12, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 37, 40, 49, 50, 51, 53, 56, 57, 58, 61, 62, 63, 64, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82], "excluded_lines": []}, "colossalai/kernel/kernel_loader.py": {"executed_lines": [1, 2, 4, 16, 18, 29, 30, 38, 40, 41, 51, 84, 85, 88, 89, 92, 93, 96, 97, 100, 101, 104, 105, 108, 109, 116, 117, 120, 121], "summary": {"covered_lines": 28, "num_statements": 42, "percent_covered": 66.66666666666667, "percent_covered_display": "67", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [49, 59, 63, 64, 66, 67, 68, 70, 71, 73, 75, 77, 78, 81], "excluded_lines": []}, "colossalai/kernel/triton/__init__.py": {"executed_lines": [1, 2, 5, 6, 7, 10], "summary": {"covered_lines": 6, "num_statements": 16, "percent_covered": 37.5, "percent_covered_display": "38", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [4, 11, 12, 13, 14, 15, 16, 17, 18, 20], "excluded_lines": []}, "colossalai/kernel/triton/context_attention.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 156, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 156, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 10, 11, 12, 14, 19, 21, 22, 52, 53, 54, 57, 58, 59, 62, 63, 64, 66, 72, 74, 75, 76, 78, 79, 80, 82, 83, 85, 87, 88, 89, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 123, 129, 130, 132, 133, 135, 140, 141, 142, 146, 147, 173, 174, 175, 177, 178, 180, 181, 183, 186, 187, 188, 189, 194, 195, 196, 198, 199, 201, 203, 204, 206, 207, 208, 210, 211, 213, 215, 216, 218, 224, 225, 226, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 250, 256, 257, 259, 260, 262, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 281, 283, 285, 287, 288, 289, 322, 351, 353, 354, 355, 357, 358, 359, 360, 362, 363, 365, 367, 368, 371, 372, 404, 405, 434], "excluded_lines": []}, "colossalai/kernel/triton/copy_kv_cache_dest.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 32, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 32, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 29, 30, 31, 33, 35, 36, 38, 39, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 71], "excluded_lines": []}, "colossalai/kernel/triton/custom_autotune.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 99, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 99, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 8, 11, 12, 22, 23, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 54, 55, 56, 61, 63, 64, 65, 66, 67, 69, 72, 73, 74, 76, 77, 78, 79, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 123, 124, 126, 127, 128, 129, 136, 139, 140, 141, 145, 148, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167], "excluded_lines": []}, "colossalai/kernel/triton/flash_decoding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 21, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [2, 4, 5, 6, 8, 9, 10, 11, 14, 16, 17, 18, 19, 21, 23, 24, 29, 33, 34, 36, 47], "excluded_lines": []}, "colossalai/kernel/triton/fused_layernorm.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 50, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 9, 10, 12, 16, 17, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 65, 66, 68, 69, 70, 71, 73, 75, 78], "excluded_lines": []}, "colossalai/kernel/triton/gptq_triton.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 185, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 185, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 7, 10, 11, 13, 16, 17, 18, 19, 27, 28, 34, 37, 38, 44, 45, 48, 49, 55, 56, 60, 61, 67, 70, 71, 77, 80, 81, 87, 89, 90, 93, 94, 95, 98, 133, 134, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 196, 198, 205, 206, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 267, 271, 306, 307, 347, 349, 350, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 374, 376, 378, 385, 386, 392, 393, 394, 395, 396, 398, 400, 402, 403, 404, 405, 407, 408, 411, 412, 414, 415, 416, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 444, 447, 464, 465, 466, 467, 469, 470, 471, 476, 478, 481, 483, 484, 512, 540, 541, 543], "excluded_lines": []}, "colossalai/kernel/triton/int8_rotary_embedding_kernel.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 41, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [2, 3, 4, 7, 8, 25, 26, 28, 29, 31, 32, 34, 39, 45, 47, 52, 58, 59, 61, 62, 64, 65, 67, 68, 70, 75, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 117], "excluded_lines": []}, "colossalai/kernel/triton/llama_act_combine_kernel.py": {"executed_lines": [1, 2, 4, 5, 6, 8, 9, 13, 14, 15, 17], "summary": {"covered_lines": 11, "num_statements": 89, "percent_covered": 12.359550561797754, "percent_covered_display": "12", "missing_lines": 78, "excluded_lines": 0}, "missing_lines": [10, 12, 18, 24, 25, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 92, 95, 96, 97, 99, 110, 111, 112, 121, 124, 125, 126, 127, 128, 129, 131, 134, 135, 138, 139, 142, 143, 144, 145, 147, 149, 151, 154, 156, 157, 158, 160, 161, 164, 165, 172, 185, 186], "excluded_lines": []}, "colossalai/kernel/triton/qkv_matmul_kernel.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 43, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 11, 16, 17, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 114, 115], "excluded_lines": []}, "colossalai/kernel/triton/self_attention_nofusion.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 56, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 9, 11, 12, 13, 16, 30, 31, 32, 33, 34, 36, 39, 41, 43, 49, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 92, 104, 105, 107, 108, 110, 112, 118, 143, 146, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 164], "excluded_lines": []}, "colossalai/kernel/triton/smooth_attention.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 228, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 228, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 9, 10, 11, 12, 14, 20, 21, 55, 56, 57, 60, 61, 62, 65, 66, 67, 69, 75, 76, 78, 79, 80, 82, 83, 84, 86, 87, 89, 91, 92, 93, 98, 100, 101, 102, 104, 105, 106, 108, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 128, 134, 135, 136, 138, 139, 140, 141, 144, 145, 146, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 200, 203, 204, 228, 229, 230, 232, 233, 234, 236, 237, 239, 241, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 291, 292, 293, 295, 296, 297, 299, 300, 302, 304, 306, 307, 309, 310, 311, 312, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 343, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 386, 412, 415, 416, 427, 428, 430, 431, 432, 434, 442, 443, 444, 445, 447, 454, 456, 457, 458, 459, 461, 462, 463, 464, 465, 467, 479, 482, 483, 506, 507, 509, 510, 511, 512, 513, 515, 516, 517, 519, 520, 521, 522, 527, 532, 537, 538, 540, 541, 546, 547, 548, 550, 551, 562, 563, 565, 566, 567, 568, 569, 571, 596, 598, 599, 614, 615, 616, 617, 619, 621, 634, 636, 637, 638, 650, 652], "excluded_lines": []}, "colossalai/kernel/triton/softmax.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 56, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 9, 10, 12, 18, 19, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 78, 80, 82, 83, 84, 85, 87, 99], "excluded_lines": []}, "colossalai/kernel/triton/token_attention_kernel.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 95, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 95, "excluded_lines": 0}, "missing_lines": [4, 6, 7, 8, 10, 11, 12, 13, 15, 16, 19, 22, 25, 29, 30, 31, 32, 34, 36, 37, 40, 41, 42, 43, 45, 47, 48, 58, 69, 71, 72, 73, 76, 77, 80, 81, 82, 85, 108, 109, 111, 113, 114, 116, 117, 119, 120, 122, 124, 125, 126, 128, 129, 130, 136, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 165, 166, 191, 194, 195, 196, 199, 200, 201, 202, 204, 214, 215, 216, 217, 219, 229, 230, 232, 233, 244], "excluded_lines": []}, "colossalai/lazy/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/lazy/construction.py": {"executed_lines": [1, 2, 4, 6, 14, 30, 34, 48, 50, 51, 53, 54, 59, 60, 66, 67, 73, 74, 75, 83, 84], "summary": {"covered_lines": 21, "num_statements": 41, "percent_covered": 51.21951219512195, "percent_covered_display": "51", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [55, 56, 57, 61, 62, 63, 64, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 85, 86, 87], "excluded_lines": []}, "colossalai/lazy/lazy_init.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 19, 35, 39, 44, 47, 49, 65, 74, 76, 79, 80, 82, 84, 86, 96, 97, 102, 107, 133, 134, 166, 167, 168, 170, 171, 173, 174, 194, 202, 203, 206, 209, 219, 226, 227, 232, 247, 280, 281, 359, 382, 385, 389, 398, 401, 428, 429, 432, 433, 458, 464, 467, 472, 473, 482, 484, 494, 582, 588, 589, 603, 652, 661], "summary": {"covered_lines": 72, "num_statements": 328, "percent_covered": 21.951219512195124, "percent_covered_display": "22", "missing_lines": 256, "excluded_lines": 0}, "missing_lines": [87, 88, 90, 92, 93, 94, 98, 99, 104, 120, 121, 122, 124, 125, 126, 129, 130, 179, 181, 183, 184, 186, 187, 189, 190, 192, 195, 196, 197, 198, 199, 200, 204, 207, 215, 216, 217, 221, 222, 223, 224, 228, 229, 230, 234, 236, 238, 240, 244, 245, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 267, 268, 269, 272, 273, 274, 276, 282, 283, 284, 286, 287, 288, 294, 296, 299, 301, 302, 303, 304, 306, 307, 308, 311, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 331, 332, 334, 335, 336, 337, 339, 342, 343, 344, 345, 348, 349, 351, 352, 354, 355, 356, 357, 360, 361, 363, 365, 367, 368, 369, 370, 372, 374, 375, 377, 378, 380, 383, 386, 387, 390, 392, 394, 396, 399, 402, 403, 407, 408, 410, 412, 414, 416, 417, 419, 421, 423, 425, 426, 430, 447, 448, 450, 451, 452, 453, 455, 456, 461, 462, 465, 468, 469, 489, 490, 491, 492, 495, 496, 497, 498, 499, 501, 503, 504, 506, 508, 510, 511, 512, 516, 518, 520, 521, 523, 524, 526, 527, 528, 529, 531, 532, 533, 535, 539, 541, 543, 544, 545, 547, 549, 555, 563, 571, 579, 580, 583, 584, 585, 586, 597, 598, 600, 606, 608, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 623, 624, 625, 627, 628, 629, 630, 631, 633, 635, 636, 637, 639, 640, 641, 642, 643, 644, 649, 653, 654, 655, 656, 657, 658, 662, 663, 664], "excluded_lines": []}, "colossalai/lazy/pretrained.py": {"executed_lines": [1, 2, 4, 5, 7, 10, 11, 13, 14, 23, 24, 34, 35], "summary": {"covered_lines": 13, "num_statements": 136, "percent_covered": 9.558823529411764, "percent_covered_display": "10", "missing_lines": 123, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 20, 21, 25, 26, 27, 28, 30, 31, 38, 39, 40, 50, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 85, 86, 88, 89, 90, 93, 94, 95, 111, 113, 114, 119, 120, 121, 122, 123, 127, 130, 134, 137, 141, 144, 148, 152, 156, 157, 158, 159, 160, 161, 164, 165, 167, 169, 171, 184, 188, 190, 195, 196, 197, 198, 203, 204, 207, 209, 214, 215, 216, 219, 224, 225, 231, 235, 238, 239, 241, 248, 249, 250, 252, 254, 256, 259, 261, 262, 263, 264, 266, 269, 271, 272, 274, 276, 277, 280, 283, 286, 287, 288, 302, 303, 306, 307, 309], "excluded_lines": []}, "colossalai/legacy/__init__.py": {"executed_lines": [1, 10], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/amp/__init__.py": {"executed_lines": [4, 5, 6, 8, 10, 11, 12, 13, 15, 18], "summary": {"covered_lines": 10, "num_statements": 20, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [41, 43, 44, 46, 47, 48, 49, 50, 51, 53], "excluded_lines": []}, "colossalai/legacy/amp/amp_type.py": {"executed_lines": [4, 7, 8, 9, 10], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/amp/apex_amp/__init__.py": {"executed_lines": [1, 2, 4, 7, 43], "summary": {"covered_lines": 5, "num_statements": 9, "percent_covered": 55.55555555555556, "percent_covered_display": "56", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [36, 38, 39, 40], "excluded_lines": []}, "colossalai/legacy/amp/apex_amp/apex_amp.py": {"executed_lines": [4, 6, 7, 8, 9, 11, 13, 14, 17, 18, 22, 31], "summary": {"covered_lines": 11, "num_statements": 15, "percent_covered": 73.33333333333333, "percent_covered_display": "73", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [28, 29, 38, 39], "excluded_lines": []}, "colossalai/legacy/amp/naive_amp/__init__.py": {"executed_lines": [1, 3, 4, 6, 7, 9, 10, 13, 60], "summary": {"covered_lines": 9, "num_statements": 29, "percent_covered": 31.03448275862069, "percent_covered_display": "31", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [33, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57], "excluded_lines": []}, "colossalai/legacy/amp/naive_amp/_fp16_optimizer.py": {"executed_lines": [4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 24, 27, 34, 54, 55, 66, 170, 171, 175, 176, 185, 186, 194, 195, 203, 204, 212, 233, 244, 247, 253, 262, 273, 302, 312, 322, 344, 358, 361, 364, 369, 372, 375], "summary": {"covered_lines": 48, "num_statements": 173, "percent_covered": 27.745664739884393, "percent_covered_display": "28", "missing_lines": 125, "excluded_lines": 0}, "missing_lines": [30, 31, 43, 44, 47, 48, 50, 51, 76, 77, 80, 81, 82, 83, 86, 89, 90, 91, 93, 95, 96, 97, 98, 100, 101, 112, 113, 114, 117, 118, 119, 120, 122, 123, 125, 126, 129, 131, 134, 135, 138, 139, 142, 143, 145, 150, 151, 152, 156, 159, 160, 161, 173, 183, 192, 201, 210, 214, 217, 218, 219, 220, 221, 224, 225, 228, 229, 231, 241, 242, 245, 248, 249, 250, 251, 255, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 277, 278, 280, 281, 282, 283, 286, 287, 288, 290, 292, 295, 298, 300, 309, 310, 315, 316, 317, 318, 319, 320, 330, 333, 334, 337, 338, 341, 342, 350, 351, 352, 353, 354, 359, 362, 370, 373], "excluded_lines": []}, "colossalai/legacy/amp/naive_amp/_utils.py": {"executed_lines": [1, 3, 6, 35], "summary": {"covered_lines": 4, "num_statements": 21, "percent_covered": 19.047619047619047, "percent_covered_display": "19", "missing_lines": 17, "excluded_lines": 0}, "missing_lines": [15, 19, 22, 26, 27, 28, 30, 31, 32, 40, 41, 42, 43, 45, 46, 48, 49], "excluded_lines": []}, "colossalai/legacy/amp/naive_amp/naive_amp.py": {"executed_lines": [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 21, 22, 35, 39, 42, 45, 55, 56, 71, 92, 93, 96, 97, 100, 105, 110, 132, 139], "summary": {"covered_lines": 28, "num_statements": 86, "percent_covered": 32.55813953488372, "percent_covered_display": "33", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [36, 37, 40, 43, 46, 47, 48, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 94, 98, 101, 102, 103, 106, 107, 108, 116, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 133, 137, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165], "excluded_lines": []}, "colossalai/legacy/amp/torch_amp/__init__.py": {"executed_lines": [1, 3, 4, 5, 7, 9, 12, 44], "summary": {"covered_lines": 8, "num_statements": 15, "percent_covered": 53.333333333333336, "percent_covered_display": "53", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [35, 36, 37, 38, 39, 40, 41], "excluded_lines": []}, "colossalai/legacy/amp/torch_amp/_grad_scaler.py": {"executed_lines": [6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 20, 21, 25, 30, 43, 44, 45, 46, 49, 53, 54, 55, 56, 57, 121, 151, 157, 162, 207, 253, 305, 311, 367, 441, 444, 456, 462, 469, 475, 482, 488, 495, 501, 507, 535, 561, 577, 580, 592], "summary": {"covered_lines": 48, "num_statements": 235, "percent_covered": 20.425531914893618, "percent_covered_display": "20", "missing_lines": 187, "excluded_lines": 0}, "missing_lines": [26, 27, 28, 31, 32, 33, 34, 35, 50, 122, 123, 124, 126, 129, 130, 131, 132, 134, 136, 137, 138, 140, 142, 143, 144, 145, 146, 148, 149, 152, 153, 154, 155, 158, 159, 160, 172, 173, 176, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 234, 237, 239, 240, 241, 245, 246, 247, 248, 249, 250, 251, 285, 286, 288, 290, 292, 293, 294, 295, 298, 299, 300, 302, 303, 306, 307, 308, 309, 332, 333, 335, 336, 338, 340, 342, 343, 345, 347, 352, 353, 354, 356, 357, 359, 361, 363, 365, 387, 388, 390, 392, 394, 395, 397, 399, 400, 401, 402, 406, 412, 414, 415, 416, 417, 419, 420, 429, 439, 442, 451, 452, 454, 460, 467, 473, 480, 486, 493, 496, 497, 499, 505, 523, 542, 543, 545, 546, 551, 552, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 571, 572, 573, 574, 575, 578, 581, 583, 584, 586, 590, 593], "excluded_lines": []}, "colossalai/legacy/amp/torch_amp/torch_amp.py": {"executed_lines": [4, 5, 6, 7, 9, 10, 11, 13, 15, 18, 19, 34, 38, 46, 51, 63, 64, 71, 75, 76, 83, 84, 90, 94, 95], "summary": {"covered_lines": 22, "num_statements": 36, "percent_covered": 61.111111111111114, "percent_covered_display": "61", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [35, 36, 44, 48, 49, 58, 59, 60, 72, 73, 80, 91, 92, 99], "excluded_lines": []}, "colossalai/legacy/builder/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/builder/builder.py": {"executed_lines": [4, 6, 9, 26, 62], "summary": {"covered_lines": 5, "num_statements": 21, "percent_covered": 23.80952380952381, "percent_covered_display": "24", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [22, 23, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 76, 77, 78, 79], "excluded_lines": []}, "colossalai/legacy/communication/__init__.py": {"executed_lines": [1, 2, 13, 14, 16], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/communication/collective.py": {"executed_lines": [4, 5, 6, 7, 9, 10, 12, 13, 18, 53, 94, 130, 162, 194], "summary": {"covered_lines": 14, "num_statements": 92, "percent_covered": 15.217391304347826, "percent_covered_display": "15", "missing_lines": 78, "excluded_lines": 0}, "missing_lines": [36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 116, 117, 118, 119, 121, 122, 123, 124, 125, 127, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 198, 199, 201, 202, 205, 207, 208, 209, 212, 213, 217, 218, 219, 220, 222, 224, 227, 228, 236, 237, 244, 246], "excluded_lines": []}, "colossalai/legacy/communication/p2p.py": {"executed_lines": [4, 5, 6, 8, 9, 11, 12, 13, 15, 17, 20, 43, 60, 79, 89, 197, 222, 247, 258, 271, 299, 332, 364, 396], "summary": {"covered_lines": 24, "num_statements": 131, "percent_covered": 18.3206106870229, "percent_covered_display": "18", "missing_lines": 107, "excluded_lines": 0}, "missing_lines": [30, 31, 32, 33, 34, 36, 37, 39, 40, 44, 45, 46, 49, 50, 51, 52, 53, 56, 57, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 82, 84, 85, 86, 127, 128, 130, 131, 132, 136, 137, 138, 142, 143, 144, 146, 147, 148, 150, 151, 153, 154, 156, 157, 158, 160, 161, 163, 164, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 185, 186, 187, 189, 190, 194, 209, 210, 212, 219, 234, 235, 237, 244, 254, 255, 265, 266, 285, 286, 288, 296, 318, 319, 321, 329, 352, 361, 384, 393, 421, 433], "excluded_lines": []}, "colossalai/legacy/communication/p2p_v2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 113, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 113, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 8, 9, 10, 11, 13, 14, 16, 17, 18, 21, 30, 31, 32, 35, 45, 46, 47, 48, 49, 50, 53, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 78, 91, 93, 94, 95, 97, 99, 100, 101, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 120, 123, 124, 126, 131, 132, 134, 137, 139, 140, 141, 142, 143, 144, 145, 147, 150, 154, 156, 159, 168, 172, 173, 177, 179, 182, 191, 194, 195, 198, 199, 201, 202, 204, 207, 217, 218, 220, 221, 222, 224, 227, 237, 238, 240, 241, 242, 244, 247, 254, 255, 256, 257, 260, 267, 268, 269, 270], "excluded_lines": []}, "colossalai/legacy/communication/ring.py": {"executed_lines": [4, 6, 7, 8, 11], "summary": {"covered_lines": 5, "num_statements": 20, "percent_covered": 25.0, "percent_covered_display": "25", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [26, 28, 29, 31, 36, 39, 42, 45, 47, 48, 50, 51, 52, 55, 57], "excluded_lines": []}, "colossalai/legacy/communication/utils.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 10, 13, 20, 52, 60, 92, 113], "summary": {"covered_lines": 13, "num_statements": 64, "percent_covered": 20.3125, "percent_covered_display": "20", "missing_lines": 51, "excluded_lines": 0}, "missing_lines": [14, 15, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 53, 54, 55, 56, 57, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 102, 103, 104, 105, 106, 107, 109, 110, 121, 122, 123, 124, 125, 126, 127], "excluded_lines": []}, "colossalai/legacy/constants.py": {"executed_lines": [4, 5, 8, 23, 24, 25, 26, 27, 30, 31, 32], "summary": {"covered_lines": 11, "num_statements": 11, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/context/__init__.py": {"executed_lines": [1, 2, 3, 4], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/context/parallel_context.py": {"executed_lines": [4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 34, 36, 37, 38, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 63, 64, 67, 68, 71, 72, 77, 94, 101, 102, 107, 115, 129, 145, 159, 181, 203, 221, 240, 246, 255, 271, 285, 301, 315, 328, 341, 357, 371, 391, 398, 415, 427, 502, 514, 523, 538, 589, 592, 596], "summary": {"covered_lines": 75, "num_statements": 231, "percent_covered": 32.467532467532465, "percent_covered_display": "32", "missing_lines": 156, "excluded_lines": 0}, "missing_lines": [61, 65, 69, 73, 74, 75, 87, 88, 89, 90, 92, 95, 96, 97, 98, 99, 103, 113, 126, 127, 142, 143, 156, 157, 172, 175, 176, 177, 179, 194, 197, 198, 199, 201, 218, 219, 236, 237, 238, 241, 242, 243, 244, 247, 248, 252, 253, 268, 269, 282, 283, 298, 299, 312, 313, 325, 326, 338, 339, 354, 355, 368, 369, 382, 383, 386, 387, 388, 389, 392, 393, 394, 395, 396, 405, 406, 407, 408, 409, 416, 417, 418, 419, 420, 421, 423, 435, 436, 437, 440, 441, 442, 443, 447, 450, 451, 452, 453, 456, 458, 460, 462, 465, 467, 468, 469, 472, 473, 476, 477, 480, 483, 484, 485, 486, 495, 496, 497, 498, 500, 512, 516, 517, 518, 520, 521, 529, 530, 531, 532, 534, 535, 536, 544, 545, 546, 548, 550, 553, 554, 557, 560, 561, 563, 564, 565, 567, 568, 569, 571, 572, 578, 579, 584, 590, 593], "excluded_lines": []}, "colossalai/legacy/context/parallel_mode.py": {"executed_lines": [4, 8, 9, 11, 14, 18, 21, 24, 27, 28, 31, 34, 35, 38, 39, 40, 41, 42, 45, 46, 47, 48], "summary": {"covered_lines": 21, "num_statements": 21, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "summary": {"covered_lines": 11, "num_statements": 11, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_1d.py": {"executed_lines": [4, 6, 7, 9, 10, 13, 14, 15, 26, 30], "summary": {"covered_lines": 9, "num_statements": 29, "percent_covered": 31.03448275862069, "percent_covered_display": "31", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [27, 28, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_2d.py": {"executed_lines": [1, 3, 5, 6, 8, 9, 12, 25, 26, 39, 44, 73, 74, 87, 92, 122, 123, 124, 136, 149], "summary": {"covered_lines": 17, "num_statements": 72, "percent_covered": 23.61111111111111, "percent_covered_display": "24", "missing_lines": 55, "excluded_lines": 0}, "missing_lines": [14, 16, 17, 22, 40, 41, 42, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 88, 89, 90, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 137, 138, 139, 141, 144, 146, 147, 156, 157], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_2p5d.py": {"executed_lines": [4, 6, 8, 9, 10, 12, 13, 16, 36, 37, 50, 59, 93, 94, 107, 113, 147, 148, 161, 167, 202, 203, 216, 222, 256, 257, 258, 271, 297], "summary": {"covered_lines": 24, "num_statements": 136, "percent_covered": 17.647058823529413, "percent_covered_display": "18", "missing_lines": 112, "excluded_lines": 0}, "missing_lines": [18, 19, 21, 22, 26, 31, 32, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 80, 81, 83, 84, 85, 86, 87, 88, 90, 108, 109, 110, 111, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 137, 138, 139, 140, 141, 142, 144, 162, 163, 164, 165, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 188, 189, 191, 192, 193, 194, 195, 196, 198, 217, 218, 219, 220, 229, 230, 231, 232, 233, 234, 236, 237, 238, 243, 244, 246, 247, 248, 249, 250, 251, 253, 281, 282, 283, 284, 285, 287, 290, 292, 293, 294, 295, 304, 310], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_3d.py": {"executed_lines": [4, 6, 8, 9, 11, 12, 15, 28, 29, 42, 47, 79, 80, 93, 98, 130, 131, 144, 149, 181, 182, 195, 200, 235, 236, 249, 254, 289, 290, 291, 302, 317], "summary": {"covered_lines": 26, "num_statements": 155, "percent_covered": 16.774193548387096, "percent_covered_display": "17", "missing_lines": 129, "excluded_lines": 0}, "missing_lines": [17, 19, 20, 25, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 94, 95, 96, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 196, 197, 198, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 225, 226, 227, 228, 229, 230, 232, 250, 251, 252, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 276, 277, 279, 280, 281, 282, 283, 284, 286, 303, 304, 305, 306, 309, 311, 312, 313, 314, 315, 324, 331], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_data.py": {"executed_lines": [4, 6, 8, 9, 12, 13, 14, 25, 29], "summary": {"covered_lines": 8, "num_statements": 27, "percent_covered": 29.62962962962963, "percent_covered_display": "30", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [26, 27, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_model.py": {"executed_lines": [4, 6, 8, 9, 12, 13, 14, 26, 31], "summary": {"covered_lines": 8, "num_statements": 28, "percent_covered": 28.571428571428573, "percent_covered_display": "29", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [27, 28, 29, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_pipeline.py": {"executed_lines": [4, 6, 8, 9, 12, 13, 14, 25, 30], "summary": {"covered_lines": 8, "num_statements": 26, "percent_covered": 30.76923076923077, "percent_covered_display": "31", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [26, 27, 28, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 66], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_sequence.py": {"executed_lines": [3, 5, 7, 8, 9, 12, 13, 14, 28, 33, 61, 62, 63, 74, 80], "summary": {"covered_lines": 13, "num_statements": 42, "percent_covered": 30.952380952380953, "percent_covered_display": "31", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [29, 30, 31, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 75, 77, 78, 92, 94, 103, 105, 106, 107], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/initializer_tensor.py": {"executed_lines": [4, 6, 8, 9, 12, 13, 14, 25, 29], "summary": {"covered_lines": 8, "num_statements": 27, "percent_covered": 29.62962962962963, "percent_covered_display": "30", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [26, 27, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55], "excluded_lines": []}, "colossalai/legacy/context/process_group_initializer/process_group_initializer.py": {"executed_lines": [4, 6, 9, 10, 21, 38, 39], "summary": {"covered_lines": 6, "num_statements": 14, "percent_covered": 42.857142857142854, "percent_covered_display": "43", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [30, 31, 32, 33, 34, 35, 36, 40], "excluded_lines": []}, "colossalai/legacy/context/random/__init__.py": {"executed_lines": [1, 15], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/context/random/_helper.py": {"executed_lines": [4, 5, 7, 8, 10, 11, 13, 16, 25, 43, 52, 69, 82, 95, 101, 102, 123, 162, 172], "summary": {"covered_lines": 19, "num_statements": 53, "percent_covered": 35.84905660377358, "percent_covered_display": "36", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [22, 31, 33, 34, 36, 37, 38, 40, 49, 66, 79, 92, 96, 97, 98, 114, 116, 117, 120, 145, 146, 148, 149, 152, 155, 157, 159, 163, 164, 166, 167, 168, 169, 173], "excluded_lines": []}, "colossalai/legacy/context/random/seed_manager.py": {"executed_lines": [4, 5, 7, 10, 11, 18, 19, 20, 21, 23, 24, 27, 28, 31, 32, 35, 48, 62, 86], "summary": {"covered_lines": 18, "num_statements": 40, "percent_covered": 45.0, "percent_covered_display": "45", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [25, 29, 33, 45, 46, 54, 56, 59, 60, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 88, 89], "excluded_lines": []}, "colossalai/legacy/core.py": {"executed_lines": [4, 6], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/engine/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/engine/_base_engine.py": {"executed_lines": [5, 7, 8, 9, 11, 12, 13, 19, 20, 23, 24, 62, 109, 110, 114, 115, 119, 120, 124, 125, 129, 130, 134, 135, 139, 149, 154, 158, 164, 175, 187, 195, 200, 210, 215], "summary": {"covered_lines": 34, "num_statements": 90, "percent_covered": 37.77777777777778, "percent_covered_display": "38", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [73, 74, 75, 76, 77, 78, 81, 84, 85, 87, 89, 90, 92, 95, 96, 99, 101, 102, 103, 106, 107, 112, 117, 122, 127, 132, 137, 142, 143, 144, 145, 146, 147, 151, 152, 156, 160, 161, 162, 170, 171, 172, 173, 182, 183, 184, 185, 193, 197, 198, 207, 208, 212, 213, 217, 218], "excluded_lines": []}, "colossalai/legacy/engine/gradient_accumulation/__init__.py": {"executed_lines": [1, 3, 4, 5, 7, 9, 16, 25], "summary": {"covered_lines": 8, "num_statements": 15, "percent_covered": 53.333333333333336, "percent_covered_display": "53", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [53, 54, 56, 57, 59, 60, 62], "excluded_lines": []}, "colossalai/legacy/engine/gradient_accumulation/_gradient_accumulation.py": {"executed_lines": [4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 19, 29, 38, 50, 65, 79, 97, 115, 116, 130, 135, 138, 141, 146, 164, 165, 174, 179, 180, 193, 196, 211, 221, 231, 241, 250, 260, 261, 274, 282], "summary": {"covered_lines": 37, "num_statements": 108, "percent_covered": 34.25925925925926, "percent_covered_display": "34", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [30, 31, 32, 35, 36, 47, 48, 59, 60, 62, 63, 74, 75, 77, 86, 88, 89, 90, 91, 92, 94, 95, 105, 106, 108, 109, 110, 112, 131, 132, 133, 136, 139, 142, 143, 144, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 161, 175, 176, 177, 191, 194, 204, 205, 206, 208, 209, 219, 229, 239, 248, 257, 275, 278, 279, 280, 287, 288, 289, 291, 292], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 7], "summary": {"covered_lines": 6, "num_statements": 6, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/_base_gradient_handler.py": {"executed_lines": [4, 7, 8, 16, 20, 21], "summary": {"covered_lines": 5, "num_statements": 7, "percent_covered": 71.42857142857143, "percent_covered_display": "71", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [17, 18], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/_data_parallel_gradient_handler.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 11, 22], "summary": {"covered_lines": 8, "num_statements": 10, "percent_covered": 80.0, "percent_covered_display": "80", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [25, 26], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/_moe_gradient_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 20, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 11, 12, 24, 25, 27, 32, 34, 35, 40, 41, 43, 44, 45], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/_pipeline_parallel_gradient_handler.py": {"executed_lines": [3, 5, 6, 7, 9, 10, 12, 15, 16, 17, 28], "summary": {"covered_lines": 10, "num_statements": 24, "percent_covered": 41.666666666666664, "percent_covered_display": "42", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [30, 32, 34, 35, 36, 44, 45, 48, 49, 50, 54, 55, 56, 57], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/_sequence_parallel_gradient_handler.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 11, 22], "summary": {"covered_lines": 8, "num_statements": 10, "percent_covered": 80.0, "percent_covered_display": "80", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [24, 25], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/_zero_gradient_handler.py": {"executed_lines": [1, 3, 6, 7, 8, 18], "summary": {"covered_lines": 5, "num_statements": 6, "percent_covered": 83.33333333333333, "percent_covered_display": "83", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [20], "excluded_lines": []}, "colossalai/legacy/engine/gradient_handler/utils.py": {"executed_lines": [1, 3, 4, 5, 8], "summary": {"covered_lines": 5, "num_statements": 21, "percent_covered": 23.80952380952381, "percent_covered_display": "24", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [10, 12, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30], "excluded_lines": []}, "colossalai/legacy/engine/schedule/__init__.py": {"executed_lines": [1, 2, 3, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/engine/schedule/_base_schedule.py": {"executed_lines": [4, 5, 7, 9, 10, 13, 14, 24, 28, 29, 35, 54, 64, 84, 87, 88, 106, 107, 119, 120], "summary": {"covered_lines": 19, "num_statements": 74, "percent_covered": 25.675675675675677, "percent_covered_display": "26", "missing_lines": 55, "excluded_lines": 0}, "missing_lines": [25, 26, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 55, 56, 57, 58, 59, 60, 61, 62, 75, 76, 77, 79, 80, 81, 82, 108, 109, 110, 111, 112, 113, 115, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138], "excluded_lines": []}, "colossalai/legacy/engine/schedule/_non_pipeline_schedule.py": {"executed_lines": [4, 5, 7, 9, 11, 14, 15, 34, 48], "summary": {"covered_lines": 8, "num_statements": 30, "percent_covered": 26.666666666666668, "percent_covered_display": "27", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [38, 39, 40, 46, 70, 73, 74, 75, 79, 82, 83, 84, 85, 87, 88, 90, 91, 92, 94, 96, 97, 99], "excluded_lines": []}, "colossalai/legacy/engine/schedule/_pipeline_schedule.py": {"executed_lines": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 52, 71, 72, 98, 137, 145, 163, 168, 183, 184, 207, 216, 242, 279, 321, 457, 458, 495, 509, 514, 519, 560], "summary": {"covered_lines": 33, "num_statements": 430, "percent_covered": 7.674418604651163, "percent_covered_display": "8", "missing_lines": 397, "excluded_lines": 0}, "missing_lines": [21, 22, 24, 25, 27, 33, 34, 36, 37, 38, 40, 42, 47, 49, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 106, 107, 108, 114, 116, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 169, 172, 173, 174, 175, 176, 177, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 208, 209, 210, 211, 213, 214, 217, 219, 221, 222, 225, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 256, 258, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 274, 277, 296, 297, 298, 300, 301, 302, 304, 305, 307, 310, 311, 312, 313, 315, 316, 317, 319, 337, 340, 341, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 364, 365, 366, 367, 370, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 390, 391, 392, 393, 398, 399, 401, 404, 405, 407, 408, 413, 418, 419, 423, 424, 426, 428, 429, 430, 432, 437, 438, 439, 440, 442, 446, 448, 450, 451, 452, 454, 479, 482, 485, 491, 492, 493, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 512, 515, 516, 517, 536, 537, 541, 543, 544, 545, 546, 547, 548, 549, 552, 554, 555, 558, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 592, 593, 594, 596, 597, 600, 601, 602, 603, 604, 612, 613, 614, 616, 617, 618, 619, 621, 623, 624, 625, 626, 627, 629, 633, 634, 637, 638, 639, 640, 641, 649, 652, 653, 654, 656, 658, 662, 663, 665, 666, 667, 668, 669, 670, 671, 673, 676, 677, 678, 679, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 697, 698, 699, 700, 701, 702, 703, 706, 707, 709, 710, 711, 716, 717, 718, 719, 720, 721, 722, 723, 733, 735, 742, 745, 747, 748, 751, 752, 759, 760, 761, 762, 764, 765, 766, 767, 771, 772, 774, 775, 776, 777, 779, 781, 782, 784, 787, 788, 789, 791, 795, 796, 798, 799, 801, 814, 815, 816, 817, 820, 821, 822, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 847, 848, 849, 851], "excluded_lines": []}, "colossalai/legacy/engine/schedule/_pipeline_schedule_v2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 78, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 78, "excluded_lines": 0}, "missing_lines": [4, 6, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 62, 80, 83, 86, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 104, 107, 108, 110, 114, 116, 117, 118, 123, 124, 127, 128, 130, 133, 134, 136, 137, 141, 142, 145, 146, 150, 151, 153, 155, 156, 157, 159, 160, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176], "excluded_lines": []}, "colossalai/legacy/global_variables.py": {"executed_lines": [1, 4, 5, 7, 8, 9, 10, 12, 13, 15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 60], "summary": {"covered_lines": 24, "num_statements": 25, "percent_covered": 96.0, "percent_covered_display": "96", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [44], "excluded_lines": []}, "colossalai/legacy/inference/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 4], "excluded_lines": []}, "colossalai/legacy/inference/async_engine.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 75, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 9, 14, 15, 16, 17, 19, 20, 22, 23, 25, 28, 29, 31, 35, 36, 38, 40, 42, 43, 45, 46, 48, 49, 51, 52, 53, 56, 65, 71, 72, 73, 74, 76, 80, 81, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 121, 122, 123, 125, 127, 128, 130, 132, 133], "excluded_lines": []}, "colossalai/legacy/inference/async_manager.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 72, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 8, 9, 34, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 85, 86, 88, 92, 95, 96, 97, 98, 99, 100, 103, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 128, 129, 130, 131, 132, 135, 136, 137, 148, 149, 151], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/get_tokenizer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 14, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [7, 9, 12, 18, 19, 21, 22, 29, 31, 32, 35, 36, 37, 40], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/infer_batch.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 189, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 189, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 7, 8, 10, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 84, 86, 88, 89, 90, 91, 94, 95, 96, 98, 99, 101, 102, 104, 105, 107, 110, 112, 130, 131, 135, 136, 137, 144, 145, 147, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 196, 200, 201, 202, 203, 204, 205, 207, 209, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 271, 272, 273, 275, 277, 280, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/io_struct.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 99, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 99, "excluded_lines": 0}, "missing_lines": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 29, 31, 32, 33, 34, 39, 40, 42, 43, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 115, 116, 119, 120, 121, 126, 127, 128, 133, 134, 135, 138, 148, 155, 156, 157, 158, 160, 161], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/ray_dist_init.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 86, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 86, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 25, 28, 29, 33, 36, 37, 38, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 64, 65, 66, 67, 70, 73, 76, 78, 87, 88, 90, 91, 93, 94, 96, 97, 99, 100, 103, 104, 105, 106, 107, 109, 110, 111, 115, 117, 118, 119, 127, 128, 129, 135, 136, 138, 139, 141, 142, 144, 145, 146, 147, 149, 150, 152, 153, 154], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/ray_init_config.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 9, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25, 26, 27, 30, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/req_queue.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 50, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [3, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 37, 39, 40, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 72, 73], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/sampling_params.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 59, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [3, 4, 6, 9, 10, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83], "excluded_lines": []}, "colossalai/legacy/inference/dynamic_batching/stats.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 41, 42, 43, 44, 45], "excluded_lines": []}, "colossalai/legacy/inference/hybridengine/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/inference/hybridengine/engine.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 61, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 61, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 17, 22, 60, 78, 79, 82, 83, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 103, 105, 106, 107, 108, 112, 120, 121, 123, 125, 134, 137, 138, 139, 140, 141, 143, 145, 146, 156, 157, 158, 160, 161, 162, 163, 164, 167, 169, 170], "excluded_lines": []}, "colossalai/legacy/inference/hybridengine/modeling/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/inference/hybridengine/modeling/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [4, 6, 8, 11, 21, 22, 25, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67], "excluded_lines": []}, "colossalai/legacy/inference/hybridengine/modeling/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 186, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 186, "excluded_lines": 0}, "missing_lines": [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 20, 23, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 46, 48, 49, 50, 51, 53, 54, 55, 58, 61, 62, 63, 74, 85, 86, 98, 99, 100, 101, 113, 127, 133, 134, 159, 161, 163, 164, 165, 166, 167, 168, 171, 172, 173, 176, 193, 195, 196, 212, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 243, 246, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 266, 267, 270, 271, 273, 275, 276, 279, 284, 285, 286, 287, 290, 291, 295, 300, 302, 303, 304, 306, 307, 309, 318, 319, 321, 322, 326, 327, 328, 339, 341, 342, 352, 354, 356, 366, 369, 370, 371, 372, 374, 376, 377, 379, 380, 382, 384, 385, 395, 397, 403, 404, 405, 411, 413, 414, 416, 417, 418, 420, 423, 430, 432, 441, 443, 446, 449, 450, 454, 462, 463, 464, 468, 469, 470, 472, 473, 474, 476, 484, 486, 489], "excluded_lines": []}, "colossalai/legacy/inference/hybridengine/polices/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/inference/hybridengine/polices/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 58, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 14, 17, 19, 20, 22, 23, 25, 26, 27, 28, 31, 32, 34, 35, 37, 39, 42, 43, 44, 46, 47, 49, 50, 52, 56, 97, 99, 100, 101, 103, 104, 105, 109, 110, 111, 115, 117, 120, 121, 122, 124, 125, 126, 130, 132, 133, 134, 136, 138, 139, 140, 141, 142], "excluded_lines": []}, "colossalai/legacy/inference/manager.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 164, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 164, "excluded_lines": 0}, "missing_lines": [3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 41, 42, 43, 44, 46, 49, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 68, 73, 74, 75, 77, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 107, 108, 109, 110, 111, 112, 118, 120, 121, 123, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 160, 162, 163, 164, 166, 168, 169, 171, 173, 182, 184, 188, 191, 192, 193, 194, 195, 199, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 224, 225, 226, 227, 229, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 261, 262, 263, 265, 267, 269, 273, 274, 276, 277, 280, 281, 282, 293, 294, 296], "excluded_lines": []}, "colossalai/legacy/inference/pipeline/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/inference/pipeline/microbatch_manager.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 108, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 108, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 9, 12, 13, 14, 15, 16, 19, 30, 37, 38, 39, 44, 45, 47, 48, 55, 56, 57, 58, 60, 62, 63, 70, 82, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 106, 108, 109, 113, 114, 119, 120, 122, 125, 133, 140, 142, 143, 148, 151, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 187, 191, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 247, 248, 249], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 4], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/batch_infer_state.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 69, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 69, "excluded_lines": 0}, "missing_lines": [2, 4, 5, 7, 11, 12, 17, 18, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 43, 44, 47, 48, 52, 53, 54, 55, 58, 59, 61, 62, 69, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/engine.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 228, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 228, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 31, 52, 62, 63, 64, 65, 68, 69, 71, 73, 74, 75, 78, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 108, 109, 110, 111, 113, 115, 118, 126, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 151, 152, 153, 155, 156, 157, 160, 163, 167, 171, 172, 173, 174, 176, 178, 184, 185, 186, 187, 189, 196, 197, 198, 209, 210, 211, 212, 213, 215, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 248, 249, 250, 251, 252, 253, 254, 256, 258, 275, 276, 278, 279, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 328, 329, 341, 343, 344, 350, 351, 352, 353, 354, 355, 357, 361, 363, 368, 369, 378, 383, 384, 385, 386, 387, 389, 390, 394, 395, 396, 398, 400, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 429, 430, 431, 434, 435, 436, 439, 440, 442, 444, 445, 446, 447, 448, 452, 454, 455, 456, 457, 458, 460, 461, 462, 464, 465, 466, 477, 478], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/kvcache_manager.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 56, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [7, 8, 11, 24, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 47, 50, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 105, 106], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/modeling/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/modeling/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [4, 6, 8, 11, 21, 22, 25, 33, 34, 35, 37, 39, 40, 41, 42, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 66, 67], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/modeling/bloom.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 216, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 216, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 17, 19, 20, 22, 23, 27, 28, 29, 32, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 60, 69, 70, 84, 86, 88, 93, 94, 96, 97, 100, 101, 103, 104, 105, 106, 107, 108, 110, 113, 114, 120, 122, 123, 125, 127, 128, 129, 131, 132, 133, 136, 141, 142, 143, 146, 147, 149, 151, 153, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 175, 177, 178, 180, 186, 187, 188, 193, 199, 200, 201, 202, 204, 206, 207, 209, 211, 213, 222, 233, 234, 235, 236, 238, 239, 242, 244, 245, 251, 252, 253, 255, 256, 258, 265, 266, 287, 289, 291, 296, 297, 299, 301, 314, 316, 318, 319, 321, 323, 324, 325, 327, 328, 332, 333, 334, 336, 344, 345, 354, 355, 363, 364, 366, 368, 375, 377, 378, 392, 395, 396, 398, 401, 413, 415, 417, 420, 421, 423, 426, 428, 429, 431, 433, 435, 436, 448, 451, 452, 453, 454, 456, 457, 459, 461, 462, 463, 464, 466, 467, 470, 472, 473, 475, 477, 481, 482, 484, 486, 489, 492, 493, 497, 498, 500, 501, 502, 503, 504, 516, 520, 523, 524, 525, 526, 527, 532, 535, 537, 538, 540], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/modeling/chatglm2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 217, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 217, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 9, 10, 19, 21, 22, 23, 27, 28, 29, 30, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 90, 96, 97, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 129, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 152, 153, 154, 157, 160, 161, 164, 168, 169, 170, 171, 173, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 202, 203, 205, 206, 207, 209, 217, 218, 231, 234, 235, 236, 238, 239, 241, 242, 243, 248, 249, 256, 257, 258, 263, 274, 275, 276, 278, 279, 290, 297, 298, 307, 308, 309, 310, 311, 312, 314, 315, 316, 318, 326, 328, 329, 330, 332, 333, 336, 338, 339, 341, 343, 344, 355, 357, 365, 366, 368, 369, 370, 372, 374, 377, 378, 380, 382, 383, 384, 386, 387, 395, 397, 398, 400, 401, 402, 410, 417, 424, 433, 437, 439, 440, 442, 445, 446, 452, 459, 462, 465, 469, 472, 479, 482, 493, 495, 498, 501, 502, 506, 515, 516, 519, 526, 543, 545], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/modeling/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 167, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 167, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 9, 10, 12, 14, 15, 18, 20, 21, 22, 23, 25, 26, 28, 29, 30, 31, 34, 36, 37, 38, 41, 43, 44, 45, 46, 48, 49, 50, 53, 57, 58, 69, 81, 82, 83, 84, 97, 111, 117, 118, 130, 132, 134, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 152, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 180, 181, 184, 185, 187, 189, 190, 193, 198, 199, 200, 201, 203, 204, 207, 208, 212, 216, 219, 220, 221, 223, 224, 225, 227, 236, 237, 239, 240, 242, 243, 247, 248, 249, 251, 252, 254, 261, 262, 272, 274, 276, 286, 289, 290, 291, 292, 294, 296, 297, 299, 300, 302, 304, 305, 315, 317, 323, 324, 325, 331, 333, 334, 336, 337, 338, 340, 343, 350, 352, 361, 363, 366, 369, 370, 374, 382, 383, 384, 388, 389, 390, 392, 393, 394, 396, 404, 406, 409], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/policies/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/policies/bloom.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 42, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 21, 22, 24, 25, 27, 29, 32, 33, 34, 36, 37, 39, 41, 42, 44, 74, 76, 80, 84, 85, 87, 88, 90, 91, 95, 96, 97, 98, 102], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/policies/chatglm2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 45, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [1, 3, 12, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38, 42, 43, 44, 46, 47, 48, 51, 52, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 74, 76, 77], "excluded_lines": []}, "colossalai/legacy/inference/tensor_parallel/policies/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 48, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 9, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 29, 31, 34, 35, 36, 38, 39, 41, 42, 44, 48, 89, 91, 92, 93, 95, 96, 97, 101, 102, 103, 107, 108, 109, 111, 112, 113, 117, 119, 120, 121], "excluded_lines": []}, "colossalai/legacy/initialize.py": {"executed_lines": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 40, 58, 126, 165, 206, 242], "summary": {"covered_lines": 33, "num_statements": 182, "percent_covered": 18.13186813186813, "percent_covered_display": "18", "missing_lines": 149, "excluded_lines": 0}, "missing_lines": [47, 48, 49, 50, 51, 52, 53, 54, 55, 88, 91, 94, 95, 96, 97, 98, 101, 104, 107, 109, 112, 114, 116, 117, 118, 145, 146, 147, 148, 149, 153, 184, 185, 186, 187, 188, 189, 193, 218, 219, 220, 221, 222, 223, 224, 225, 229, 271, 272, 275, 278, 279, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 308, 310, 312, 313, 314, 317, 318, 319, 321, 322, 323, 324, 325, 327, 334, 336, 337, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 358, 361, 362, 368, 369, 370, 371, 376, 377, 383, 384, 387, 388, 394, 395, 396, 397, 398, 399, 406, 407, 408, 409, 411, 412, 413, 418, 420, 421, 427, 428, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 448, 452, 454, 455, 456, 457, 463, 466, 467, 470, 471, 472, 480, 490], "excluded_lines": []}, "colossalai/legacy/nn/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 3], "excluded_lines": []}, "colossalai/legacy/nn/_ops/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "colossalai/legacy/nn/_ops/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 156, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 156, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 9, 11, 12, 15, 16, 17, 18, 21, 22, 25, 26, 29, 30, 31, 32, 35, 36, 37, 40, 42, 43, 44, 45, 46, 48, 51, 53, 54, 55, 58, 59, 64, 65, 66, 68, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 86, 88, 91, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 114, 123, 124, 125, 127, 128, 129, 131, 132, 133, 136, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 161, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 185, 186, 189, 190, 193, 194, 197, 198, 201, 202, 203, 204, 207, 209, 210, 212, 213, 214, 216, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 239, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 257, 258, 262, 263, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 284, 285], "excluded_lines": []}, "colossalai/legacy/nn/layer/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 9, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9], "excluded_lines": []}, "colossalai/legacy/nn/layer/base_layer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [4, 6, 8, 9, 12, 13, 15, 16, 17, 20, 24, 27, 31, 34, 38, 41, 45, 46, 48, 51, 52, 53, 54, 55, 58, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74], "excluded_lines": []}, "colossalai/legacy/nn/layer/colossalai_layer/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 6, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7], "excluded_lines": []}, "colossalai/legacy/nn/layer/colossalai_layer/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 30, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 18, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40], "excluded_lines": []}, "colossalai/legacy/nn/layer/colossalai_layer/dropout.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 17, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 17, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 10, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 31], "excluded_lines": []}, "colossalai/legacy/nn/layer/colossalai_layer/embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 30, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 24, 31, 40, 70, 81, 82, 83, 88, 89, 90, 100, 109, 112, 133, 145, 146, 157], "excluded_lines": []}, "colossalai/legacy/nn/layer/colossalai_layer/linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 31, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 27, 35, 67, 77, 78, 79, 80, 81, 82, 91, 94, 112, 123, 124, 125, 135, 144], "excluded_lines": []}, "colossalai/legacy/nn/layer/colossalai_layer/normalization.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 17, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 17, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 9, 10, 11, 13, 22, 36, 37, 38, 39, 41, 42], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_1d/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 14], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_1d/_operation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 53, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 53, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 8, 9, 12, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 47, 50, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 76, 77, 79, 81, 84, 86, 87, 89, 90, 92, 95, 96], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_1d/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 96, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 96, "excluded_lines": 0}, "missing_lines": [4, 5, 7, 8, 10, 13, 14, 17, 18, 21, 22, 23, 24, 27, 28, 29, 32, 34, 35, 36, 37, 39, 42, 44, 45, 46, 49, 50, 55, 56, 57, 59, 62, 64, 65, 66, 69, 70, 71, 72, 73, 76, 78, 81, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 104, 113, 114, 115, 117, 118, 119, 121, 122, 123, 126, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 151, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 179, 180, 183, 184, 187, 188], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_1d/layers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 474, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 474, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 41, 42, 43, 45, 46, 47, 50, 51, 71, 82, 83, 84, 94, 104, 107, 108, 123, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 185, 186, 204, 214, 215, 216, 217, 220, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 270, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 295, 297, 298, 303, 305, 310, 312, 313, 314, 315, 316, 319, 320, 338, 349, 350, 351, 352, 353, 356, 360, 361, 362, 363, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 407, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 430, 432, 433, 439, 441, 442, 444, 446, 447, 450, 451, 476, 487, 490, 491, 492, 493, 495, 496, 498, 502, 503, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 533, 534, 535, 537, 538, 539, 540, 542, 548, 550, 551, 552, 553, 554, 555, 556, 563, 565, 566, 573, 575, 577, 578, 580, 582, 584, 585, 587, 590, 591, 611, 623, 625, 628, 629, 630, 631, 633, 634, 637, 641, 642, 644, 646, 647, 648, 650, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 663, 664, 666, 667, 668, 670, 671, 672, 673, 674, 676, 677, 678, 680, 681, 682, 683, 685, 691, 693, 694, 695, 696, 697, 698, 699, 706, 708, 710, 711, 716, 718, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 738, 739, 740, 742, 744, 745, 746, 747, 748, 750, 753, 754, 784, 794, 796, 797, 798, 800, 801, 802, 804, 810, 811, 812, 814, 815, 817, 818, 819, 820, 821, 823, 824, 825, 826, 828, 829, 830, 831, 833, 834, 835, 837, 840, 842, 843, 844, 845, 852, 854, 855, 857, 859, 862, 863, 893, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 916, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 938, 939, 944, 945, 947, 948, 949, 950, 952, 953, 954, 956, 959, 961, 962, 963, 964, 971, 973, 975, 977, 978, 980, 985, 987, 988, 991, 992, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1015, 1016, 1040, 1052, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1078, 1079], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2d/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 12], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2d/_operation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 395, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 395, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 14, 45, 46, 47, 48, 50, 51, 54, 57, 58, 74, 75, 76, 77, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 147, 183, 200, 222, 223, 224, 243, 245, 246, 248, 249, 250, 251, 252, 253, 257, 258, 260, 261, 263, 268, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 335, 349, 352, 375, 376, 377, 392, 394, 395, 397, 398, 399, 400, 401, 402, 406, 407, 409, 410, 412, 417, 423, 424, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 479, 493, 507, 510, 532, 533, 534, 549, 551, 552, 554, 555, 556, 557, 558, 559, 563, 564, 566, 567, 569, 574, 580, 581, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 600, 601, 602, 603, 604, 606, 607, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 635, 636, 650, 664, 667, 668, 669, 670, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 700, 701, 703, 704, 705, 706, 708, 709, 710, 712, 713, 714, 715, 718, 753, 769, 770, 771, 772, 781, 783, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 803, 805, 806, 807, 808, 810, 813, 835, 838, 839, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 852, 855, 867, 870, 880, 881, 883, 884, 886, 888, 893, 894, 895, 896, 898, 899, 900, 903, 914, 917, 918, 919, 920, 921, 922, 924, 925, 926, 929, 941, 942, 943, 945, 948, 949, 950, 951, 952, 953, 954, 955, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 974, 977, 985], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2d/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 12, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 19, 20], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2d/layers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 484, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 484, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 35, 38, 39, 58, 68, 70, 71, 72, 75, 76, 77, 78, 81, 82, 85, 86, 91, 92, 94, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 128, 129, 136, 143, 145, 146, 147, 148, 149, 150, 153, 161, 162, 169, 170, 171, 173, 176, 178, 193, 194, 195, 209, 211, 225, 227, 230, 231, 245, 246, 249, 250, 253, 254, 255, 256, 259, 262, 264, 265, 266, 268, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 292, 293, 300, 307, 309, 310, 311, 312, 313, 314, 317, 325, 326, 333, 334, 336, 337, 338, 339, 340, 343, 344, 345, 347, 349, 351, 354, 368, 369, 383, 385, 386, 389, 390, 411, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 445, 449, 454, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 497, 499, 500, 501, 504, 505, 512, 519, 521, 522, 523, 524, 525, 526, 531, 539, 540, 547, 548, 550, 551, 553, 554, 558, 559, 561, 562, 563, 565, 566, 567, 568, 569, 571, 574, 575, 605, 615, 617, 618, 619, 620, 621, 623, 624, 625, 627, 633, 634, 636, 637, 639, 640, 641, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 655, 656, 657, 660, 661, 668, 675, 677, 678, 679, 682, 690, 691, 698, 699, 701, 702, 704, 705, 707, 710, 711, 741, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 763, 764, 766, 774, 775, 776, 778, 779, 781, 782, 783, 784, 785, 787, 788, 793, 794, 796, 797, 798, 799, 801, 802, 803, 806, 807, 814, 821, 823, 824, 825, 828, 836, 837, 844, 845, 847, 848, 849, 850, 852, 856, 857, 858, 861, 862, 880, 890, 891, 892, 893, 894, 895, 896, 899, 901, 902, 903, 905, 913, 914, 915, 919, 921, 922, 924, 925, 926, 928, 929, 930, 931, 932, 934, 935, 937, 938, 939, 940, 942, 943, 944, 945, 946, 948, 949, 950, 951, 953, 954, 955, 956, 959, 960, 967, 974, 976, 977, 978, 979, 980, 981, 982, 983, 986, 994, 995, 1002, 1003, 1005, 1006, 1008, 1025, 1026, 1044, 1054, 1056, 1057, 1060, 1061, 1062, 1063, 1066, 1067, 1070, 1071, 1072, 1073, 1075, 1078, 1080, 1081, 1083, 1086, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1121, 1122, 1129, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1156, 1157, 1164, 1165, 1166, 1168, 1171, 1173, 1188, 1189, 1203], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2p5d/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 12], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2p5d/_operation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 431, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 431, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 18, 19, 22, 23, 26, 27, 28, 29, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 100, 136, 153, 176, 177, 178, 198, 200, 201, 203, 204, 205, 206, 207, 208, 212, 213, 215, 216, 218, 224, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 296, 311, 314, 337, 338, 339, 355, 357, 358, 360, 361, 362, 363, 364, 365, 369, 370, 372, 373, 375, 381, 388, 389, 391, 392, 393, 395, 396, 397, 398, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 461, 476, 479, 502, 503, 504, 520, 522, 523, 525, 526, 527, 528, 529, 530, 534, 535, 537, 538, 540, 546, 553, 554, 556, 557, 558, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 573, 574, 575, 576, 577, 579, 580, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 608, 609, 624, 639, 642, 643, 644, 645, 661, 662, 664, 667, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 712, 713, 714, 733, 734, 753, 754, 755, 761, 762, 763, 783, 784, 805, 842, 859, 874, 875, 876, 879, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 893, 894, 895, 896, 898, 899, 900, 902, 903, 904, 905, 907, 910, 926, 929, 930, 931, 932, 933, 934, 936, 937, 939, 940, 941, 942, 943, 946, 958, 961, 974, 975, 976, 977, 978, 979, 980, 982, 983, 985, 986, 987, 988, 989, 990, 993, 996, 1006, 1007, 1009, 1010, 1012, 1016, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1031, 1042, 1045, 1046, 1047, 1048, 1049, 1050, 1052, 1053, 1054, 1057, 1069, 1070, 1071, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1107, 1115], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2p5d/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 14, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 15, 21, 22], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_2p5d/layers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 477, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 477, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 36, 39, 40, 59, 69, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 87, 88, 93, 94, 96, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 130, 134, 136, 137, 144, 151, 153, 154, 155, 156, 157, 158, 159, 162, 170, 171, 178, 179, 180, 182, 185, 187, 203, 204, 205, 220, 222, 237, 239, 242, 243, 257, 258, 261, 262, 265, 266, 267, 268, 269, 272, 275, 277, 278, 279, 281, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 305, 306, 313, 320, 322, 323, 324, 325, 326, 327, 330, 338, 339, 346, 347, 349, 350, 351, 352, 353, 356, 357, 358, 360, 362, 364, 365, 380, 381, 396, 398, 399, 402, 403, 424, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 458, 462, 467, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 508, 509, 510, 512, 513, 514, 517, 518, 525, 532, 534, 535, 536, 537, 538, 539, 544, 552, 553, 560, 561, 563, 564, 566, 567, 571, 572, 574, 575, 576, 578, 579, 580, 581, 582, 584, 587, 588, 618, 628, 630, 631, 632, 633, 634, 636, 637, 638, 640, 646, 647, 649, 650, 652, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 673, 674, 681, 688, 690, 691, 692, 695, 703, 704, 711, 712, 714, 715, 717, 719, 721, 724, 725, 755, 765, 766, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 780, 788, 789, 790, 792, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 811, 812, 813, 816, 817, 824, 831, 833, 834, 835, 838, 846, 847, 854, 855, 857, 859, 861, 862, 864, 869, 871, 872, 875, 876, 894, 904, 905, 906, 907, 908, 909, 910, 911, 914, 916, 917, 918, 920, 928, 929, 930, 934, 936, 937, 939, 940, 941, 943, 944, 945, 946, 947, 949, 950, 952, 953, 954, 955, 957, 958, 959, 960, 961, 963, 964, 965, 966, 968, 969, 970, 971, 974, 975, 982, 989, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1009, 1010, 1017, 1018, 1020, 1021, 1023, 1040, 1041, 1059, 1069, 1071, 1072, 1075, 1076, 1077, 1078, 1079, 1082, 1083, 1086, 1087, 1088, 1089, 1091, 1094, 1096, 1097, 1099, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1137, 1138, 1145, 1152, 1154, 1157, 1159, 1175, 1176, 1191], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_3d/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 12], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_3d/_operation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 237, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 237, "excluded_lines": 0}, "missing_lines": [4, 6, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 30, 31, 32, 33, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 50, 51, 53, 56, 57, 59, 61, 64, 84, 94, 95, 96, 97, 108, 109, 111, 112, 113, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 148, 150, 152, 155, 177, 189, 190, 191, 192, 203, 204, 206, 207, 208, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 231, 234, 235, 237, 238, 239, 240, 242, 244, 246, 249, 271, 283, 284, 285, 286, 287, 288, 289, 291, 294, 295, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 322, 323, 325, 326, 327, 329, 331, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 359, 387, 400, 415, 416, 417, 421, 422, 423, 426, 429, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 466, 467, 468, 471, 482, 485, 486, 487, 488, 489, 490, 491, 493, 494, 495, 496, 499, 511, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 527, 539, 540, 541, 545, 548, 549, 550, 551, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 573, 576, 591], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_3d/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 63, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 63, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 14, 15, 18, 19, 20, 21, 22, 24, 25, 31, 32, 39, 42, 43, 44, 50, 51, 52, 53, 54, 57, 58, 59, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 93, 94, 97, 98, 99, 102, 103, 106, 107, 108, 109, 110], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_3d/layers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 513, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 513, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 20, 21, 22, 23, 24, 25, 30, 32, 33, 43, 46, 47, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 113, 114, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 139, 140, 147, 148, 150, 151, 162, 163, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 211, 212, 218, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 233, 234, 235, 237, 238, 240, 241, 242, 247, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 265, 266, 273, 274, 281, 288, 290, 291, 292, 293, 294, 295, 298, 306, 307, 315, 316, 323, 324, 325, 327, 328, 336, 337, 338, 339, 341, 344, 345, 363, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 386, 394, 395, 396, 400, 402, 403, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 441, 442, 449, 450, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 474, 475, 477, 478, 488, 489, 507, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 529, 530, 531, 533, 541, 542, 543, 549, 551, 552, 553, 554, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 569, 571, 572, 573, 578, 580, 581, 582, 583, 584, 586, 587, 588, 589, 591, 592, 593, 594, 597, 598, 605, 606, 613, 620, 622, 623, 624, 625, 626, 627, 630, 638, 639, 647, 648, 655, 656, 658, 659, 669, 670, 691, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 726, 730, 733, 741, 742, 744, 745, 746, 747, 748, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 767, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 784, 785, 786, 788, 789, 790, 792, 793, 794, 797, 798, 805, 806, 808, 810, 812, 813, 814, 815, 816, 817, 822, 823, 830, 831, 833, 834, 837, 838, 839, 841, 842, 843, 845, 848, 849, 879, 889, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 903, 909, 910, 912, 913, 915, 916, 917, 919, 920, 921, 922, 923, 924, 927, 929, 930, 931, 932, 934, 935, 936, 937, 939, 940, 941, 944, 945, 952, 953, 955, 957, 959, 960, 961, 964, 965, 972, 973, 975, 976, 979, 981, 984, 985, 1015, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1050, 1051, 1052, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1069, 1070, 1072, 1073, 1074, 1075, 1077, 1078, 1079, 1082, 1083, 1090, 1091, 1098, 1105, 1107, 1108, 1109, 1112, 1120, 1121, 1129, 1130, 1137, 1138, 1140, 1141, 1143, 1144, 1145, 1147, 1149, 1151, 1152, 1154], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_sequence/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 4], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_sequence/_operation.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 82, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 82, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 8, 9, 10, 11, 12, 15, 20, 21, 22, 24, 25, 28, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 60, 61, 64, 66, 67, 68, 71, 78, 79, 82, 83, 84, 85, 87, 89, 92, 97, 98, 99, 100, 101, 102, 104, 113, 114, 117, 118, 121, 122, 123, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 150, 153, 154, 155, 158, 160], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_sequence/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 9, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [5, 6, 7, 8, 9, 12, 13, 14, 15], "excluded_lines": []}, "colossalai/legacy/nn/layer/parallel_sequence/layers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 90, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 90, "excluded_lines": 0}, "missing_lines": [4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 34, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 66, 68, 71, 76, 77, 79, 80, 81, 83, 93, 96, 98, 101, 109, 112, 116, 119, 120, 121, 124, 125, 128, 136, 138, 141, 149, 152, 155, 158, 159, 162, 165, 168, 173, 183, 186, 189, 192, 194, 196, 198, 199, 208, 227, 228, 231, 232, 233, 235, 241, 243, 244, 246, 247, 249, 251, 253, 254, 256, 257, 259, 261, 262], "excluded_lines": []}, "colossalai/legacy/nn/layer/utils/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 12], "excluded_lines": []}, "colossalai/legacy/nn/layer/utils/common.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 48, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [4, 5, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 30, 32, 33, 34, 36, 37, 38, 41, 51, 52, 53, 56, 57, 60, 63, 64, 65, 68, 69, 70, 73, 74, 80, 81, 82, 83, 84, 86, 89], "excluded_lines": []}, "colossalai/legacy/nn/layer/vanilla/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 11], "excluded_lines": []}, "colossalai/legacy/nn/layer/vanilla/layers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 147, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 147, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 31, 32, 33, 34, 35, 36, 37, 38, 41, 50, 51, 52, 54, 55, 58, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 89, 90, 91, 93, 94, 97, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 124, 125, 127, 128, 131, 132, 154, 166, 167, 168, 169, 170, 171, 172, 173, 175, 180, 181, 184, 190, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 207, 208, 209, 210, 213, 214, 232, 242, 243, 244, 246, 247, 248, 250, 255, 256, 257, 261, 263, 265, 266, 268, 269, 271, 272, 274, 275, 278, 279, 294, 295, 297, 298, 300, 302, 303, 304, 306, 308, 309, 312, 313, 331, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 357, 358, 360], "excluded_lines": []}, "colossalai/legacy/nn/layer/wrapper/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/nn/layer/wrapper/pipeline_wrapper.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 43, 44, 47, 48, 49], "excluded_lines": []}, "colossalai/legacy/nn/loss/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 9, 10, 11, 13, 19, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40], "excluded_lines": []}, "colossalai/legacy/nn/loss/loss_1d.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 59, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 19, 20, 22, 25, 26, 27, 28, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 49, 50, 51, 54, 56, 57, 58, 60, 61, 62, 64, 67, 69, 70, 73, 74, 77, 79, 82, 83, 90, 91, 92, 94, 101, 102, 103, 104], "excluded_lines": []}, "colossalai/legacy/nn/loss/loss_2d.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 74, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 35, 36, 37, 38, 39, 40, 42, 52, 53, 54, 55, 56, 57, 60, 63, 64, 65, 71, 72, 77, 79, 80, 81, 82, 84, 86, 87, 88, 92, 93, 94, 96, 97, 98, 100, 102, 103, 105, 107, 108, 109, 111, 114, 117, 118, 121, 122, 125, 127, 130, 131, 138, 139, 140, 142, 149, 150, 154, 155, 156, 157], "excluded_lines": []}, "colossalai/legacy/nn/loss/loss_2p5d.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 74, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 35, 36, 37, 38, 39, 40, 42, 49, 50, 51, 52, 53, 54, 57, 60, 61, 62, 66, 67, 71, 73, 74, 75, 76, 78, 80, 81, 82, 86, 87, 88, 90, 91, 92, 94, 96, 97, 99, 101, 102, 103, 105, 108, 111, 112, 115, 116, 119, 121, 124, 125, 133, 134, 135, 137, 144, 145, 146, 147, 148, 150], "excluded_lines": []}, "colossalai/legacy/nn/loss/loss_3d.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 81, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 81, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 16, 35, 36, 37, 38, 39, 40, 41, 43, 50, 51, 52, 53, 54, 55, 56, 59, 63, 64, 65, 69, 70, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 98, 100, 101, 102, 104, 107, 109, 110, 113, 114, 115, 117, 120, 121, 128, 129, 130, 131, 132, 133, 135, 142, 143, 144, 145, 146, 147, 148], "excluded_lines": []}, "colossalai/legacy/nn/metric/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 16, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 8, 10, 17, 18, 19, 20, 21, 22, 24, 26, 27], "excluded_lines": []}, "colossalai/legacy/nn/metric/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 5, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 6, 7], "excluded_lines": []}, "colossalai/legacy/nn/metric/accuracy_2d.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 13, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 9, 12, 13, 15, 25, 26, 27, 28, 29], "excluded_lines": []}, "colossalai/legacy/nn/metric/accuracy_2p5d.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 13, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 9, 12, 13, 15, 25, 26, 27, 28, 29], "excluded_lines": []}, "colossalai/legacy/nn/metric/accuracy_3d.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 18, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 11, 14, 15, 16, 17, 19, 29, 30, 31, 32, 33, 34], "excluded_lines": []}, "colossalai/legacy/nn/parallel/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/nn/parallel/data_parallel.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 99, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 99, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 9, 11, 14, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 33, 52, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 88, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 128, 129, 130, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 152, 153, 168, 169, 171, 172, 174, 175], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 6, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [1, 11, 12, 13, 14, 16], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 8, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 9], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/base_embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 20, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 20, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/cache_mgr.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 294, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 294, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 17, 20, 21, 22, 23, 32, 33, 34, 37, 54, 63, 64, 65, 66, 67, 68, 69, 72, 75, 76, 77, 79, 81, 83, 84, 86, 88, 91, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 120, 128, 130, 131, 132, 137, 138, 140, 142, 143, 145, 152, 155, 162, 170, 176, 179, 180, 186, 188, 197, 203, 204, 205, 207, 208, 225, 226, 228, 229, 230, 231, 232, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 254, 255, 260, 261, 262, 264, 266, 267, 269, 271, 273, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 302, 303, 304, 307, 309, 310, 312, 314, 315, 324, 325, 326, 328, 329, 337, 338, 340, 341, 342, 343, 345, 347, 352, 353, 354, 356, 357, 358, 360, 361, 362, 365, 366, 367, 369, 371, 372, 373, 376, 377, 378, 380, 382, 383, 385, 386, 391, 393, 396, 397, 398, 401, 402, 404, 406, 407, 408, 409, 410, 414, 415, 417, 418, 421, 422, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 438, 439, 442, 443, 444, 446, 447, 449, 451, 452, 453, 463, 464, 466, 467, 470, 471, 473, 474, 476, 477, 479, 481, 482, 486, 487, 490, 492, 493, 501, 502, 504, 508, 512, 513, 515, 516, 518, 519, 520, 521, 522, 523, 525, 526, 529, 530, 531, 532, 533, 535, 542, 543, 544, 545, 546, 547, 549, 550, 552, 553, 555, 557, 558, 561, 564, 565, 566, 567, 569, 571, 573, 575, 576, 584, 586, 588, 589, 591, 592, 595, 598, 599, 600, 601, 603, 605], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/cached_embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 64, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 11, 39, 60, 72, 73, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 111, 114, 116, 117, 118, 119, 121, 134, 135, 136, 138, 139, 140, 142, 143, 145, 146, 148, 149, 153, 154, 155, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 175, 177, 178, 179, 180, 186], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/copyer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 25, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [1, 2, 5, 13, 14, 16, 17, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/embedding_config.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 10, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [1, 4, 13, 23, 24, 25, 26, 27, 28, 29], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/parallel_cached_embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 56, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 8, 10, 11, 14, 15, 16, 18, 21, 22, 24, 25, 28, 29, 30, 33, 34, 55, 56, 58, 61, 63, 83, 85, 86, 87, 88, 89, 90, 91, 96, 98, 107, 108, 109, 110, 123, 124, 125, 128, 130, 131, 133, 134, 150, 151, 167, 168, 170, 171, 173, 174], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/parallel_cached_embedding_tablewise.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 97, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 97, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 10, 11, 12, 15, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 89, 90, 91, 92, 93, 95, 98, 99, 100, 102, 104, 112, 114, 115, 120, 121, 122, 123, 124, 125, 138, 139, 140, 141, 142, 143, 144, 146, 153, 154, 155, 156, 158, 159, 160, 161, 163, 165, 167, 189, 195, 197, 198, 202, 205, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 228, 229], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/cache_embedding/parallel_cached_embedding_tablewise_split_cache.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 73, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 73, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 9, 10, 12, 13, 14, 17, 22, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 103, 106, 108, 113, 116, 117, 118, 119, 120, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/colo_module.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 30, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 7, 8, 9, 10, 12, 13, 15, 18, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 42, 43, 45, 46], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/embedding.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 15, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 28, 36], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/linear.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 15, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 26, 32], "excluded_lines": []}, "colossalai/legacy/nn/parallel/layers/module_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 83, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 83, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 8, 10, 13, 15, 18, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116], "excluded_lines": []}, "colossalai/legacy/nn/parallel/reducer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 77, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 77, "excluded_lines": 0}, "missing_lines": [6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 67, 68, 74, 76, 77, 78, 79, 80, 82, 83, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112], "excluded_lines": []}, "colossalai/legacy/pipeline/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 4], "excluded_lines": []}, "colossalai/legacy/pipeline/layer_spec.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 39, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 39, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55], "excluded_lines": []}, "colossalai/legacy/pipeline/middleware/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/pipeline/middleware/adaptor/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/pipeline/middleware/adaptor/fx.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 109, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 109, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 7, 8, 9, 10, 11, 13, 14, 15, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 151, 152, 154], "excluded_lines": []}, "colossalai/legacy/pipeline/middleware/topo.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 144, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 144, "excluded_lines": 0}, "missing_lines": [1, 2, 7, 8, 9, 10, 12, 13, 14, 16, 17, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 34, 35, 38, 39, 41, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71, 73, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 123, 124, 139, 140, 141, 142, 143, 145, 146, 148, 149, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 209, 210], "excluded_lines": []}, "colossalai/legacy/pipeline/pipelinable.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 161, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 161, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 7, 9, 10, 20, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 55, 56, 58, 64, 65, 67, 76, 77, 78, 81, 82, 84, 87, 88, 89, 90, 92, 99, 100, 103, 104, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 128, 129, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 208, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 259, 261, 262, 264], "excluded_lines": []}, "colossalai/legacy/pipeline/pipeline_process_group.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 113, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 113, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 10, 13, 14, 16, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 44, 47, 48, 50, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 97, 98, 100, 101, 103, 104, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168], "excluded_lines": []}, "colossalai/legacy/pipeline/rpc/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [1, 2, 4], "excluded_lines": []}, "colossalai/legacy/pipeline/rpc/_pipeline_base.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 896, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 896, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 42, 43, 46, 47, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 74, 75, 78, 79, 80, 81, 82, 83, 85, 92, 93, 96, 97, 110, 112, 113, 114, 115, 117, 118, 120, 121, 124, 125, 126, 127, 130, 133, 136, 137, 140, 141, 142, 143, 144, 147, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 228, 233, 234, 235, 236, 238, 239, 241, 242, 243, 245, 246, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 288, 290, 292, 294, 305, 306, 307, 310, 313, 314, 315, 316, 317, 320, 321, 322, 324, 335, 336, 337, 340, 344, 345, 346, 349, 350, 351, 352, 355, 356, 357, 359, 360, 361, 363, 375, 376, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 409, 410, 411, 412, 413, 414, 415, 416, 418, 423, 424, 425, 426, 427, 428, 429, 430, 432, 436, 448, 451, 452, 453, 454, 459, 460, 461, 463, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 489, 501, 503, 504, 505, 506, 511, 512, 513, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 578, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 615, 617, 618, 619, 620, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 653, 654, 655, 656, 657, 658, 660, 661, 662, 664, 665, 666, 667, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 682, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 702, 704, 705, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 763, 765, 766, 771, 772, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 789, 791, 792, 794, 795, 796, 797, 799, 800, 802, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 816, 818, 819, 820, 821, 824, 825, 826, 829, 830, 831, 832, 834, 836, 839, 843, 845, 846, 847, 848, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 864, 865, 868, 869, 870, 872, 873, 874, 876, 877, 880, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 894, 896, 898, 899, 901, 902, 905, 910, 911, 912, 914, 916, 917, 918, 919, 920, 921, 923, 926, 928, 929, 930, 931, 933, 934, 937, 938, 940, 944, 945, 949, 950, 951, 952, 953, 954, 955, 956, 958, 959, 962, 965, 966, 968, 969, 970, 972, 973, 978, 980, 982, 983, 985, 986, 987, 988, 989, 990, 992, 993, 995, 996, 997, 999, 1000, 1001, 1002, 1004, 1005, 1008, 1009, 1010, 1011, 1014, 1016, 1017, 1020, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1032, 1034, 1035, 1036, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1058, 1059, 1061, 1062, 1063, 1064, 1067, 1068, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1118, 1119, 1121, 1127, 1128, 1129, 1130, 1131, 1133, 1137, 1138, 1139, 1140, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1179, 1180, 1181, 1186, 1188, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1220, 1221, 1223, 1224, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1246, 1247, 1248, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1260, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1278, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1290, 1291, 1293, 1294, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1318, 1320, 1323, 1324, 1327, 1328, 1331, 1333, 1337, 1338, 1341, 1342, 1345, 1347, 1348, 1351, 1354, 1357, 1359, 1360, 1362, 1363, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380], "excluded_lines": []}, "colossalai/legacy/pipeline/rpc/_pipeline_schedule.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 203, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 203, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 9, 16, 17, 19, 21, 22, 23, 25, 26, 28, 30, 33, 34, 46, 47, 50, 52, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 84, 89, 90, 92, 93, 94, 95, 96, 98, 101, 102, 114, 115, 119, 121, 136, 137, 138, 139, 140, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 165, 168, 169, 171, 172, 176, 177, 178, 179, 181, 182, 183, 185, 189, 190, 191, 192, 193, 196, 198, 199, 200, 203, 206, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 242, 243, 245, 246, 247, 248, 249, 253, 256, 257, 259, 260, 261, 264, 265, 276, 277, 278, 280, 294, 297, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 321, 324, 325, 326, 327, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 357, 358, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377], "excluded_lines": []}, "colossalai/legacy/pipeline/rpc/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 100, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 100, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 29, 41, 42, 43, 44, 45, 46, 47, 48, 50, 53, 54, 57, 58, 59, 60, 63, 64, 65, 67, 68, 71, 72, 75, 76, 77, 79, 81, 82, 83, 85, 86, 89, 90, 93, 94, 95, 97, 98, 99, 101, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 126, 128, 129, 131, 132, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "excluded_lines": []}, "colossalai/legacy/pipeline/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 183, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 183, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 8, 9, 12, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 107, 108, 109, 111, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 151, 154, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 184, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276], "excluded_lines": []}, "colossalai/legacy/registry/__init__.py": {"executed_lines": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "summary": {"covered_lines": 17, "num_statements": 17, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/registry/registry.py": {"executed_lines": [4, 5, 8, 9, 18, 19, 20, 21, 23, 24, 27, 37, 38, 39, 42, 44, 64], "summary": {"covered_lines": 16, "num_statements": 31, "percent_covered": 51.61290322580645, "percent_covered_display": "52", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [25, 56, 57, 58, 59, 60, 61, 62, 74, 76, 77, 78, 79, 80, 82], "excluded_lines": []}, "colossalai/legacy/tensor/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8], "summary": {"covered_lines": 7, "num_statements": 7, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/tensor/compute_spec.py": {"executed_lines": [1, 4, 5, 6, 7, 8, 11, 12, 19, 25, 28], "summary": {"covered_lines": 10, "num_statements": 15, "percent_covered": 66.66666666666667, "percent_covered_display": "67", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [20, 21, 23, 26, 29], "excluded_lines": []}, "colossalai/legacy/tensor/const.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 6], "excluded_lines": []}, "colossalai/legacy/tensor/dist_spec_mgr.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 13, 28, 29, 30, 37, 38, 49, 50, 52, 53, 56, 57, 85, 86, 120, 121, 148, 149, 153, 154, 158, 159, 163, 164, 174, 175, 199, 200, 201], "summary": {"covered_lines": 35, "num_statements": 118, "percent_covered": 29.661016949152543, "percent_covered_display": "30", "missing_lines": 83, "excluded_lines": 0}, "missing_lines": [23, 24, 25, 31, 32, 33, 34, 35, 39, 54, 69, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 124, 125, 126, 128, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 150, 151, 155, 156, 160, 161, 165, 166, 167, 168, 170, 171, 172, 178, 179, 181, 182, 189, 190, 191, 193, 195, 202, 203, 204, 206], "excluded_lines": []}, "colossalai/legacy/tensor/distspec.py": {"executed_lines": [1, 2, 4, 7, 8, 9, 12, 13, 27, 32, 40, 49, 60], "summary": {"covered_lines": 12, "num_statements": 31, "percent_covered": 38.70967741935484, "percent_covered_display": "39", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [28, 29, 30, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 57, 75, 76, 77], "excluded_lines": []}, "colossalai/legacy/tensor/op_wrapper.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 13, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [1, 2, 5, 8, 10, 13, 41, 42, 44, 45, 46, 48, 50], "excluded_lines": []}, "colossalai/legacy/tensor/process_group.py": {"executed_lines": [1, 3, 5, 6, 9, 10, 17, 23, 34, 37, 38, 52, 121, 138, 139, 148, 156, 173, 183, 193, 203, 213, 223, 233, 243, 253, 263, 273, 283, 296, 309, 319], "summary": {"covered_lines": 31, "num_statements": 131, "percent_covered": 23.66412213740458, "percent_covered_display": "24", "missing_lines": 100, "excluded_lines": 0}, "missing_lines": [13, 15, 18, 19, 20, 21, 27, 28, 29, 30, 31, 59, 60, 61, 63, 64, 66, 68, 69, 70, 72, 73, 75, 76, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 96, 97, 98, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 125, 126, 128, 129, 130, 132, 133, 134, 136, 146, 149, 150, 151, 152, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 191, 201, 211, 221, 231, 241, 251, 261, 271, 281, 293, 294, 306, 307, 317, 327], "excluded_lines": []}, "colossalai/legacy/tensor/tensor_spec.py": {"executed_lines": [1, 2, 4, 5, 7, 10, 11, 12, 19, 20, 21], "summary": {"covered_lines": 10, "num_statements": 10, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/trainer/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/trainer/_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 171, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 171, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 53, 60, 61, 62, 63, 64, 65, 68, 69, 72, 75, 78, 80, 81, 83, 85, 86, 89, 91, 92, 94, 96, 97, 98, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 118, 120, 130, 131, 133, 135, 137, 145, 146, 147, 149, 151, 152, 154, 156, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 180, 181, 187, 188, 189, 191, 193, 194, 195, 198, 199, 201, 202, 203, 205, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 255, 279, 280, 281, 284, 285, 286, 288, 291, 292, 293, 295, 296, 298, 299, 300, 301, 302, 303, 307, 308, 310, 311, 314, 315, 316, 318, 320, 328, 329, 336, 339, 340, 344, 345, 346, 348, 365, 368, 369, 370, 372, 373, 374, 375, 376, 377, 381, 382, 385, 391, 401, 405, 406, 407, 408], "excluded_lines": []}, "colossalai/legacy/trainer/hooks/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 6, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 10, 11, 13], "excluded_lines": []}, "colossalai/legacy/trainer/hooks/_base_hook.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 21, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [4, 6, 9, 17, 18, 20, 23, 26, 29, 32, 42, 45, 48, 51, 54, 57, 60, 63, 73, 81, 82], "excluded_lines": []}, "colossalai/legacy/trainer/hooks/_checkpoint_hook.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 31, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [3, 5, 6, 7, 8, 10, 13, 14, 30, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 56, 59, 60, 63, 67, 69, 72, 73, 76], "excluded_lines": []}, "colossalai/legacy/trainer/hooks/_commons_.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 7, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 6, 7, 8, 9], "excluded_lines": []}, "colossalai/legacy/trainer/hooks/_log_hook.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 146, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 146, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 31, 32, 33, 34, 36, 37, 40, 41, 50, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 70, 71, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 109, 110, 123, 130, 131, 134, 135, 138, 139, 140, 142, 144, 145, 148, 153, 155, 157, 158, 160, 163, 164, 166, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 190, 191, 193, 194, 197, 198, 212, 221, 222, 223, 224, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 251, 253, 254, 255, 257, 259, 260, 261, 264, 265, 277, 285, 286, 287, 289, 291, 292, 294, 296, 297, 299, 301, 302], "excluded_lines": []}, "colossalai/legacy/trainer/hooks/_lr_scheduler_hook.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 21, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 23, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 46, 47, 48, 49], "excluded_lines": []}, "colossalai/legacy/trainer/hooks/_metric_hook.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 223, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 223, "excluded_lines": 0}, "missing_lines": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 21, 32, 34, 36, 37, 39, 41, 42, 47, 48, 53, 54, 57, 58, 66, 67, 68, 76, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 119, 121, 122, 123, 126, 134, 135, 136, 138, 139, 141, 142, 144, 145, 147, 148, 150, 151, 152, 155, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 187, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 214, 226, 230, 231, 233, 234, 235, 238, 239, 248, 249, 251, 252, 254, 255, 256, 259, 260, 262, 263, 264, 266, 267, 268, 270, 271, 272, 274, 275, 276, 279, 280, 290, 291, 292, 294, 295, 296, 297, 300, 302, 303, 304, 306, 307, 308, 309, 312, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 352, 354, 355, 357, 358, 359, 361, 364, 366, 367, 368, 369, 371, 373, 374, 377, 378, 380, 381, 382, 385, 386, 398, 399, 400, 401, 402, 404, 405, 406, 407, 415, 416, 418, 419, 420, 422, 423, 424, 428, 429, 430, 432, 433, 434], "excluded_lines": []}, "colossalai/legacy/utils/__init__.py": {"executed_lines": [1, 2, 18, 19, 28], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/utils/activation_checkpoint.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 151, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 151, "excluded_lines": 0}, "missing_lines": [4, 6, 7, 9, 10, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 47, 49, 50, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 72, 73, 75, 76, 78, 79, 80, 81, 86, 87, 89, 90, 92, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 154, 155, 157, 164, 166, 167, 168, 169, 172, 173, 175, 178, 179, 182, 183, 186, 187, 188, 189, 192, 193, 196, 198, 200, 204, 205, 209, 210, 212, 213, 216, 217, 218, 219, 222, 223, 224, 225, 228, 229, 232, 234, 235, 237, 238, 244, 247, 248, 251, 252, 255, 256, 257, 258, 260], "excluded_lines": []}, "colossalai/legacy/utils/checkpoint/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/legacy/utils/checkpoint/module_checkpoint.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 80, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 80, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 9, 12, 30, 31, 33, 34, 35, 38, 40, 41, 42, 43, 44, 46, 47, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 144], "excluded_lines": []}, "colossalai/legacy/utils/checkpoint/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 40, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 40, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 15, 17, 19, 20, 23, 25, 26, 28, 29, 30, 31, 32, 35, 37, 38, 41, 43, 44, 46, 48, 49, 51, 52, 54, 55, 57, 60, 61, 62, 64], "excluded_lines": []}, "colossalai/legacy/utils/checkpointing.py": {"executed_lines": [1, 2, 4, 5, 7, 8, 9, 11, 12, 16, 18, 21, 28, 66, 99, 105, 114, 139, 161, 202, 214], "summary": {"covered_lines": 21, "num_statements": 141, "percent_covered": 14.893617021276595, "percent_covered_display": "15", "missing_lines": 120, "excluded_lines": 0}, "missing_lines": [13, 14, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 100, 101, 102, 106, 107, 108, 109, 110, 111, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 136, 140, 145, 152, 158, 184, 186, 187, 188, 190, 191, 199, 203, 204, 205, 206, 211, 239, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 269, 280, 282], "excluded_lines": []}, "colossalai/legacy/utils/common.py": {"executed_lines": [3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 41, 58, 62, 66, 70, 74, 78, 82, 83, 86, 90, 94, 112, 120, 126, 137, 153, 179, 190, 217, 225, 248, 254, 375, 413, 420, 426, 427], "summary": {"covered_lines": 47, "num_statements": 267, "percent_covered": 17.60299625468165, "percent_covered_display": "18", "missing_lines": 220, "excluded_lines": 0}, "missing_lines": [34, 35, 36, 38, 52, 53, 54, 55, 59, 63, 67, 71, 75, 79, 84, 87, 91, 98, 99, 101, 103, 104, 105, 106, 109, 113, 114, 115, 116, 117, 121, 122, 123, 127, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 180, 181, 182, 183, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 213, 214, 218, 219, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 249, 250, 251, 273, 274, 280, 281, 282, 283, 285, 288, 289, 290, 292, 293, 295, 297, 298, 304, 305, 306, 308, 309, 312, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 368, 370, 371, 372, 376, 377, 383, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 399, 400, 406, 407, 408, 410, 414, 415, 416, 417, 421, 428, 429, 430, 431, 433], "excluded_lines": []}, "colossalai/legacy/utils/data_sampler/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/utils/data_sampler/base_sampler.py": {"executed_lines": [4, 7, 8, 12, 13, 16, 17], "summary": {"covered_lines": 7, "num_statements": 11, "percent_covered": 63.63636363636363, "percent_covered_display": "64", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [9, 10, 14, 18], "excluded_lines": []}, "colossalai/legacy/utils/data_sampler/data_parallel_sampler.py": {"executed_lines": [5, 6, 7, 9, 10, 11, 13, 14, 16, 19, 20, 31, 56, 88, 91, 102], "summary": {"covered_lines": 15, "num_statements": 56, "percent_covered": 26.785714285714285, "percent_covered_display": "27", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [32, 33, 34, 35, 36, 40, 44, 51, 52, 53, 54, 57, 59, 60, 62, 66, 68, 70, 72, 73, 74, 76, 79, 80, 83, 84, 86, 89, 99, 127, 129, 130, 132, 135, 136, 137, 138, 139, 141, 142, 152], "excluded_lines": []}, "colossalai/legacy/utils/memory.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 17, 27, 60, 100, 121, 145, 162, 172], "summary": {"covered_lines": 19, "num_statements": 85, "percent_covered": 22.352941176470587, "percent_covered_display": "22", "missing_lines": 66, "excluded_lines": 0}, "missing_lines": [23, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 71, 72, 74, 75, 76, 77, 79, 84, 86, 87, 88, 89, 91, 92, 93, 96, 97, 110, 111, 113, 114, 115, 131, 132, 135, 136, 137, 138, 140, 141, 142, 153, 154, 155, 156, 158, 159, 164, 165, 166, 167, 169, 179, 180, 181, 183], "excluded_lines": []}, "colossalai/legacy/utils/profiler/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 2], "excluded_lines": []}, "colossalai/legacy/utils/profiler/extention.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 14, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19], "excluded_lines": []}, "colossalai/legacy/utils/profiler/legacy/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 5, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6], "excluded_lines": []}, "colossalai/legacy/utils/profiler/legacy/comm_profiler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 204, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 204, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 40, 45, 46, 47, 48, 50, 51, 52, 53, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 121, 122, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 137, 138, 139, 140, 150, 152, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 203, 206, 207, 208, 210, 211, 214, 215, 216, 217, 220, 223, 225, 226, 227, 228, 229, 231, 232, 234, 237, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 262, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 286, 289, 291, 292, 293, 295, 296, 298, 301, 309, 311, 312, 313, 315, 316, 318], "excluded_lines": []}, "colossalai/legacy/utils/profiler/legacy/pcie_profiler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 102, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 102, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 9, 10, 11, 12, 13, 15, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 34, 37, 38, 39, 40, 42, 43, 44, 45, 48, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 72, 73, 75, 76, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 151, 153], "excluded_lines": []}, "colossalai/legacy/utils/profiler/legacy/prof_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 77, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 77, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 9, 11, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 43, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 72, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 113, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132], "excluded_lines": []}, "colossalai/legacy/utils/profiler/profiler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 62, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 62, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 17, 123, 137, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205], "excluded_lines": []}, "colossalai/legacy/utils/profiler/stateful_tensor_mem_extention.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 92, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 92, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 15, 16, 17, 20, 21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 70, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 132, 133, 134], "excluded_lines": []}, "colossalai/legacy/zero/__init__.py": {"executed_lines": [1, 3, 4, 6, 8, 9, 10, 11, 14, 43], "summary": {"covered_lines": 10, "num_statements": 20, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [29, 31, 32, 33, 34, 35, 36, 38, 39, 40], "excluded_lines": []}, "colossalai/legacy/zero/gemini/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 7], "summary": {"covered_lines": 6, "num_statements": 6, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/gemini/colo_init_context.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 13, 28, 61, 69, 70, 92, 98, 101, 158], "summary": {"covered_lines": 15, "num_statements": 101, "percent_covered": 14.851485148514852, "percent_covered_display": "15", "missing_lines": 86, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 22, 23, 24, 25, 35, 36, 38, 41, 42, 44, 50, 51, 53, 54, 55, 56, 57, 58, 66, 84, 85, 86, 88, 89, 90, 93, 95, 96, 99, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 127, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197], "excluded_lines": []}, "colossalai/legacy/zero/gemini/gemini_context.py": {"executed_lines": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 17, 18, 21, 22, 24, 25, 28, 29, 30, 32, 35, 38], "summary": {"covered_lines": 23, "num_statements": 29, "percent_covered": 79.3103448275862, "percent_covered_display": "79", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [19, 33, 36, 39, 46, 47], "excluded_lines": []}, "colossalai/legacy/zero/gemini/ophooks/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/gemini/ophooks/_shard_grad_ophook.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 28, 29, 31, 32], "excluded_lines": []}, "colossalai/legacy/zero/gemini/ophooks/_shard_param_ophook.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 9, 14, 15, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48], "excluded_lines": []}, "colossalai/legacy/zero/gemini/ophooks/runtime_mem_tracer_hook.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 15, 18, 19, 23, 28, 29, 33, 39, 45, 50, 51, 58, 64, 85, 102, 116, 119, 122, 125, 128, 131, 132, 140, 141], "summary": {"covered_lines": 34, "num_statements": 94, "percent_covered": 36.170212765957444, "percent_covered_display": "36", "missing_lines": 60, "excluded_lines": 0}, "missing_lines": [20, 21, 24, 25, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 46, 47, 52, 53, 54, 55, 56, 59, 60, 61, 62, 74, 75, 76, 77, 78, 79, 82, 83, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 103, 105, 107, 109, 111, 113, 114, 117, 120, 123, 126, 129, 133, 134, 135, 136, 138], "excluded_lines": []}, "colossalai/legacy/zero/gemini/ophooks/utils.py": {"executed_lines": [2, 3, 5, 8, 9, 12, 15, 16, 19, 20, 23, 24, 27, 28, 31, 32, 37, 50, 51, 52, 59, 60, 65, 66, 67, 73, 74, 85], "summary": {"covered_lines": 27, "num_statements": 90, "percent_covered": 30.0, "percent_covered_display": "30", "missing_lines": 63, "excluded_lines": 0}, "missing_lines": [13, 17, 21, 25, 29, 33, 38, 39, 40, 41, 42, 43, 44, 45, 47, 53, 54, 55, 56, 57, 61, 62, 68, 69, 70, 71, 81, 82, 89, 90, 91, 92, 93, 96, 97, 100, 101, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 131, 133, 134, 136, 137], "excluded_lines": []}, "colossalai/legacy/zero/gemini/paramhooks/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/gemini/paramhooks/_param_hookmgr.py": {"executed_lines": [1, 2, 4, 7, 8, 15, 31], "summary": {"covered_lines": 7, "num_statements": 18, "percent_covered": 38.888888888888886, "percent_covered_display": "39", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [12, 13, 24, 25, 26, 27, 28, 29, 36, 37, 38], "excluded_lines": []}, "colossalai/legacy/zero/gemini/stateful_tensor.py": {"executed_lines": [1, 2, 4, 6, 9, 13, 14, 15, 16, 17, 18, 21, 22, 30, 32, 49, 54, 60, 67, 80, 97, 100, 116, 133, 134, 137, 138, 141, 142, 145, 146, 149, 150, 153, 154, 157, 160, 163, 170, 190, 204], "summary": {"covered_lines": 40, "num_statements": 123, "percent_covered": 32.520325203252035, "percent_covered_display": "33", "missing_lines": 83, "excluded_lines": 0}, "missing_lines": [10, 33, 34, 35, 37, 39, 41, 44, 45, 46, 47, 50, 51, 52, 56, 57, 58, 61, 63, 64, 65, 68, 70, 71, 73, 75, 76, 78, 81, 83, 84, 86, 88, 89, 91, 94, 95, 98, 101, 103, 105, 108, 109, 111, 112, 114, 119, 124, 126, 127, 128, 129, 131, 135, 139, 143, 147, 151, 155, 158, 161, 166, 167, 168, 172, 173, 174, 176, 177, 181, 183, 184, 188, 192, 193, 194, 197, 198, 201, 202, 205, 206, 207], "excluded_lines": []}, "colossalai/legacy/zero/gemini/stateful_tensor_mgr.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 9, 10, 13, 14, 21, 33, 40, 43, 51, 74, 75, 78, 85, 86], "summary": {"covered_lines": 19, "num_statements": 67, "percent_covered": 28.35820895522388, "percent_covered_display": "28", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [22, 23, 25, 26, 28, 29, 30, 31, 34, 35, 36, 37, 38, 41, 45, 46, 47, 48, 49, 56, 57, 58, 59, 60, 67, 68, 70, 71, 72, 76, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101], "excluded_lines": []}, "colossalai/legacy/zero/gemini/tensor_placement_policy.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 16, 17, 21, 22, 26, 27, 30, 38, 39, 43, 47, 48, 55, 116, 117, 118, 127, 128, 129], "summary": {"covered_lines": 29, "num_statements": 82, "percent_covered": 35.36585365853659, "percent_covered_display": "35", "missing_lines": 53, "excluded_lines": 0}, "missing_lines": [18, 19, 23, 28, 31, 32, 33, 34, 35, 40, 41, 44, 49, 52, 53, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 111, 114, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 137], "excluded_lines": []}, "colossalai/legacy/zero/gemini/tensor_utils.py": {"executed_lines": [1, 3, 5, 8, 12, 17, 22, 41, 75, 95, 110], "summary": {"covered_lines": 11, "num_statements": 54, "percent_covered": 20.37037037037037, "percent_covered_display": "20", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [9, 13, 14, 18, 19, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 38, 55, 56, 58, 59, 61, 62, 64, 66, 69, 70, 72, 84, 85, 87, 88, 89, 90, 92, 102, 103, 104, 105, 107, 120, 121, 122], "excluded_lines": []}, "colossalai/legacy/zero/init_ctx/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/init_ctx/init_context.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 33, 34, 35, 37, 45, 46, 62, 87, 88, 91, 92, 95, 96, 99, 100, 129, 162, 186, 242, 243, 245, 246, 256, 262], "summary": {"covered_lines": 42, "num_statements": 147, "percent_covered": 28.571428571428573, "percent_covered_display": "29", "missing_lines": 105, "excluded_lines": 0}, "missing_lines": [38, 39, 41, 42, 72, 73, 74, 75, 76, 77, 78, 80, 82, 84, 85, 89, 93, 97, 104, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 127, 133, 136, 137, 139, 140, 141, 144, 145, 153, 154, 159, 160, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 191, 192, 194, 195, 197, 199, 200, 202, 205, 206, 207, 208, 209, 212, 213, 214, 215, 217, 219, 220, 222, 225, 229, 231, 236, 237, 238, 239, 247, 248, 250, 251, 252, 253, 257, 263, 264, 265, 266, 267, 269, 271], "excluded_lines": []}, "colossalai/legacy/zero/shard_utils/__init__.py": {"executed_lines": [1, 2, 3, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/shard_utils/base_shard_strategy.py": {"executed_lines": [1, 2, 4, 6, 9, 10, 14, 15, 18, 19], "summary": {"covered_lines": 10, "num_statements": 13, "percent_covered": 76.92307692307692, "percent_covered_display": "77", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [12, 16, 20], "excluded_lines": []}, "colossalai/legacy/zero/shard_utils/bucket_tensor_shard_strategy.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 10, 13, 14, 20], "summary": {"covered_lines": 9, "num_statements": 32, "percent_covered": 28.125, "percent_covered_display": "28", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48], "excluded_lines": []}, "colossalai/legacy/zero/shard_utils/commons.py": {"executed_lines": [1, 3, 6], "summary": {"covered_lines": 3, "num_statements": 13, "percent_covered": 23.076923076923077, "percent_covered_display": "23", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [9, 10, 11, 14, 15, 17, 18, 19, 20, 22], "excluded_lines": []}, "colossalai/legacy/zero/shard_utils/tensor_shard_strategy.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 9, 10, 13, 14, 18, 22, 26, 45], "summary": {"covered_lines": 13, "num_statements": 38, "percent_covered": 34.21052631578947, "percent_covered_display": "34", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [19, 20, 23, 24, 34, 35, 36, 37, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 56, 57, 59, 60, 61, 62, 63], "excluded_lines": []}, "colossalai/legacy/zero/sharded_model/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/sharded_model/_utils.py": {"executed_lines": [1, 3, 4, 6, 9, 16, 25, 26, 34, 42, 51, 59, 72, 76], "summary": {"covered_lines": 14, "num_statements": 57, "percent_covered": 24.56140350877193, "percent_covered_display": "25", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 13, 18, 21, 22, 28, 29, 30, 31, 35, 36, 37, 38, 39, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 69, 73, 78, 80, 81, 82, 83, 84, 85], "excluded_lines": []}, "colossalai/legacy/zero/sharded_model/reduce_scatter.py": {"executed_lines": [6, 7, 8, 10, 11, 12, 13, 16, 19, 22, 23, 30, 53, 65, 71, 85, 86, 113, 117, 118, 172, 173, 178, 179, 184, 185, 192], "summary": {"covered_lines": 26, "num_statements": 94, "percent_covered": 27.659574468085108, "percent_covered_display": "28", "missing_lines": 68, "excluded_lines": 0}, "missing_lines": [17, 24, 25, 26, 27, 28, 32, 33, 34, 36, 37, 41, 45, 46, 48, 49, 50, 51, 61, 62, 63, 67, 68, 69, 73, 74, 75, 76, 77, 80, 81, 82, 114, 115, 142, 144, 148, 149, 151, 152, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 169, 170, 175, 176, 181, 182, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 199, 200], "excluded_lines": []}, "colossalai/legacy/zero/sharded_model/sharded_model_v2.py": {"executed_lines": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 38, 40, 41, 46, 47, 81, 187, 190, 191, 194, 195, 198, 199, 202, 230, 241, 246, 254, 260, 266, 278, 279, 321, 322, 358, 377, 388, 423, 426, 429, 441, 453, 481, 583, 587, 591], "summary": {"covered_lines": 60, "num_statements": 299, "percent_covered": 20.066889632107024, "percent_covered_display": "20", "missing_lines": 239, "excluded_lines": 0}, "missing_lines": [42, 43, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 140, 141, 142, 144, 145, 146, 148, 149, 150, 153, 156, 157, 158, 160, 161, 162, 164, 170, 175, 177, 178, 179, 181, 182, 185, 188, 192, 196, 200, 212, 213, 214, 215, 216, 219, 222, 223, 224, 225, 226, 227, 228, 232, 233, 235, 236, 237, 239, 242, 243, 244, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 261, 262, 263, 264, 267, 268, 273, 288, 291, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 316, 317, 319, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 368, 374, 375, 378, 381, 382, 384, 385, 390, 391, 394, 395, 397, 400, 404, 408, 410, 411, 413, 415, 416, 418, 421, 424, 427, 430, 442, 443, 444, 448, 449, 450, 451, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 516, 517, 519, 520, 521, 523, 524, 525, 526, 527, 528, 533, 535, 536, 541, 543, 544, 546, 548, 552, 553, 554, 555, 556, 557, 563, 564, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 584, 585, 588, 589, 592, 593], "excluded_lines": []}, "colossalai/legacy/zero/sharded_model/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 12, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20], "excluded_lines": []}, "colossalai/legacy/zero/sharded_model/zero_hook.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 23, 41, 50, 59, 74, 81, 92, 99, 110, 113], "summary": {"covered_lines": 23, "num_statements": 73, "percent_covered": 31.506849315068493, "percent_covered_display": "32", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [30, 31, 32, 33, 36, 38, 39, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 61, 62, 64, 65, 68, 71, 72, 75, 76, 77, 78, 79, 83, 84, 86, 89, 90, 93, 94, 95, 96, 97, 101, 102, 104, 107, 108, 111, 114, 115, 119], "excluded_lines": []}, "colossalai/legacy/zero/sharded_optim/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/sharded_optim/sharded_optim_v2.py": {"executed_lines": [2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 30, 31, 76, 147, 148, 151, 178, 181, 188, 198, 204, 240, 252, 260, 286, 289, 304, 325, 346, 356, 364, 394, 400], "summary": {"covered_lines": 44, "num_statements": 214, "percent_covered": 20.560747663551403, "percent_covered_display": "21", "missing_lines": 170, "excluded_lines": 0}, "missing_lines": [92, 93, 95, 96, 97, 98, 100, 101, 105, 110, 111, 112, 113, 115, 124, 125, 126, 127, 132, 133, 136, 140, 141, 145, 149, 158, 159, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 179, 182, 183, 184, 185, 186, 193, 194, 195, 196, 199, 200, 201, 202, 205, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 228, 230, 231, 232, 237, 238, 242, 245, 248, 250, 253, 254, 255, 256, 257, 258, 273, 274, 275, 278, 279, 280, 283, 284, 287, 290, 291, 292, 293, 294, 295, 297, 298, 299, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 334, 335, 340, 341, 343, 344, 349, 350, 351, 352, 360, 361, 362, 366, 369, 371, 373, 377, 378, 383, 384, 385, 387, 389, 390, 392, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412], "excluded_lines": []}, "colossalai/legacy/zero/sharded_param/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/legacy/zero/sharded_param/sharded_param.py": {"executed_lines": [1, 3, 5, 6, 8, 10, 13, 21, 22, 37, 41, 44, 47, 48, 51, 52, 56, 57, 61, 62, 65, 70, 75], "summary": {"covered_lines": 23, "num_statements": 68, "percent_covered": 33.8235294117647, "percent_covered_display": "34", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [14, 15, 16, 18, 23, 24, 26, 33, 34, 35, 39, 42, 45, 49, 53, 54, 58, 59, 63, 66, 67, 68, 71, 72, 73, 81, 83, 84, 85, 86, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 108], "excluded_lines": []}, "colossalai/legacy/zero/sharded_param/sharded_tensor.py": {"executed_lines": [1, 3, 6, 7, 20, 21, 25, 26, 29, 30, 33, 34, 37, 38], "summary": {"covered_lines": 14, "num_statements": 26, "percent_covered": 53.84615384615385, "percent_covered_display": "54", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [11, 12, 15, 16, 17, 18, 22, 23, 27, 31, 35, 39], "excluded_lines": []}, "colossalai/logging/__init__.py": {"executed_lines": [1, 2, 4, 6, 9, 22], "summary": {"covered_lines": 6, "num_statements": 13, "percent_covered": 46.15384615384615, "percent_covered_display": "46", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [19, 31, 32, 34, 36, 37, 38], "excluded_lines": []}, "colossalai/logging/logger.py": {"executed_lines": [4, 5, 6, 7, 9, 12, 13, 24, 26, 27, 42, 69, 70, 82, 83, 86, 95, 126, 133, 144, 155, 166], "summary": {"covered_lines": 21, "num_statements": 82, "percent_covered": 25.609756097560975, "percent_covered_display": "26", "missing_lines": 61, "excluded_lines": 0}, "missing_lines": [36, 37, 39, 40, 43, 44, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 71, 76, 77, 78, 80, 84, 92, 93, 104, 105, 107, 108, 111, 113, 114, 116, 117, 120, 121, 122, 123, 124, 127, 128, 130, 131, 140, 141, 142, 151, 152, 153, 162, 163, 164, 173, 174, 175], "excluded_lines": []}, "colossalai/moe/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8], "summary": {"covered_lines": 7, "num_statements": 7, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/moe/_operation.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 12, 19, 20, 21, 51, 52, 60, 61, 62, 95, 96, 105, 106, 110, 111, 138, 139, 147, 148, 149, 193, 194, 202, 203, 204, 205, 225, 226, 227, 237, 238, 239, 240, 266, 267, 268, 282, 293, 294, 299, 300, 305, 306, 314, 315, 320, 321, 325, 326, 334, 358, 359, 360, 378, 379, 389], "summary": {"covered_lines": 60, "num_statements": 219, "percent_covered": 27.397260273972602, "percent_covered_display": "27", "missing_lines": 159, "excluded_lines": 0}, "missing_lines": [14, 16, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 53, 73, 75, 76, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 98, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 140, 155, 156, 157, 158, 160, 161, 162, 163, 165, 167, 168, 170, 171, 174, 175, 176, 179, 180, 181, 184, 185, 188, 189, 191, 195, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 228, 229, 230, 231, 232, 233, 234, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 264, 269, 270, 271, 273, 276, 277, 279, 283, 284, 285, 286, 287, 288, 290, 301, 302, 303, 307, 308, 309, 310, 311, 322, 323, 327, 328, 329, 330, 331, 346, 347, 348, 349, 350, 351, 352, 355, 373, 374, 375, 376, 380, 396], "excluded_lines": []}, "colossalai/moe/checkpoint.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 14, 30, 31, 32, 43, 44, 59, 77, 99, 104, 163, 191, 203, 275, 325, 436, 515, 569, 606, 738], "summary": {"covered_lines": 31, "num_statements": 379, "percent_covered": 8.179419525065963, "percent_covered_display": "8", "missing_lines": 348, "excluded_lines": 0}, "missing_lines": [51, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 85, 87, 88, 89, 91, 92, 93, 94, 97, 100, 101, 102, 116, 117, 118, 120, 121, 124, 125, 126, 127, 131, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 147, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 198, 199, 200, 201, 227, 228, 229, 230, 232, 236, 238, 239, 243, 244, 246, 247, 248, 250, 258, 259, 260, 261, 262, 263, 268, 269, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 321, 323, 334, 336, 339, 340, 341, 342, 344, 345, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 364, 365, 366, 370, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 402, 405, 406, 407, 408, 409, 410, 414, 416, 417, 418, 426, 428, 429, 431, 432, 433, 434, 445, 448, 449, 451, 452, 453, 455, 457, 458, 460, 463, 466, 467, 468, 469, 470, 471, 473, 474, 475, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 501, 502, 503, 511, 512, 513, 538, 539, 540, 541, 542, 543, 545, 546, 548, 550, 551, 552, 553, 555, 556, 557, 560, 561, 562, 563, 565, 567, 576, 577, 578, 580, 581, 582, 584, 585, 586, 587, 589, 591, 592, 599, 600, 601, 604, 630, 631, 632, 633, 634, 636, 640, 641, 645, 649, 650, 651, 652, 654, 662, 664, 665, 666, 668, 669, 670, 671, 682, 683, 684, 687, 688, 689, 691, 700, 701, 704, 705, 707, 709, 712, 713, 714, 716, 717, 718, 719, 720, 723, 724, 725, 727, 728, 730, 731, 736, 747, 748, 750, 753, 755, 756, 757, 760, 761, 762, 764, 767, 768, 775, 777, 778, 779, 782, 783, 784, 787, 788, 789, 790, 791, 792], "excluded_lines": []}, "colossalai/moe/experts.py": {"executed_lines": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 18, 19, 33, 91, 92, 106], "summary": {"covered_lines": 16, "num_statements": 88, "percent_covered": 18.181818181818183, "percent_covered_display": "18", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [15, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 59, 60, 61, 62, 64, 66, 67, 69, 70, 75, 77, 78, 80, 81, 82, 84, 85, 86, 89, 94, 95, 97, 98, 99, 100, 101, 103, 104, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161], "excluded_lines": []}, "colossalai/moe/layers.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 48, 143, 144, 147, 216, 221, 300, 386], "summary": {"covered_lines": 23, "num_statements": 181, "percent_covered": 12.707182320441989, "percent_covered_display": "13", "missing_lines": 158, "excluded_lines": 0}, "missing_lines": [72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 97, 100, 111, 112, 113, 114, 115, 116, 119, 121, 122, 123, 126, 127, 128, 141, 145, 156, 159, 160, 163, 164, 166, 168, 169, 172, 181, 182, 183, 185, 186, 189, 190, 191, 192, 193, 194, 196, 200, 201, 202, 204, 205, 206, 207, 209, 211, 212, 214, 217, 218, 219, 233, 234, 235, 238, 239, 240, 243, 245, 246, 247, 248, 249, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 278, 279, 282, 285, 286, 289, 290, 291, 292, 294, 295, 296, 298, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 333, 334, 336, 339, 340, 341, 343, 344, 346, 348, 349, 350, 351, 352, 355, 356, 360, 363, 364, 370, 371, 372, 377, 379, 380, 381, 383, 391, 392, 393, 394, 395, 396, 398, 399, 400], "excluded_lines": []}, "colossalai/moe/load_balance.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 46, 49, 57, 58, 61, 62, 68, 69, 74, 75, 102, 103, 112, 182, 194, 259, 260, 278, 319, 325, 416, 417, 427, 428], "summary": {"covered_lines": 36, "num_statements": 215, "percent_covered": 16.74418604651163, "percent_covered_display": "17", "missing_lines": 179, "excluded_lines": 0}, "missing_lines": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 47, 50, 52, 54, 55, 59, 63, 70, 71, 72, 87, 88, 89, 91, 94, 95, 99, 100, 107, 108, 109, 110, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 148, 156, 160, 161, 162, 164, 172, 174, 175, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 268, 269, 270, 271, 272, 274, 275, 276, 289, 290, 291, 292, 293, 295, 296, 297, 298, 301, 308, 311, 314, 316, 317, 320, 321, 322, 323, 337, 338, 339, 341, 342, 345, 347, 348, 349, 351, 352, 353, 354, 361, 362, 363, 364, 366, 367, 368, 369, 377, 378, 387, 388, 389, 395, 396, 397, 403, 406, 407, 410, 411, 414, 418, 419, 420, 421, 422, 423, 425, 430, 431, 433, 434, 435, 436, 438, 440, 442], "excluded_lines": []}, "colossalai/moe/loss.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 21, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 7, 29, 30, 31, 32, 34, 45, 46, 47, 50, 60, 61, 62, 63, 65, 76, 77, 78], "excluded_lines": []}, "colossalai/moe/manager.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 11, 12, 16, 17, 18, 19, 20, 21, 24, 25, 28, 29, 30, 36, 38, 40, 41, 44, 45, 48, 99, 148, 151, 155, 159, 163], "summary": {"covered_lines": 31, "num_statements": 77, "percent_covered": 40.25974025974026, "percent_covered_display": "40", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [42, 46, 74, 75, 77, 78, 79, 82, 83, 84, 85, 87, 90, 93, 94, 95, 97, 113, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 144, 146, 149, 152, 153, 156, 157, 160], "excluded_lines": []}, "colossalai/moe/routers.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 60, 92, 111, 118, 119, 132, 141, 149, 150, 151, 157, 225, 226, 238, 246, 255, 358, 359, 375, 388, 457], "summary": {"covered_lines": 42, "num_statements": 189, "percent_covered": 22.22222222222222, "percent_covered_display": "22", "missing_lines": 147, "excluded_lines": 0}, "missing_lines": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 73, 74, 75, 76, 77, 82, 85, 87, 88, 89, 90, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 152, 176, 177, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 293, 294, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 312, 313, 314, 316, 317, 319, 320, 321, 323, 324, 326, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 384, 403, 407, 409, 410, 415, 417, 421, 427, 429, 431, 437, 443, 444, 445, 446, 447, 452, 454, 458, 459, 460, 461, 462, 464, 466], "excluded_lines": []}, "colossalai/moe/utils.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 15, 16, 20, 21, 30, 36, 41, 42, 52, 58, 63, 67, 79, 92, 104, 105, 135, 156, 177, 182], "summary": {"covered_lines": 28, "num_statements": 110, "percent_covered": 25.454545454545453, "percent_covered_display": "25", "missing_lines": 82, "excluded_lines": 0}, "missing_lines": [17, 31, 37, 38, 53, 59, 60, 64, 68, 69, 70, 71, 72, 73, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 89, 98, 99, 100, 101, 110, 111, 113, 124, 125, 127, 129, 130, 132, 143, 144, 145, 146, 148, 149, 150, 151, 153, 162, 165, 166, 167, 169, 171, 172, 173, 174, 178, 179, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217], "excluded_lines": []}, "colossalai/nn/__init__.py": {"executed_lines": [1, 2, 3, 4, 5], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/nn/init.py": {"executed_lines": [1, 2, 4, 5, 8, 17, 26, 41, 52, 55, 58, 79, 102, 120, 123, 166, 186, 197, 200, 232, 244], "summary": {"covered_lines": 21, "num_statements": 87, "percent_covered": 24.137931034482758, "percent_covered_display": "24", "missing_lines": 66, "excluded_lines": 0}, "missing_lines": [11, 12, 14, 20, 21, 23, 35, 36, 38, 53, 73, 74, 76, 103, 104, 105, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 158, 160, 161, 163, 187, 189, 190, 191, 193, 194, 195, 218, 219, 221, 222, 223, 225, 227, 229, 234, 235, 237, 238, 239, 241, 246, 247, 249, 250, 252], "excluded_lines": []}, "colossalai/nn/layer/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/nn/layer/layernorm.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 49, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 49, "excluded_lines": 0}, "missing_lines": [5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 48, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 70, 71], "excluded_lines": []}, "colossalai/nn/layer/scaled_softmax.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 92, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 92, "excluded_lines": 0}, "missing_lines": [4, 6, 7, 9, 16, 17, 20, 21, 22, 23, 26, 35, 36, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 52, 55, 64, 65, 66, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 85, 99, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 123, 125, 127, 128, 130, 132, 133, 135, 143, 144, 146, 147, 148, 150, 151, 152, 154, 155, 156, 158, 159, 162, 163, 164, 167, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 182, 184, 186, 189, 190, 192], "excluded_lines": []}, "colossalai/nn/layer/utils.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 4, "percent_covered": 25.0, "percent_covered_display": "25", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [11, 12, 13], "excluded_lines": []}, "colossalai/nn/loss/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/nn/lr_scheduler/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8], "summary": {"covered_lines": 7, "num_statements": 7, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/nn/lr_scheduler/cosine.py": {"executed_lines": [1, 3, 6, 7, 45, 49, 50, 61, 68, 69, 79, 88, 89, 102], "summary": {"covered_lines": 10, "num_statements": 25, "percent_covered": 40.0, "percent_covered_display": "40", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [46, 62, 65, 80, 81, 82, 83, 84, 85, 112, 113, 114, 115, 116, 117], "excluded_lines": []}, "colossalai/nn/lr_scheduler/delayed.py": {"executed_lines": [1, 2, 4, 5, 9, 12, 13, 16, 20, 24, 25, 30, 40, 56, 57, 68, 74, 84, 96, 97, 108, 112, 121, 133, 134, 146, 155, 170], "summary": {"covered_lines": 25, "num_statements": 104, "percent_covered": 24.03846153846154, "percent_covered_display": "24", "missing_lines": 79, "excluded_lines": 0}, "missing_lines": [7, 14, 17, 18, 21, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 41, 42, 43, 47, 48, 53, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 90, 91, 93, 109, 110, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 127, 128, 130, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 176, 177, 179], "excluded_lines": []}, "colossalai/nn/lr_scheduler/linear.py": {"executed_lines": [1, 4, 5, 15, 20], "summary": {"covered_lines": 4, "num_statements": 10, "percent_covered": 40.0, "percent_covered_display": "40", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 21, 22, 24], "excluded_lines": []}, "colossalai/nn/lr_scheduler/multistep.py": {"executed_lines": [1, 3, 5, 8, 9, 23, 35, 36, 49], "summary": {"covered_lines": 7, "num_statements": 13, "percent_covered": 53.84615384615385, "percent_covered_display": "54", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [32, 59, 60, 61, 62, 63], "excluded_lines": []}, "colossalai/nn/lr_scheduler/onecycle.py": {"executed_lines": [1, 4, 5, 68], "summary": {"covered_lines": 3, "num_statements": 5, "percent_covered": 60.0, "percent_covered_display": "60", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [82, 83], "excluded_lines": []}, "colossalai/nn/lr_scheduler/poly.py": {"executed_lines": [1, 3, 6, 7, 18, 28, 31, 39, 40, 52], "summary": {"covered_lines": 8, "num_statements": 18, "percent_covered": 44.44444444444444, "percent_covered_display": "44", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 24, 25, 26, 29, 32, 62, 63], "excluded_lines": []}, "colossalai/nn/lr_scheduler/torch.py": {"executed_lines": [1, 2, 3, 4, 7, 8, 20, 24, 25, 37, 41, 42, 55, 59, 60, 70], "summary": {"covered_lines": 12, "num_statements": 16, "percent_covered": 75.0, "percent_covered_display": "75", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [21, 38, 56, 71], "excluded_lines": []}, "colossalai/nn/optimizer/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9], "summary": {"covered_lines": 8, "num_statements": 8, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/nn/optimizer/cpu_adam.py": {"executed_lines": [1, 2, 4, 6, 8, 11, 12, 63, 65, 84, 118, 119], "summary": {"covered_lines": 11, "num_statements": 65, "percent_covered": 16.923076923076923, "percent_covered_display": "17", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [77, 78, 79, 80, 82, 99, 101, 102, 103, 105, 108, 109, 112, 114, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 140, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 169, 183, 184, 185, 186, 187, 189, 190, 193, 208, 209, 210], "excluded_lines": []}, "colossalai/nn/optimizer/fused_adam.py": {"executed_lines": [2, 9, 11, 14, 15, 54, 83, 91], "summary": {"covered_lines": 7, "num_statements": 53, "percent_covered": 13.20754716981132, "percent_covered_display": "13", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 81, 84, 85, 86, 87, 89, 100, 101, 104, 105, 106, 108, 109, 110, 114, 115, 117, 120, 122, 123, 124, 125, 126, 130, 132, 134, 136, 138, 139, 141, 142, 143, 144, 146, 161], "excluded_lines": []}, "colossalai/nn/optimizer/fused_lamb.py": {"executed_lines": [2, 4, 7, 8, 52, 97, 105], "summary": {"covered_lines": 6, "num_statements": 80, "percent_covered": 7.5, "percent_covered_display": "8", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [67, 68, 69, 78, 79, 80, 82, 84, 86, 89, 91, 93, 94, 95, 98, 99, 100, 101, 103, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 138, 141, 143, 144, 145, 146, 150, 151, 153, 156, 157, 159, 160, 161, 162, 163, 167, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 206, 207, 225], "excluded_lines": []}, "colossalai/nn/optimizer/fused_sgd.py": {"executed_lines": [2, 3, 5, 8, 9, 57, 87, 92, 109], "summary": {"covered_lines": 8, "num_statements": 58, "percent_covered": 13.793103448275861, "percent_covered_display": "14", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 74, 75, 77, 80, 83, 85, 88, 89, 90, 93, 94, 95, 96, 100, 101, 102, 103, 105, 106, 107, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 154], "excluded_lines": []}, "colossalai/nn/optimizer/hybrid_adam.py": {"executed_lines": [1, 3, 5, 6, 8, 11, 12, 61, 63, 92, 93], "summary": {"covered_lines": 10, "num_statements": 60, "percent_covered": 16.666666666666668, "percent_covered_display": "17", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [76, 87, 88, 89, 90, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 113, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 145, 159, 161, 162, 163, 166, 167, 168, 169, 172, 173, 174, 175, 176, 190, 191], "excluded_lines": []}, "colossalai/nn/optimizer/lamb.py": {"executed_lines": [1, 5, 6, 9, 10, 29, 42], "summary": {"covered_lines": 5, "num_statements": 52, "percent_covered": 9.615384615384615, "percent_covered_display": "10", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 69, 71, 72, 74, 78, 80, 87, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108], "excluded_lines": []}, "colossalai/nn/optimizer/lars.py": {"executed_lines": [1, 3, 5, 6, 9, 10, 22, 39, 40], "summary": {"covered_lines": 7, "num_statements": 53, "percent_covered": 13.20754716981132, "percent_covered_display": "13", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 88, 90], "excluded_lines": []}, "colossalai/nn/optimizer/nvme_optimizer.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 10, 11, 24, 51, 58, 70, 83, 94, 104, 113, 119, 148, 154, 160], "summary": {"covered_lines": 19, "num_statements": 102, "percent_covered": 18.627450980392158, "percent_covered_display": "19", "missing_lines": 83, "excluded_lines": 0}, "missing_lines": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 56, 59, 60, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 146, 150, 151, 152, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167], "excluded_lines": []}, "colossalai/pipeline/__init__.py": {"executed_lines": [1, 2, 3, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/pipeline/p2p.py": {"executed_lines": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 20, 48, 61, 145, 156, 164, 165, 168, 193, 210, 220, 255, 327, 431, 444, 456, 534, 535, 538, 559, 580, 598, 616, 646, 676], "summary": {"covered_lines": 37, "num_statements": 296, "percent_covered": 12.5, "percent_covered_display": "12", "missing_lines": 259, "excluded_lines": 0}, "missing_lines": [31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 49, 51, 54, 55, 57, 75, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 97, 98, 100, 102, 103, 106, 109, 110, 112, 117, 118, 120, 123, 125, 126, 127, 128, 129, 130, 131, 133, 136, 140, 142, 146, 148, 150, 151, 153, 157, 158, 159, 160, 161, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 216, 217, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 252, 264, 266, 267, 268, 269, 271, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 294, 296, 297, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 314, 315, 316, 317, 319, 321, 322, 324, 349, 350, 351, 352, 356, 357, 359, 360, 364, 365, 366, 367, 368, 372, 375, 376, 382, 383, 384, 385, 387, 388, 390, 392, 393, 395, 397, 406, 407, 410, 411, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 428, 441, 453, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 489, 490, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 510, 511, 512, 518, 519, 520, 526, 527, 528, 529, 530, 531, 536, 547, 548, 549, 550, 557, 568, 569, 570, 571, 578, 587, 588, 589, 590, 605, 606, 607, 608, 630, 631, 633, 634, 635, 660, 661, 663, 664, 665, 690, 691, 692, 693, 700], "excluded_lines": []}, "colossalai/pipeline/schedule/__init__.py": {"executed_lines": [1, 2, 3, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/pipeline/schedule/_utils.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 11, 15, 19, 22, 28, 50, 65, 84, 104, 124, 134, 148], "summary": {"covered_lines": 18, "num_statements": 75, "percent_covered": 24.0, "percent_covered_display": "24", "missing_lines": 57, "excluded_lines": 0}, "missing_lines": [12, 16, 23, 24, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 60, 61, 62, 77, 78, 79, 80, 81, 96, 97, 98, 99, 101, 115, 116, 117, 118, 119, 120, 121, 130, 131, 143, 144, 145, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 172, 174, 175], "excluded_lines": []}, "colossalai/pipeline/schedule/base.py": {"executed_lines": [1, 3, 4, 6, 7, 10, 11, 14], "summary": {"covered_lines": 8, "num_statements": 10, "percent_covered": 80.0, "percent_covered_display": "80", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [12, 36], "excluded_lines": []}, "colossalai/pipeline/schedule/generate.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 19, 20, 25, 29, 34, 35, 46, 60, 81, 91, 101, 114, 119, 130, 138, 153, 174, 186, 194, 203, 236, 258, 266, 267, 303, 304, 347, 348], "summary": {"covered_lines": 39, "num_statements": 233, "percent_covered": 16.738197424892704, "percent_covered_display": "17", "missing_lines": 194, "excluded_lines": 0}, "missing_lines": [26, 27, 30, 31, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 87, 88, 89, 98, 99, 110, 112, 115, 116, 117, 126, 127, 128, 135, 136, 143, 144, 145, 146, 147, 148, 149, 151, 158, 159, 160, 161, 162, 163, 164, 165, 168, 170, 171, 172, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 192, 198, 199, 201, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 234, 246, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 264, 278, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 301, 316, 317, 318, 319, 321, 324, 325, 330, 331, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 345, 359, 360, 361, 363, 365, 366, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 391, 394, 398, 399, 400, 401, 402, 405, 406, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 423, 426, 430, 432, 435, 436, 437, 438, 439, 441], "excluded_lines": []}, "colossalai/pipeline/schedule/interleaved_pp.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 19, 20, 50, 92, 106, 123, 142, 161, 175, 189, 221, 253, 265, 277, 321, 366, 406, 541], "summary": {"covered_lines": 31, "num_statements": 270, "percent_covered": 11.481481481481481, "percent_covered_display": "11", "missing_lines": 239, "excluded_lines": 0}, "missing_lines": [28, 29, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 80, 81, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 116, 117, 118, 119, 120, 121, 134, 135, 136, 137, 138, 140, 153, 154, 155, 156, 157, 159, 170, 171, 172, 173, 184, 185, 186, 187, 197, 198, 199, 200, 202, 203, 204, 205, 212, 213, 214, 215, 218, 219, 229, 230, 231, 232, 234, 235, 236, 237, 244, 245, 246, 247, 250, 251, 256, 257, 258, 260, 261, 263, 268, 269, 270, 272, 273, 275, 297, 302, 303, 304, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 341, 344, 345, 347, 348, 349, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 374, 376, 378, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 393, 400, 402, 403, 404, 418, 420, 422, 423, 424, 425, 426, 429, 430, 432, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 448, 449, 451, 458, 459, 460, 463, 464, 466, 467, 469, 470, 472, 474, 475, 476, 479, 480, 481, 482, 484, 490, 492, 493, 494, 495, 497, 503, 505, 506, 507, 509, 510, 512, 513, 514, 516, 517, 518, 519, 520, 522, 524, 525, 532, 533, 535, 537, 538, 539, 562, 563, 564, 566, 567, 569, 573], "excluded_lines": []}, "colossalai/pipeline/schedule/one_f_one_b.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 25, 28, 29, 63, 105, 116, 133, 150, 162, 174, 200, 226, 260, 304, 336, 422], "summary": {"covered_lines": 28, "num_statements": 197, "percent_covered": 14.213197969543147, "percent_covered_display": "14", "missing_lines": 169, "excluded_lines": 0}, "missing_lines": [43, 44, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 93, 94, 96, 97, 98, 99, 100, 101, 103, 111, 112, 113, 114, 126, 127, 128, 129, 131, 143, 144, 145, 146, 148, 158, 159, 160, 170, 171, 172, 184, 185, 186, 187, 194, 195, 196, 198, 210, 211, 212, 213, 220, 221, 222, 224, 246, 249, 250, 251, 252, 253, 254, 255, 256, 258, 280, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 315, 317, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 348, 350, 353, 354, 355, 358, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 376, 377, 380, 381, 383, 384, 388, 389, 393, 394, 395, 397, 398, 400, 405, 406, 407, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 444, 445, 446, 448, 449, 451, 453], "excluded_lines": []}, "colossalai/pipeline/stage_manager.py": {"executed_lines": [1, 2, 4, 5, 6, 8, 11, 12, 24, 76, 111, 128, 145, 146, 154, 155, 163, 171, 179, 187, 201, 212, 213, 219], "summary": {"covered_lines": 23, "num_statements": 98, "percent_covered": 23.46938775510204, "percent_covered_display": "23", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 47, 49, 50, 53, 54, 55, 56, 57, 58, 60, 62, 63, 66, 67, 68, 69, 72, 74, 97, 98, 99, 101, 103, 104, 105, 106, 107, 109, 121, 122, 123, 124, 126, 138, 139, 140, 141, 143, 152, 161, 169, 177, 185, 197, 198, 199, 210, 214, 215, 216, 217, 222, 223, 224, 226, 227, 228, 229, 232, 235, 236, 237, 238, 239], "excluded_lines": []}, "colossalai/quantization/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/quantization/bnb.py": {"executed_lines": [3, 5, 6, 8, 10, 11, 13, 14, 19, 22, 101, 133, 200, 253, 311, 312, 317, 320], "summary": {"covered_lines": 17, "num_statements": 133, "percent_covered": 12.781954887218046, "percent_covered_display": "13", "missing_lines": 116, "excluded_lines": 0}, "missing_lines": [15, 16, 40, 41, 43, 44, 48, 49, 55, 56, 58, 61, 62, 63, 66, 67, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 97, 98, 117, 118, 120, 123, 124, 130, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 171, 172, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 214, 216, 218, 219, 221, 222, 225, 226, 227, 230, 231, 234, 235, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 283, 284, 285, 287, 288, 293, 294, 295, 297, 298, 299, 300, 301, 304, 305, 306, 308, 318, 321], "excluded_lines": []}, "colossalai/quantization/bnb_config.py": {"executed_lines": [3, 4, 5, 7, 10, 11, 12, 16, 18, 22, 24, 31, 38, 46, 54, 61, 66], "summary": {"covered_lines": 16, "num_statements": 50, "percent_covered": 32.0, "percent_covered_display": "32", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 81, 82, 84, 85, 87, 88, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 109, 110, 112, 113], "excluded_lines": []}, "colossalai/shardformer/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/shardformer/_utils.py": {"executed_lines": [1, 4, 31, 55, 72, 94], "summary": {"covered_lines": 6, "num_statements": 54, "percent_covered": 11.11111111111111, "percent_covered_display": "11", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 63, 64, 65, 66, 67, 68, 69, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 105, 106, 107, 108, 109, 110, 111, 112], "excluded_lines": []}, "colossalai/shardformer/layer/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11], "summary": {"covered_lines": 10, "num_statements": 10, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/shardformer/layer/_operation.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 15, 18, 19, 32, 33, 45, 46, 56, 57, 61, 62, 75, 76, 108, 109, 113, 114, 126, 127, 170, 224, 225, 234, 235, 241, 242, 261, 262, 271, 272, 302, 303, 404, 462, 463, 472, 473, 512, 513, 539, 540, 548, 549, 565, 566, 573, 574, 584, 585, 616, 617, 693, 694, 704, 705, 711, 712, 718, 719, 727, 728, 731, 732, 736, 737, 745, 746, 750, 751, 755, 756, 764, 765, 771, 772, 778, 779, 788, 789, 802, 803, 811, 812, 814, 815, 820, 821, 830, 834, 843, 863, 880, 904, 911, 938, 942, 946, 954, 958, 962, 966, 974, 978, 982, 986, 990], "summary": {"covered_lines": 102, "num_statements": 543, "percent_covered": 18.784530386740332, "percent_covered_display": "19", "missing_lines": 441, "excluded_lines": 0}, "missing_lines": [13, 34, 35, 36, 37, 38, 39, 42, 43, 47, 48, 49, 53, 63, 64, 65, 66, 68, 70, 71, 73, 77, 78, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 95, 99, 100, 102, 103, 105, 115, 116, 117, 118, 119, 120, 122, 124, 128, 129, 132, 133, 135, 136, 137, 139, 140, 141, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 162, 164, 165, 167, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 204, 205, 206, 207, 209, 211, 214, 217, 218, 219, 221, 236, 237, 239, 243, 244, 247, 248, 251, 252, 255, 256, 258, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 291, 292, 294, 295, 296, 298, 300, 304, 305, 306, 307, 308, 311, 312, 314, 315, 317, 318, 319, 321, 322, 323, 325, 327, 330, 333, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 350, 352, 353, 356, 357, 358, 361, 364, 365, 367, 368, 369, 371, 374, 376, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 399, 401, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 435, 436, 438, 440, 442, 444, 445, 446, 448, 449, 450, 452, 455, 456, 457, 458, 459, 474, 475, 476, 477, 479, 480, 481, 483, 484, 486, 493, 494, 496, 498, 499, 502, 504, 507, 508, 510, 514, 515, 516, 517, 520, 521, 523, 526, 527, 528, 530, 531, 532, 533, 534, 536, 550, 551, 554, 555, 558, 559, 560, 561, 563, 567, 568, 570, 586, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 599, 608, 610, 612, 613, 614, 618, 619, 620, 621, 622, 625, 626, 627, 629, 630, 632, 633, 634, 636, 637, 638, 640, 642, 645, 648, 652, 653, 655, 656, 659, 660, 663, 666, 667, 669, 670, 671, 673, 676, 678, 681, 682, 684, 685, 686, 688, 690, 706, 707, 708, 709, 713, 714, 715, 729, 733, 747, 748, 752, 766, 767, 768, 769, 773, 774, 775, 790, 791, 792, 793, 794, 797, 798, 800, 804, 805, 806, 807, 808, 816, 817, 818, 822, 823, 824, 825, 826, 827, 831, 836, 837, 839, 840, 845, 846, 847, 850, 851, 856, 857, 858, 860, 865, 866, 867, 870, 871, 872, 875, 877, 888, 889, 890, 893, 894, 897, 898, 899, 901, 905, 906, 907, 908, 912, 913, 914, 915, 917, 923, 924, 926, 927, 929, 939, 943, 949, 955, 959, 963, 969, 975, 979, 983, 987, 991], "excluded_lines": []}, "colossalai/shardformer/layer/attn.py": {"executed_lines": [1, 2, 4, 5, 7, 14, 20, 21, 22, 23, 24, 27, 41, 57, 58, 60, 61, 85, 86, 102, 103, 179, 180], "summary": {"covered_lines": 23, "num_statements": 78, "percent_covered": 29.487179487179485, "percent_covered_display": "29", "missing_lines": 55, "excluded_lines": 0}, "missing_lines": [36, 37, 50, 51, 52, 53, 54, 62, 64, 72, 79, 87, 88, 92, 96, 97, 100, 131, 132, 133, 134, 135, 136, 140, 141, 142, 144, 148, 149, 151, 152, 154, 155, 159, 160, 170, 171, 172, 174, 175, 176, 177, 227, 228, 229, 230, 238, 239, 240, 244, 254, 256, 257, 258, 262], "excluded_lines": []}, "colossalai/shardformer/layer/dropout.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 10, 13, 14, 25, 33, 34, 44, 50, 51, 62, 70, 71, 81], "summary": {"covered_lines": 17, "num_statements": 35, "percent_covered": 48.57142857142857, "percent_covered_display": "49", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [27, 30, 31, 40, 41, 42, 45, 46, 47, 64, 67, 68, 77, 78, 79, 82, 83, 84], "excluded_lines": []}, "colossalai/shardformer/layer/embedding.py": {"executed_lines": [4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 23, 24, 25, 27, 30, 31, 60, 104, 105, 145, 150, 155, 164, 165, 198, 202, 207, 210, 211, 237, 238, 267, 324, 325, 357, 363, 372, 381], "summary": {"covered_lines": 37, "num_statements": 166, "percent_covered": 22.289156626506024, "percent_covered_display": "22", "missing_lines": 129, "excluded_lines": 0}, "missing_lines": [74, 76, 77, 78, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 143, 146, 147, 148, 151, 152, 153, 156, 157, 158, 159, 161, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 191, 193, 195, 196, 199, 200, 203, 204, 205, 208, 217, 219, 220, 221, 222, 224, 234, 281, 282, 283, 284, 285, 287, 288, 291, 292, 293, 295, 298, 299, 300, 303, 306, 307, 308, 311, 314, 315, 317, 318, 319, 321, 322, 331, 333, 334, 335, 336, 339, 340, 341, 344, 355, 358, 359, 360, 361, 364, 369, 370, 374, 375, 376, 377, 379, 383, 385, 386, 387, 391, 392, 394, 395], "excluded_lines": []}, "colossalai/shardformer/layer/linear.py": {"executed_lines": [4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 25, 35, 36, 38, 41, 42, 70, 143, 144, 183, 190, 227, 228, 250, 324, 325, 365, 368, 369, 386, 444, 445, 486, 492, 493, 519, 525, 526, 554, 606, 607, 633], "summary": {"covered_lines": 42, "num_statements": 275, "percent_covered": 15.272727272727273, "percent_covered_display": "15", "missing_lines": 233, "excluded_lines": 0}, "missing_lines": [89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 106, 107, 110, 111, 113, 116, 117, 118, 120, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 137, 139, 141, 150, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 165, 166, 170, 181, 184, 185, 186, 187, 188, 191, 198, 201, 203, 204, 205, 206, 209, 210, 211, 215, 217, 219, 221, 222, 224, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 286, 287, 290, 291, 293, 296, 298, 299, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 315, 316, 318, 320, 321, 322, 331, 333, 334, 335, 336, 339, 340, 341, 343, 344, 345, 347, 348, 352, 363, 366, 370, 371, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 388, 389, 394, 396, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 427, 428, 436, 437, 438, 439, 441, 459, 460, 462, 463, 466, 467, 468, 470, 472, 473, 474, 476, 478, 481, 483, 484, 487, 488, 489, 490, 499, 501, 502, 503, 504, 507, 517, 520, 521, 522, 568, 569, 570, 571, 572, 573, 575, 578, 579, 580, 581, 582, 584, 597, 598, 599, 600, 601, 602, 604, 613, 615, 616, 617, 618, 620, 631, 635, 636, 638, 641, 642, 644, 647, 648, 649], "excluded_lines": []}, "colossalai/shardformer/layer/loss.py": {"executed_lines": [1, 2, 3, 4, 6, 9, 10, 17, 18, 106, 107, 124], "summary": {"covered_lines": 11, "num_statements": 59, "percent_covered": 18.64406779661017, "percent_covered_display": "19", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [44, 45, 48, 51, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 78, 81, 82, 83, 86, 87, 88, 89, 90, 94, 95, 96, 97, 100, 101, 102, 104, 109, 110, 113, 114, 115, 117, 118, 120, 121, 131], "excluded_lines": []}, "colossalai/shardformer/layer/normalization.py": {"executed_lines": [3, 4, 6, 8, 10, 11, 13, 15, 16, 19, 20, 22, 23, 44, 45, 47, 74, 86, 87, 88, 105, 106, 110, 116, 117, 141, 142, 146, 152, 153, 182, 183, 187, 193, 194, 252, 253, 257, 263, 264], "summary": {"covered_lines": 36, "num_statements": 109, "percent_covered": 33.027522935779814, "percent_covered_display": "33", "missing_lines": 73, "excluded_lines": 0}, "missing_lines": [18, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 76, 77, 78, 80, 81, 82, 83, 111, 130, 132, 136, 138, 147, 168, 170, 172, 176, 177, 179, 188, 210, 212, 213, 214, 215, 216, 219, 221, 222, 223, 226, 228, 229, 230, 231, 234, 236, 239, 240, 242, 246, 247, 249, 258, 276, 277, 278, 279, 283, 286, 287, 288, 290, 296, 298, 302, 304], "excluded_lines": []}, "colossalai/shardformer/layer/parallel_module.py": {"executed_lines": [4, 5, 6, 8, 9, 10, 11, 13, 14, 23, 25, 28, 29, 32, 33, 46, 70, 180, 181, 203, 204, 218, 245, 357, 360], "summary": {"covered_lines": 25, "num_statements": 155, "percent_covered": 16.129032258064516, "percent_covered_display": "16", "missing_lines": 130, "excluded_lines": 0}, "missing_lines": [30, 59, 60, 61, 63, 64, 65, 66, 67, 68, 104, 105, 107, 108, 109, 111, 112, 114, 115, 116, 117, 122, 124, 126, 127, 128, 129, 130, 131, 136, 138, 139, 141, 143, 147, 149, 150, 151, 152, 153, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 189, 190, 191, 192, 193, 195, 196, 198, 201, 216, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 279, 280, 282, 283, 284, 286, 287, 289, 290, 291, 292, 297, 299, 300, 302, 304, 305, 306, 307, 308, 309, 314, 316, 317, 319, 321, 325, 327, 328, 329, 330, 331, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 358, 361], "excluded_lines": []}, "colossalai/shardformer/layer/qkv_fused_linear.py": {"executed_lines": [4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 26, 36, 37, 39, 46, 87, 139, 140, 168, 251, 252, 298, 305, 344, 345, 366, 440, 441, 482, 485, 502, 559, 560, 587, 665, 666, 716, 723], "summary": {"covered_lines": 37, "num_statements": 308, "percent_covered": 12.012987012987013, "percent_covered_display": "12", "missing_lines": 271, "excluded_lines": 0}, "missing_lines": [59, 60, 61, 68, 69, 71, 78, 80, 81, 83, 84, 99, 106, 107, 108, 109, 111, 112, 114, 115, 116, 123, 124, 126, 128, 129, 130, 132, 133, 135, 136, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 205, 206, 209, 210, 212, 215, 217, 218, 220, 221, 223, 224, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 247, 249, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 279, 280, 284, 296, 299, 300, 301, 302, 303, 306, 313, 315, 317, 318, 321, 322, 323, 326, 327, 328, 332, 334, 336, 338, 339, 341, 383, 385, 388, 389, 390, 391, 392, 393, 394, 396, 397, 400, 401, 404, 407, 408, 410, 413, 415, 416, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 431, 432, 434, 436, 438, 447, 449, 450, 451, 452, 455, 456, 457, 459, 460, 461, 463, 464, 468, 480, 483, 486, 487, 488, 490, 491, 492, 493, 495, 497, 498, 499, 500, 504, 505, 510, 512, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 530, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 546, 547, 548, 549, 551, 604, 606, 607, 608, 609, 610, 611, 612, 613, 615, 616, 619, 620, 623, 624, 626, 629, 631, 632, 634, 635, 637, 638, 640, 641, 643, 644, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 657, 659, 661, 663, 678, 679, 680, 681, 684, 685, 686, 688, 714, 717, 718, 719, 720, 721, 724, 731, 734, 736, 738, 740, 742, 744, 745, 747], "excluded_lines": []}, "colossalai/shardformer/layer/utils.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 10, 13, 14, 15, 24, 25, 37, 38, 92, 93, 112, 114, 132, 135, 139, 142, 146, 147, 172, 173, 199, 200, 206, 207, 213, 214, 234, 235, 258], "summary": {"covered_lines": 35, "num_statements": 116, "percent_covered": 30.17241379310345, "percent_covered_display": "30", "missing_lines": 81, "excluded_lines": 0}, "missing_lines": [22, 35, 57, 60, 62, 64, 66, 68, 70, 71, 72, 73, 76, 77, 78, 79, 82, 83, 86, 87, 88, 89, 115, 121, 122, 123, 124, 127, 128, 129, 130, 133, 136, 137, 140, 143, 144, 156, 157, 158, 160, 161, 162, 163, 165, 166, 168, 169, 170, 196, 197, 204, 211, 218, 219, 221, 224, 225, 228, 229, 230, 232, 239, 241, 243, 246, 247, 250, 251, 252, 255, 273, 275, 276, 277, 279, 281, 282, 288, 289, 291], "excluded_lines": []}, "colossalai/shardformer/modeling/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/shardformer/modeling/bert.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 481, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 481, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 17, 29, 31, 32, 33, 36, 42, 43, 84, 86, 87, 90, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 139, 140, 143, 144, 145, 146, 147, 148, 150, 157, 158, 160, 161, 170, 171, 172, 174, 175, 176, 179, 180, 182, 184, 188, 189, 190, 193, 194, 198, 199, 200, 202, 203, 205, 206, 208, 210, 211, 212, 214, 216, 225, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 249, 250, 253, 255, 256, 257, 258, 261, 273, 277, 278, 296, 298, 300, 301, 302, 303, 304, 305, 307, 324, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 347, 350, 354, 355, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 432, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 447, 448, 450, 459, 461, 463, 464, 489, 491, 493, 494, 495, 496, 497, 498, 500, 519, 520, 521, 523, 524, 525, 526, 528, 529, 530, 532, 539, 540, 542, 543, 590, 592, 593, 598, 600, 602, 603, 604, 605, 606, 607, 609, 626, 627, 628, 630, 631, 632, 633, 635, 636, 637, 639, 646, 648, 650, 651, 674, 676, 678, 679, 680, 681, 682, 683, 685, 702, 703, 705, 706, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 734, 741, 742, 744, 745, 766, 768, 770, 771, 772, 773, 774, 775, 777, 794, 795, 797, 798, 800, 801, 802, 803, 805, 806, 807, 809, 816, 817, 819, 820, 843, 845, 847, 848, 849, 850, 851, 852, 856, 857, 859, 860, 861, 862, 863, 869, 885, 886, 887, 888, 889, 891, 892, 893, 894, 896, 897, 898, 900, 907, 908, 910, 911, 940, 942, 944, 945, 946, 947, 948, 949, 951, 967, 968, 970, 971, 972, 973, 975, 976, 978, 979, 980, 981, 983, 984, 985, 987, 988, 989, 990, 992, 993, 994, 996, 1004, 1005, 1008, 1009, 1010, 1011, 1012, 1013, 1015, 1025, 1030, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1050, 1052, 1053, 1061, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1089, 1091, 1092, 1093, 1094, 1098, 1099, 1100, 1102, 1105, 1106, 1108, 1110, 1111, 1112, 1114, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1126, 1129, 1130, 1132, 1133, 1134, 1135, 1136, 1138, 1141, 1142, 1178, 1179, 1182, 1184, 1185, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1198, 1199, 1202, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1213, 1217, 1221, 1222, 1223, 1224, 1225, 1226, 1228, 1235, 1237, 1247, 1250, 1251, 1255, 1268, 1271, 1275, 1277, 1278, 1280, 1289], "excluded_lines": []}, "colossalai/shardformer/modeling/blip2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 54, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 9, 10, 18, 20, 27, 28, 35, 37, 40, 44, 47, 48, 50, 52, 53, 55, 57, 59, 61, 64, 65, 67, 74, 75, 76, 77, 78, 84, 85, 92, 94, 95, 97, 99, 102, 103, 105, 110, 111, 112, 113, 115, 118, 119, 121, 126, 127, 128, 129, 131], "excluded_lines": []}, "colossalai/shardformer/modeling/bloom.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 17, 24, 26, 27, 28, 30, 33, 99, 100, 104, 105, 292, 293, 388, 389, 511, 512, 605, 606, 700, 787, 884, 906, 921], "summary": {"covered_lines": 32, "num_statements": 443, "percent_covered": 7.223476297968397, "percent_covered_display": "7", "missing_lines": 411, "excluded_lines": 0}, "missing_lines": [34, 53, 55, 56, 57, 59, 60, 61, 64, 65, 67, 68, 73, 74, 77, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 122, 124, 126, 131, 132, 134, 135, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 161, 162, 163, 164, 165, 166, 168, 170, 171, 173, 176, 177, 181, 182, 183, 185, 186, 187, 190, 192, 193, 195, 196, 197, 198, 200, 201, 202, 204, 206, 209, 215, 218, 219, 220, 224, 225, 228, 229, 231, 232, 243, 253, 255, 256, 257, 258, 261, 262, 263, 267, 269, 272, 273, 275, 276, 277, 282, 290, 317, 319, 321, 326, 327, 329, 331, 332, 333, 334, 335, 336, 338, 354, 355, 356, 357, 359, 360, 362, 364, 365, 366, 368, 369, 373, 374, 375, 377, 385, 386, 413, 415, 417, 422, 423, 425, 428, 429, 430, 431, 432, 433, 435, 451, 452, 453, 455, 456, 458, 459, 460, 461, 463, 464, 466, 467, 472, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 508, 509, 536, 538, 540, 545, 546, 548, 551, 552, 553, 554, 555, 556, 558, 574, 576, 577, 578, 579, 581, 582, 584, 585, 586, 587, 591, 592, 593, 595, 602, 603, 633, 635, 637, 638, 639, 640, 641, 642, 644, 660, 661, 662, 663, 664, 665, 667, 668, 670, 671, 672, 673, 675, 676, 677, 679, 680, 681, 682, 684, 685, 686, 688, 696, 697, 701, 702, 703, 704, 705, 707, 718, 719, 720, 722, 724, 725, 726, 727, 729, 730, 734, 735, 737, 738, 740, 742, 744, 750, 753, 756, 758, 766, 767, 768, 769, 770, 771, 776, 779, 780, 782, 784, 788, 790, 801, 804, 806, 808, 809, 810, 811, 812, 816, 817, 819, 821, 822, 824, 828, 836, 839, 841, 842, 843, 844, 847, 849, 850, 853, 856, 859, 862, 863, 864, 865, 866, 871, 873, 875, 876, 877, 879, 881, 885, 887, 888, 890, 891, 892, 893, 894, 899, 900, 901, 903, 907, 909, 911, 912, 913, 914, 916, 918, 922, 924, 937, 939, 944, 945, 947, 948, 951, 952, 954, 955, 956, 957, 958, 959, 961, 963, 964, 970, 972, 973, 975, 977, 978, 979, 981, 982, 983, 986, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1001, 1007, 1010, 1014, 1015, 1016, 1018, 1019, 1030, 1040, 1041, 1042, 1044, 1045, 1048, 1052, 1054, 1055, 1057, 1058, 1060, 1067], "excluded_lines": []}, "colossalai/shardformer/modeling/chatglm2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 171, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 171, "excluded_lines": 0}, "missing_lines": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 32, 42, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61, 63, 66, 67, 69, 79, 81, 90, 91, 93, 95, 98, 101, 104, 105, 107, 109, 111, 113, 116, 121, 122, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 168, 169, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 206, 207, 208, 209, 210, 211, 220, 227, 228, 229, 231, 232, 233, 238, 239, 240, 242, 243, 244, 245, 255, 262, 264, 265, 283, 284, 285, 286, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 329, 332, 333, 345, 348, 349, 351, 353, 354, 356, 357, 358, 363, 364, 372, 373, 374, 377, 378, 379, 381, 382, 386, 391, 400, 406, 407, 418, 425], "excluded_lines": []}, "colossalai/shardformer/modeling/chatglm2_6b/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/shardformer/modeling/chatglm2_6b/configuration_chatglm.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 30, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 7, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "excluded_lines": []}, "colossalai/shardformer/modeling/chatglm2_6b/modeling_chatglm.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 572, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 572, "excluded_lines": 0}, "missing_lines": [36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 61, 62, 63, 64, 66, 68, 69, 71, 77, 78, 81, 82, 83, 84, 85, 86, 89, 96, 97, 98, 99, 101, 102, 103, 109, 114, 115, 116, 117, 119, 120, 123, 140, 141, 143, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 159, 174, 177, 180, 182, 185, 186, 187, 189, 190, 198, 199, 201, 202, 203, 205, 206, 207, 208, 215, 216, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 240, 241, 242, 244, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 269, 270, 271, 274, 275, 276, 281, 289, 291, 294, 303, 312, 319, 320, 321, 322, 323, 324, 332, 333, 334, 335, 336, 337, 341, 350, 357, 359, 361, 363, 365, 367, 368, 370, 373, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 394, 402, 404, 412, 413, 414, 416, 417, 426, 444, 445, 446, 454, 461, 468, 476, 480, 482, 485, 486, 487, 490, 491, 492, 493, 494, 495, 497, 499, 500, 501, 508, 515, 516, 523, 535, 540, 542, 545, 546, 549, 552, 560, 561, 563, 566, 574, 575, 576, 578, 581, 589, 591, 592, 594, 595, 598, 605, 606, 607, 609, 611, 613, 615, 623, 624, 627, 635, 637, 648, 650, 659, 660, 662, 664, 665, 668, 671, 674, 675, 677, 679, 680, 682, 685, 688, 689, 691, 692, 695, 698, 699, 701, 703, 704, 706, 713, 715, 716, 718, 727, 728, 729, 730, 731, 732, 735, 737, 738, 739, 740, 741, 743, 744, 745, 754, 761, 762, 763, 765, 766, 769, 770, 772, 775, 781, 782, 783, 784, 785, 787, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 824, 827, 828, 830, 832, 838, 840, 842, 843, 845, 847, 848, 849, 852, 853, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865, 868, 869, 873, 879, 880, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 900, 901, 902, 903, 911, 912, 913, 915, 927, 930, 931, 933, 935, 936, 938, 939, 940, 945, 946, 954, 955, 956, 959, 960, 961, 963, 964, 967, 976, 977, 988, 995, 996, 998, 999, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1014, 1022, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1039, 1041, 1042, 1044, 1054, 1055, 1056, 1057, 1058, 1059, 1067, 1081, 1082, 1084, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1106, 1107, 1109, 1110, 1112, 1113, 1115, 1116, 1117, 1119, 1127, 1128, 1138, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1165, 1166, 1167, 1169, 1170, 1183, 1184, 1185, 1186, 1187, 1188, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1220, 1221, 1222, 1223, 1224, 1225, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1274, 1276, 1277, 1278, 1279, 1280, 1285, 1286, 1288, 1289, 1290, 1296, 1297, 1298, 1299, 1307, 1308, 1309, 1316, 1317, 1319, 1327, 1330, 1332, 1333, 1334, 1335, 1337, 1344, 1347, 1348, 1351, 1352, 1353, 1355, 1358, 1359, 1362, 1363, 1364, 1366, 1368, 1369, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1381, 1383, 1385, 1392], "excluded_lines": []}, "colossalai/shardformer/modeling/falcon.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 292, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 292, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 14, 21, 29, 31, 32, 35, 36, 55, 57, 58, 59, 61, 62, 63, 66, 67, 69, 70, 75, 76, 79, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 104, 116, 117, 120, 122, 123, 124, 126, 129, 141, 143, 144, 145, 147, 150, 152, 155, 157, 158, 160, 162, 163, 165, 167, 169, 172, 177, 178, 195, 196, 197, 201, 202, 203, 204, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 229, 230, 232, 233, 234, 237, 238, 239, 240, 243, 244, 245, 247, 248, 255, 257, 258, 259, 260, 263, 265, 267, 268, 271, 272, 278, 279, 281, 283, 288, 289, 291, 299, 300, 305, 310, 318, 320, 321, 324, 325, 327, 328, 340, 351, 352, 353, 355, 356, 358, 360, 362, 363, 365, 366, 367, 370, 378, 380, 381, 404, 406, 408, 409, 410, 411, 412, 413, 415, 432, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 449, 450, 451, 453, 462, 463, 465, 466, 489, 491, 493, 494, 495, 496, 497, 498, 500, 517, 518, 519, 520, 521, 523, 524, 525, 526, 528, 529, 531, 532, 537, 539, 540, 541, 542, 543, 544, 545, 547, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 573, 574, 576, 577, 600, 602, 604, 605, 606, 607, 608, 609, 611, 628, 630, 631, 632, 633, 635, 636, 637, 638, 639, 643, 644, 645, 647, 655, 656, 658, 659, 686, 688, 690, 691, 692, 693, 694, 695, 697, 712, 713, 714, 715, 716, 717, 719, 720, 722, 723, 724, 725, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 740, 748, 749], "excluded_lines": []}, "colossalai/shardformer/modeling/gpt2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 500, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 500, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 12, 21, 23, 24, 25, 26, 28, 30, 33, 42, 45, 46, 47, 48, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 79, 80, 81, 82, 88, 95, 96, 97, 100, 106, 107, 130, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 205, 206, 207, 210, 211, 212, 213, 214, 218, 219, 220, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 252, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 281, 282, 284, 287, 288, 290, 291, 292, 304, 313, 315, 316, 346, 348, 370, 371, 373, 374, 375, 376, 378, 380, 381, 383, 384, 385, 386, 387, 394, 396, 397, 398, 400, 409, 410, 446, 448, 468, 469, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 503, 504, 535, 537, 555, 556, 558, 560, 561, 562, 563, 565, 566, 568, 569, 570, 571, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 586, 594, 595, 623, 625, 645, 646, 648, 649, 650, 652, 653, 654, 655, 656, 658, 659, 660, 662, 669, 670, 698, 700, 701, 703, 704, 708, 710, 730, 731, 733, 734, 736, 737, 739, 740, 742, 743, 748, 750, 751, 752, 753, 754, 755, 756, 758, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 776, 785, 786, 788, 799, 800, 801, 802, 807, 808, 809, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 840, 843, 844, 860, 861, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 880, 882, 883, 884, 885, 887, 888, 889, 891, 892, 893, 899, 905, 907, 908, 909, 910, 912, 913, 914, 916, 918, 920, 930, 931, 932, 935, 937, 938, 939, 940, 941, 943, 944, 946, 947, 949, 950, 951, 952, 953, 954, 956, 958, 959, 961, 963, 965, 975, 986, 987, 988, 990, 991, 992, 993, 996, 997, 998, 999, 1001, 1003, 1005, 1006, 1008, 1009, 1021, 1029, 1032, 1033, 1049, 1050, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1066, 1068, 1070, 1071, 1072, 1073, 1075, 1076, 1077, 1079, 1080, 1081, 1087, 1093, 1095, 1096, 1097, 1098, 1100, 1101, 1102, 1104, 1106, 1107, 1117, 1118, 1119, 1120, 1123, 1125, 1126, 1127, 1128, 1132, 1138, 1140, 1141, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1155, 1156, 1158, 1160, 1162, 1172, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1199, 1205, 1206, 1208, 1209, 1211, 1212, 1224, 1232, 1235, 1236, 1238, 1261, 1263, 1278, 1280, 1282, 1283, 1285, 1287, 1288, 1290, 1291, 1292, 1299, 1300, 1301, 1303, 1312], "excluded_lines": []}, "colossalai/shardformer/modeling/gptj.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 417, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 417, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 11, 19, 21, 22, 23, 24, 26, 29, 36, 37, 38, 39, 40, 41, 42, 43, 50, 51, 52, 53, 59, 66, 67, 68, 71, 77, 78, 100, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 131, 133, 135, 136, 138, 139, 140, 141, 142, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 169, 172, 174, 175, 176, 180, 181, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 201, 202, 213, 223, 224, 225, 227, 228, 231, 232, 238, 239, 241, 243, 244, 246, 247, 248, 259, 267, 269, 270, 298, 300, 320, 321, 323, 324, 326, 327, 329, 331, 332, 334, 335, 337, 339, 340, 341, 343, 351, 352, 380, 382, 383, 385, 386, 390, 392, 412, 413, 415, 416, 418, 419, 421, 422, 424, 425, 430, 432, 433, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 467, 468, 500, 502, 520, 521, 523, 525, 526, 527, 528, 530, 531, 533, 534, 535, 536, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 551, 560, 561, 563, 576, 577, 578, 579, 581, 582, 583, 585, 588, 590, 592, 593, 594, 596, 597, 598, 600, 601, 603, 604, 606, 607, 609, 610, 612, 613, 615, 616, 617, 618, 619, 621, 624, 626, 628, 629, 630, 631, 632, 633, 635, 637, 640, 641, 655, 656, 659, 660, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 677, 678, 680, 681, 683, 684, 685, 687, 689, 690, 696, 702, 704, 705, 707, 709, 710, 711, 713, 715, 717, 719, 720, 721, 724, 726, 727, 728, 729, 731, 732, 734, 735, 737, 738, 739, 740, 741, 742, 744, 746, 747, 749, 751, 753, 762, 772, 773, 774, 776, 777, 780, 781, 782, 783, 785, 787, 789, 790, 792, 793, 804, 811, 814, 815, 829, 830, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 846, 848, 850, 851, 853, 854, 856, 857, 858, 860, 862, 863, 869, 875, 877, 878, 880, 882, 883, 884, 886, 888, 889, 891, 892, 893, 896, 898, 899, 900, 904, 910, 912, 913, 915, 916, 918, 919, 920, 921, 922, 923, 925, 927, 928, 930, 932, 934, 943, 953, 954, 955, 957, 958, 961, 962, 963, 964, 967, 973, 975, 977, 978, 980, 981, 992, 999], "excluded_lines": []}, "colossalai/shardformer/modeling/jit.py": {"executed_lines": [1, 4, 13, 25], "summary": {"covered_lines": 4, "num_statements": 19, "percent_covered": 21.05263157894737, "percent_covered_display": "21", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [5, 7, 8, 10, 14, 16, 17, 18, 19, 20, 22, 26, 28, 29, 31], "excluded_lines": []}, "colossalai/shardformer/modeling/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 455, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 455, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 16, 25, 27, 28, 33, 35, 38, 44, 45, 61, 63, 64, 67, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 115, 119, 121, 122, 130, 132, 133, 136, 144, 151, 152, 153, 156, 159, 160, 161, 163, 164, 165, 166, 168, 169, 176, 178, 179, 180, 182, 183, 193, 202, 204, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 218, 228, 235, 237, 238, 280, 281, 282, 285, 288, 289, 290, 291, 292, 293, 296, 312, 314, 315, 316, 317, 318, 320, 321, 323, 324, 326, 327, 328, 329, 330, 337, 338, 340, 341, 342, 344, 352, 353, 355, 356, 379, 381, 383, 384, 385, 386, 387, 388, 390, 407, 408, 409, 410, 412, 414, 415, 416, 418, 419, 420, 421, 423, 424, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 466, 467, 470, 471, 473, 474, 475, 476, 478, 488, 489, 492, 494, 495, 496, 498, 499, 500, 503, 504, 505, 506, 507, 509, 510, 511, 513, 514, 515, 516, 521, 523, 524, 526, 527, 528, 530, 531, 533, 534, 535, 536, 539, 540, 541, 543, 545, 548, 549, 550, 552, 564, 565, 568, 570, 573, 574, 575, 576, 577, 578, 580, 582, 583, 585, 586, 587, 589, 590, 591, 597, 599, 601, 602, 604, 607, 608, 616, 617, 618, 621, 624, 625, 626, 628, 629, 630, 632, 634, 636, 637, 639, 641, 643, 650, 659, 661, 662, 664, 665, 667, 670, 671, 673, 674, 675, 676, 683, 686, 687, 689, 728, 729, 732, 735, 747, 748, 749, 750, 751, 753, 754, 756, 757, 759, 760, 761, 763, 764, 765, 766, 773, 774, 775, 777, 785, 788, 789, 798, 800, 801, 802, 803, 804, 807, 808, 810, 811, 813, 814, 816, 817, 820, 821, 822, 825, 826, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 841, 843, 844, 846, 849, 850, 852, 854, 855, 860, 861, 862, 865, 868, 869, 871, 872, 877, 879, 880, 881, 883, 885, 886, 887, 888, 890, 892, 893, 894, 896, 899, 900, 902, 914, 915, 918, 920, 923, 924, 925, 926, 927, 928, 930, 932, 933, 935, 936, 938, 939, 941, 942, 943, 949, 951, 953, 954, 956, 957, 958, 959, 961, 962, 968, 972, 974, 975, 976, 979, 982, 983, 984, 986, 987, 988, 990, 992, 994, 995, 997, 999, 1001, 1009, 1018, 1020, 1021, 1023, 1024, 1026, 1028, 1029, 1030, 1031, 1034, 1035, 1037, 1038, 1039, 1041, 1048], "excluded_lines": []}, "colossalai/shardformer/modeling/mistral.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 255, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 255, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 13, 14, 16, 17, 19, 21, 24, 25, 26, 42, 43, 44, 45, 46, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 71, 72, 73, 76, 78, 80, 81, 82, 83, 89, 91, 92, 100, 102, 105, 113, 114, 115, 118, 121, 122, 124, 125, 126, 127, 129, 130, 137, 139, 140, 141, 143, 144, 154, 163, 165, 166, 168, 169, 171, 172, 175, 176, 178, 179, 180, 181, 182, 189, 191, 192, 235, 236, 239, 242, 259, 261, 262, 263, 264, 266, 267, 269, 270, 272, 273, 274, 276, 277, 279, 280, 281, 283, 291, 292, 294, 295, 318, 320, 337, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 370, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 391, 400, 401, 402, 404, 416, 417, 420, 422, 425, 426, 427, 428, 429, 430, 432, 434, 436, 437, 438, 439, 440, 442, 443, 444, 447, 449, 451, 452, 454, 455, 456, 457, 462, 464, 465, 473, 475, 478, 486, 488, 489, 490, 493, 496, 497, 498, 500, 501, 502, 504, 505, 515, 524, 526, 527, 529, 530, 532, 535, 536, 538, 539, 540, 542, 543, 544, 551, 554, 555, 557, 567, 568, 571, 573, 574, 575, 577, 578, 579, 581, 582, 583, 584, 589, 590, 591, 593, 594, 595, 598, 599, 601, 602, 604, 605, 607, 609, 611], "excluded_lines": []}, "colossalai/shardformer/modeling/opt.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 342, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 342, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 13, 19, 21, 22, 23, 25, 28, 35, 36, 37, 38, 46, 52, 55, 61, 62, 82, 83, 85, 87, 88, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 129, 131, 132, 139, 140, 141, 142, 146, 150, 151, 158, 159, 161, 169, 170, 171, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 204, 206, 208, 210, 212, 213, 215, 216, 217, 219, 221, 222, 232, 241, 243, 244, 246, 247, 249, 250, 251, 252, 253, 256, 257, 259, 261, 262, 263, 274, 281, 283, 284, 306, 307, 310, 313, 329, 330, 331, 332, 334, 336, 337, 339, 340, 341, 342, 343, 345, 353, 354, 356, 357, 379, 381, 383, 400, 401, 402, 404, 406, 407, 409, 410, 412, 413, 418, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 455, 456, 458, 459, 481, 483, 499, 500, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 515, 516, 517, 519, 520, 521, 522, 524, 525, 526, 528, 536, 537, 540, 541, 543, 553, 556, 558, 561, 563, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 579, 580, 582, 590, 592, 594, 595, 604, 608, 610, 612, 614, 617, 618, 620, 632, 633, 636, 638, 641, 642, 643, 644, 645, 646, 647, 649, 651, 652, 654, 655, 657, 660, 661, 662, 663, 667, 670, 672, 673, 675, 677, 678, 679, 682, 685, 686, 687, 690, 691, 692, 693, 698, 700, 701, 703, 704, 705, 706, 708, 710, 712, 713, 715, 717, 719, 727, 736, 738, 739, 741, 742, 744, 745, 747, 748, 751, 752, 754, 755, 756, 757, 764, 767, 768, 770, 795, 798, 799, 802, 810, 813, 814, 817, 818, 819, 822, 823, 825, 826, 828, 830, 833, 834, 836, 838, 839, 841, 842, 844, 846], "excluded_lines": []}, "colossalai/shardformer/modeling/sam.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 94, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 94, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 9, 10, 11, 13, 19, 21, 23, 24, 28, 33, 35, 36, 38, 40, 41, 43, 45, 47, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 72, 73, 74, 76, 78, 79, 80, 83, 84, 85, 86, 88, 89, 91, 92, 94, 96, 99, 100, 102, 103, 104, 105, 107, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 166, 168, 173, 176, 177, 178, 180, 182, 183, 185, 191, 193, 194, 195, 197, 199, 201, 203, 205, 207], "excluded_lines": []}, "colossalai/shardformer/modeling/t5.py": {"executed_lines": [1, 2, 4, 5, 6, 12, 13, 15, 18, 19, 24, 25, 240, 241, 379, 380, 542, 543, 586, 712, 724, 754], "summary": {"covered_lines": 21, "num_statements": 285, "percent_covered": 7.368421052631579, "percent_covered_display": "7", "missing_lines": 264, "excluded_lines": 0}, "missing_lines": [49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 118, 121, 122, 124, 125, 129, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 147, 148, 151, 153, 154, 155, 156, 157, 158, 160, 161, 176, 193, 194, 195, 200, 202, 203, 205, 206, 209, 210, 211, 213, 214, 225, 233, 270, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 305, 321, 323, 325, 327, 328, 330, 331, 332, 333, 335, 336, 339, 362, 364, 365, 367, 368, 370, 410, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442, 445, 446, 462, 464, 466, 468, 469, 471, 472, 473, 474, 476, 477, 479, 481, 484, 507, 509, 510, 512, 514, 517, 519, 521, 522, 523, 525, 526, 528, 529, 530, 532, 564, 566, 583, 587, 589, 607, 609, 611, 612, 613, 616, 618, 620, 622, 624, 626, 628, 630, 633, 634, 637, 639, 640, 643, 644, 649, 652, 653, 656, 659, 662, 666, 667, 668, 671, 672, 674, 678, 679, 681, 682, 684, 685, 686, 687, 689, 691, 692, 700, 701, 703, 705, 707, 709, 713, 715, 716, 717, 718, 719, 721, 725, 727, 737, 738, 747, 748, 749, 751, 755, 757, 769, 770, 781, 782, 783, 785], "excluded_lines": []}, "colossalai/shardformer/modeling/vit.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 142, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 142, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 11, 22, 23, 25, 27, 28, 35, 37, 38, 39, 41, 42, 43, 50, 51, 53, 68, 70, 73, 74, 75, 76, 77, 78, 85, 87, 88, 89, 92, 93, 94, 96, 101, 103, 107, 118, 119, 121, 122, 123, 125, 126, 127, 129, 136, 139, 140, 141, 143, 160, 162, 163, 167, 178, 179, 181, 184, 186, 187, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 222, 225, 226, 228, 229, 231, 271, 273, 274, 280, 281, 285, 295, 296, 298, 301, 302, 303, 304, 307, 309, 310, 311, 312, 313, 319, 320, 322, 323, 324, 326, 333, 336, 337, 339, 345, 346, 348, 349, 350, 352, 353, 355, 356, 357, 359, 361, 363, 366, 367, 369, 370, 371, 372, 374], "excluded_lines": []}, "colossalai/shardformer/modeling/whisper.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 12, 19, 27, 29, 30, 31, 33, 36, 73, 159, 311, 365, 457, 458, 463, 464, 592, 593, 831, 832, 976, 977, 1095, 1096], "summary": {"covered_lines": 30, "num_statements": 382, "percent_covered": 7.853403141361256, "percent_covered_display": "8", "missing_lines": 352, "excluded_lines": 0}, "missing_lines": [45, 46, 47, 48, 56, 57, 59, 60, 62, 67, 70, 74, 76, 86, 88, 89, 92, 94, 97, 102, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 122, 123, 125, 133, 135, 137, 138, 146, 150, 152, 154, 156, 160, 174, 175, 178, 179, 182, 183, 184, 185, 186, 187, 188, 190, 193, 195, 196, 198, 201, 202, 204, 206, 207, 209, 210, 211, 214, 216, 217, 218, 219, 222, 223, 224, 228, 230, 231, 232, 233, 234, 235, 237, 239, 241, 242, 244, 246, 248, 259, 271, 273, 274, 276, 277, 279, 280, 282, 284, 285, 287, 288, 289, 300, 308, 312, 314, 332, 333, 334, 340, 342, 343, 344, 345, 346, 347, 349, 352, 353, 355, 357, 358, 360, 362, 366, 368, 398, 399, 403, 405, 412, 415, 416, 417, 418, 419, 422, 423, 431, 434, 437, 438, 439, 440, 441, 442, 444, 446, 447, 449, 450, 452, 454, 505, 507, 508, 509, 511, 512, 515, 518, 519, 520, 522, 523, 525, 526, 528, 529, 532, 533, 538, 539, 543, 545, 546, 548, 549, 551, 552, 553, 555, 556, 564, 571, 573, 574, 576, 577, 578, 579, 581, 582, 583, 590, 669, 670, 671, 672, 674, 675, 678, 679, 682, 683, 684, 685, 688, 689, 690, 696, 698, 700, 701, 702, 703, 704, 705, 706, 708, 710, 711, 713, 718, 719, 721, 723, 724, 726, 727, 728, 731, 734, 735, 738, 739, 747, 749, 751, 753, 754, 755, 756, 757, 759, 761, 762, 775, 787, 789, 790, 792, 793, 795, 796, 798, 799, 801, 802, 803, 804, 805, 816, 825, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 890, 891, 894, 895, 896, 897, 898, 899, 901, 914, 916, 918, 920, 921, 927, 928, 929, 930, 931, 932, 934, 935, 938, 959, 961, 962, 964, 965, 967, 1030, 1032, 1033, 1034, 1037, 1038, 1039, 1062, 1063, 1065, 1067, 1068, 1070, 1072, 1073, 1074, 1076, 1077, 1079, 1080, 1081, 1083, 1117, 1118, 1121, 1124, 1137, 1138, 1140, 1141, 1142, 1143, 1145, 1147, 1148, 1150, 1152, 1154, 1155, 1157, 1158, 1160, 1161, 1162, 1164], "excluded_lines": []}, "colossalai/shardformer/policies/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/shardformer/policies/auto_policy.py": {"executed_lines": [1, 2, 4, 6, 8, 11, 12, 13, 21, 22, 28, 188, 197, 215], "summary": {"covered_lines": 13, "num_statements": 31, "percent_covered": 41.935483870967744, "percent_covered_display": "42", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [192, 193, 194, 201, 202, 203, 204, 208, 209, 210, 211, 212, 225, 226, 228, 229, 233, 234], "excluded_lines": []}, "colossalai/shardformer/policies/base_policy.py": {"executed_lines": [3, 4, 5, 7, 8, 9, 11, 13, 14, 15, 17, 20, 21, 22, 32, 33, 34, 35, 38, 39, 40, 59, 60, 61, 62, 65, 66, 75, 79, 87, 97, 98, 103, 104, 111, 112, 117, 118, 125, 126, 132, 161, 185, 193, 201], "summary": {"covered_lines": 42, "num_statements": 69, "percent_covered": 60.869565217391305, "percent_covered_display": "61", "missing_lines": 27, "excluded_lines": 0}, "missing_lines": [76, 77, 85, 93, 95, 99, 100, 101, 147, 148, 151, 152, 153, 155, 157, 159, 175, 176, 177, 179, 181, 183, 191, 199, 202, 203, 204], "excluded_lines": []}, "colossalai/shardformer/policies/bert.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 267, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 267, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 9, 11, 18, 19, 21, 35, 36, 37, 39, 40, 41, 43, 44, 53, 55, 56, 57, 59, 60, 62, 63, 65, 67, 68, 69, 70, 73, 75, 76, 78, 79, 148, 157, 158, 164, 165, 178, 195, 207, 208, 217, 218, 226, 235, 237, 238, 241, 242, 255, 266, 268, 276, 278, 279, 281, 285, 290, 292, 293, 295, 300, 301, 303, 304, 305, 307, 309, 310, 311, 312, 321, 322, 323, 332, 334, 336, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 362, 363, 365, 369, 370, 371, 372, 374, 375, 380, 382, 384, 385, 387, 389, 393, 394, 395, 396, 397, 398, 400, 401, 406, 408, 410, 411, 412, 413, 415, 417, 418, 419, 420, 422, 428, 432, 433, 434, 435, 436, 437, 439, 440, 445, 447, 451, 452, 453, 454, 455, 457, 458, 459, 460, 462, 468, 472, 473, 474, 475, 476, 477, 479, 480, 485, 487, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 508, 512, 513, 514, 516, 518, 519, 529, 530, 531, 537, 539, 543, 544, 545, 546, 547, 548, 550, 552, 556, 557, 558, 560, 562, 563, 573, 574, 575, 581, 583, 587, 588, 589, 590, 591, 592, 594, 596, 600, 601, 602, 603, 605, 606, 612, 614, 618, 619, 620, 621, 622, 624, 626, 630, 631, 632, 634, 636, 637, 647, 648, 649, 655, 657, 661, 662, 663, 664, 665, 666, 668, 670, 673, 674, 675, 677, 678, 679, 685, 687, 691, 692, 693, 694, 695, 697, 699], "excluded_lines": []}, "colossalai/shardformer/policies/blip2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 54, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [1, 3, 9, 10, 12, 15, 16, 17, 19, 20, 21, 23, 24, 33, 35, 37, 38, 39, 41, 42, 44, 45, 47, 49, 50, 84, 93, 168, 203, 205, 206, 218, 219, 234, 247, 263, 275, 287, 307, 319, 335, 336, 345, 346, 354, 363, 365, 366, 370, 371, 372, 376, 377, 378], "excluded_lines": []}, "colossalai/shardformer/policies/bloom.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 11, 20, 21, 24, 25, 28, 31, 35, 203, 206, 228, 251, 252, 262, 269, 274, 275, 309, 317, 331, 332, 354, 362, 367, 368, 397, 406, 411, 413, 425, 433], "summary": {"covered_lines": 38, "num_statements": 165, "percent_covered": 23.03030303030303, "percent_covered_display": "23", "missing_lines": 127, "excluded_lines": 0}, "missing_lines": [26, 29, 32, 33, 36, 38, 40, 41, 42, 44, 45, 47, 48, 50, 52, 53, 54, 55, 58, 60, 61, 63, 64, 100, 109, 110, 124, 140, 157, 158, 164, 165, 175, 176, 184, 192, 201, 204, 209, 210, 211, 212, 214, 216, 217, 218, 223, 226, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 253, 254, 256, 257, 260, 266, 267, 271, 276, 278, 281, 282, 294, 303, 304, 307, 311, 312, 313, 314, 315, 318, 319, 320, 322, 328, 333, 335, 338, 339, 346, 347, 352, 356, 357, 358, 359, 360, 364, 369, 371, 374, 375, 388, 389, 395, 399, 400, 401, 402, 403, 404, 408, 414, 416, 417, 418, 423, 427, 428, 429, 430, 431, 435], "excluded_lines": []}, "colossalai/shardformer/policies/chatglm2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 115, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 115, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 9, 11, 16, 17, 19, 26, 27, 28, 30, 31, 33, 34, 36, 37, 39, 40, 42, 43, 44, 46, 47, 49, 50, 51, 53, 55, 56, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 74, 80, 81, 84, 87, 91, 129, 130, 142, 159, 160, 172, 173, 182, 183, 190, 191, 200, 202, 203, 205, 207, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 228, 230, 233, 234, 235, 236, 237, 239, 241, 242, 243, 251, 254, 255, 256, 258, 260, 261, 266, 268, 269, 271, 273, 276, 277, 278, 280, 281, 286, 288, 289, 290, 291, 292, 294, 296], "excluded_lines": []}, "colossalai/shardformer/policies/falcon.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 166, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 166, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 10, 11, 13, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 30, 31, 34, 36, 37, 38, 40, 42, 43, 44, 46, 47, 49, 50, 58, 82, 91, 92, 105, 107, 119, 138, 139, 141, 143, 144, 146, 149, 150, 151, 152, 154, 156, 157, 158, 163, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 191, 192, 194, 196, 197, 200, 202, 206, 207, 209, 211, 214, 215, 216, 218, 219, 221, 224, 225, 237, 247, 248, 253, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 274, 277, 278, 279, 281, 282, 284, 287, 288, 296, 297, 302, 304, 306, 307, 308, 309, 310, 312, 314, 317, 318, 319, 321, 322, 324, 327, 328, 341, 342, 347, 349, 351, 352, 353, 354, 355, 356, 358, 360, 363, 364, 365, 367, 368, 370, 373, 374, 381, 382, 387, 389, 391, 392, 393, 394, 395, 397, 399], "excluded_lines": []}, "colossalai/shardformer/policies/gpt2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 213, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 213, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 9, 16, 18, 28, 29, 30, 32, 37, 38, 39, 41, 42, 44, 48, 50, 52, 53, 54, 56, 57, 59, 60, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 80, 81, 82, 83, 92, 145, 147, 158, 167, 190, 191, 198, 199, 203, 204, 206, 208, 209, 211, 213, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 268, 269, 270, 278, 282, 283, 284, 286, 288, 289, 294, 296, 297, 299, 301, 305, 306, 307, 309, 311, 312, 326, 327, 331, 342, 344, 345, 350, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 371, 375, 376, 377, 379, 381, 382, 397, 408, 410, 411, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 433, 434, 435, 436, 437, 438, 444, 448, 449, 450, 452, 454, 455, 461, 463, 464, 465, 466, 467, 469, 471, 475, 476, 477, 479, 481, 482, 492, 494, 495, 500, 502, 503, 504, 505, 506, 507, 509, 511, 515, 516, 517, 519, 521, 522, 527, 529, 530, 531, 532, 533, 535, 537], "excluded_lines": []}, "colossalai/shardformer/policies/gptj.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 142, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 142, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 9, 14, 16, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 43, 45, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 69, 124, 125, 136, 137, 146, 157, 158, 165, 166, 172, 174, 175, 177, 179, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 202, 203, 204, 205, 207, 209, 210, 211, 219, 223, 224, 225, 227, 228, 230, 232, 233, 238, 240, 241, 243, 245, 249, 250, 251, 253, 254, 256, 258, 259, 274, 285, 287, 288, 293, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 314, 318, 319, 320, 322, 323, 325, 327, 328, 333, 335, 336, 337, 338, 339, 341, 343, 347, 348, 349, 351, 352, 354, 356, 357, 362, 364, 365, 366, 367, 368, 370, 372], "excluded_lines": []}, "colossalai/shardformer/policies/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 165, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 165, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 9, 20, 28, 30, 33, 34, 35, 37, 38, 39, 40, 42, 43, 51, 56, 58, 59, 60, 61, 63, 64, 66, 67, 69, 71, 72, 73, 74, 75, 78, 79, 80, 83, 85, 87, 88, 89, 92, 94, 95, 104, 111, 112, 115, 116, 118, 121, 128, 140, 141, 145, 146, 150, 191, 192, 203, 220, 231, 232, 239, 241, 249, 251, 252, 254, 257, 258, 260, 261, 262, 264, 266, 267, 268, 269, 274, 275, 276, 282, 284, 286, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 321, 323, 325, 328, 330, 332, 333, 335, 337, 340, 341, 342, 344, 346, 348, 362, 363, 367, 378, 380, 382, 386, 388, 390, 391, 392, 393, 394, 396, 397, 398, 399, 404, 410, 413, 414, 415, 417, 419, 421, 430, 432, 434, 439, 441, 443, 444, 445, 446, 447, 449, 451], "excluded_lines": []}, "colossalai/shardformer/policies/mistral.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 140, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 140, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 9, 19, 24, 26, 29, 30, 31, 33, 34, 35, 36, 38, 39, 46, 51, 53, 55, 56, 57, 59, 60, 62, 63, 64, 68, 69, 76, 110, 111, 122, 123, 138, 147, 148, 155, 157, 165, 167, 168, 170, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 190, 191, 192, 198, 200, 202, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 237, 238, 239, 241, 242, 246, 248, 250, 251, 253, 255, 258, 259, 260, 262, 264, 266, 281, 293, 295, 297, 301, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 319, 325, 328, 329, 330, 332, 334, 336, 345, 347, 349, 355, 357, 359, 360, 361, 362, 363, 365, 367], "excluded_lines": []}, "colossalai/shardformer/policies/opt.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 149, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 149, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 19, 20, 21, 27, 29, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 51, 53, 58, 60, 62, 63, 64, 66, 67, 69, 70, 72, 74, 75, 76, 78, 79, 92, 117, 118, 129, 138, 156, 157, 164, 165, 174, 175, 184, 186, 187, 189, 191, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 220, 222, 223, 224, 232, 237, 238, 239, 241, 242, 243, 248, 250, 251, 253, 255, 258, 259, 260, 262, 263, 264, 276, 285, 286, 292, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 311, 313, 314, 315, 319, 320, 321, 322, 324, 327, 328, 329, 331, 332, 333, 339, 341, 342, 343, 344, 345, 347, 349, 352, 353, 354, 356, 357, 358, 364, 366, 367, 368, 369, 370, 372, 374], "excluded_lines": []}, "colossalai/shardformer/policies/sam.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 32, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 32, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 8, 11, 12, 13, 15, 16, 18, 19, 26, 28, 29, 31, 33, 34, 61, 125, 151, 161, 177, 201, 213, 214, 230, 232, 233, 237, 238, 239], "excluded_lines": []}, "colossalai/shardformer/policies/t5.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 10, 22, 24, 25, 32, 34, 37, 38, 41, 45, 251, 254, 290, 307, 346, 375, 376, 403, 406, 419, 420, 475, 481, 507, 508, 537, 540], "summary": {"covered_lines": 33, "num_statements": 198, "percent_covered": 16.666666666666668, "percent_covered_display": "17", "missing_lines": 165, "excluded_lines": 0}, "missing_lines": [39, 42, 43, 46, 56, 58, 59, 60, 62, 63, 65, 66, 68, 70, 71, 72, 74, 75, 83, 91, 99, 132, 140, 159, 176, 177, 188, 196, 201, 206, 213, 214, 223, 224, 232, 240, 249, 252, 262, 263, 266, 267, 270, 271, 274, 275, 280, 281, 283, 284, 286, 287, 288, 297, 298, 300, 301, 303, 309, 310, 312, 313, 314, 316, 317, 319, 320, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 349, 350, 351, 353, 354, 356, 357, 359, 362, 364, 372, 377, 379, 381, 382, 383, 385, 386, 388, 389, 398, 399, 401, 404, 407, 408, 409, 410, 414, 415, 416, 421, 423, 425, 426, 427, 429, 430, 432, 433, 443, 444, 457, 467, 468, 473, 476, 477, 478, 479, 482, 483, 484, 485, 489, 490, 491, 492, 493, 495, 496, 497, 499, 500, 502, 504, 509, 511, 513, 514, 515, 517, 518, 520, 521, 531, 532, 535, 538, 541], "excluded_lines": []}, "colossalai/shardformer/policies/vit.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 108, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 108, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 9, 10, 17, 19, 22, 23, 24, 26, 27, 29, 30, 32, 34, 35, 36, 38, 39, 50, 99, 100, 109, 110, 118, 120, 121, 123, 124, 126, 128, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 161, 162, 163, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 191, 200, 202, 203, 204, 210, 212, 213, 214, 216, 217, 218, 219, 220, 222, 226, 227, 228, 230, 232, 233, 234, 239, 241, 242, 243, 245, 246, 247, 248, 249, 251], "excluded_lines": []}, "colossalai/shardformer/policies/whisper.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 11, 12, 19, 21, 29, 30, 33, 36, 44, 291, 321, 324, 360, 378, 430, 475, 476, 490, 493, 499, 500, 514, 517, 523, 557, 558, 571, 578], "summary": {"covered_lines": 35, "num_statements": 207, "percent_covered": 16.908212560386474, "percent_covered_display": "17", "missing_lines": 172, "excluded_lines": 0}, "missing_lines": [31, 34, 41, 42, 45, 55, 57, 58, 59, 61, 62, 64, 65, 67, 69, 70, 71, 76, 77, 78, 80, 81, 115, 168, 169, 183, 199, 215, 227, 239, 240, 247, 254, 261, 262, 271, 272, 280, 289, 292, 295, 296, 309, 319, 322, 332, 333, 336, 337, 340, 341, 344, 345, 350, 351, 353, 354, 356, 357, 358, 367, 368, 370, 371, 373, 379, 380, 382, 383, 384, 385, 387, 389, 390, 391, 394, 395, 397, 398, 399, 401, 403, 404, 407, 409, 411, 412, 413, 414, 415, 416, 417, 422, 423, 424, 425, 426, 427, 428, 433, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 448, 449, 451, 452, 453, 455, 457, 460, 462, 471, 477, 479, 481, 482, 488, 491, 495, 501, 503, 504, 506, 507, 512, 515, 518, 519, 520, 521, 524, 525, 527, 528, 529, 531, 532, 534, 535, 536, 538, 540, 541, 542, 545, 546, 547, 548, 549, 550, 551, 552, 553, 559, 561, 563, 564, 569, 572, 573, 574, 575, 576, 579], "excluded_lines": []}, "colossalai/shardformer/shard/__init__.py": {"executed_lines": [1, 2, 3, 4, 6], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/shardformer/shard/grad_ckpt_config.py": {"executed_lines": [1, 2, 5, 6, 7, 9, 13, 14, 15, 26, 50, 52, 59, 60, 63, 64, 67], "summary": {"covered_lines": 16, "num_statements": 33, "percent_covered": 48.484848484848484, "percent_covered_display": "48", "missing_lines": 17, "excluded_lines": 0}, "missing_lines": [10, 53, 54, 55, 56, 57, 61, 65, 70, 71, 73, 74, 75, 76, 77, 78, 80], "excluded_lines": []}, "colossalai/shardformer/shard/shard_config.py": {"executed_lines": [1, 2, 3, 5, 6, 8, 10, 12, 13, 16, 17, 18, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 57, 58, 61, 108, 129], "summary": {"covered_lines": 33, "num_statements": 66, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [55, 59, 63, 64, 66, 67, 70, 73, 74, 77, 78, 81, 82, 83, 87, 88, 89, 92, 97, 98, 100, 103, 104, 106, 113, 114, 116, 117, 118, 119, 121, 122, 123], "excluded_lines": []}, "colossalai/shardformer/shard/sharder.py": {"executed_lines": [1, 2, 4, 5, 7, 9, 10, 11, 12, 13, 15, 18, 19, 28, 33, 48, 51, 54, 77, 125, 140, 155, 161, 209, 222, 232], "summary": {"covered_lines": 25, "num_statements": 96, "percent_covered": 26.041666666666668, "percent_covered_display": "26", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [29, 30, 31, 37, 38, 39, 41, 42, 43, 44, 45, 46, 49, 52, 61, 62, 63, 64, 65, 66, 67, 99, 102, 103, 105, 106, 108, 109, 111, 112, 114, 115, 137, 138, 152, 153, 156, 158, 159, 175, 176, 177, 178, 180, 182, 184, 185, 187, 193, 194, 196, 197, 200, 201, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 226, 227, 228, 229, 230, 236], "excluded_lines": []}, "colossalai/shardformer/shard/shardformer.py": {"executed_lines": [1, 2, 4, 5, 7, 9, 10, 11, 14, 17, 18, 38, 42], "summary": {"covered_lines": 12, "num_statements": 17, "percent_covered": 70.58823529411765, "percent_covered_display": "71", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [39, 40, 53, 54, 55], "excluded_lines": []}, "colossalai/shardformer/shard/utils.py": {"executed_lines": [1, 3, 6], "summary": {"covered_lines": 3, "num_statements": 11, "percent_covered": 27.272727272727273, "percent_covered_display": "27", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 15, 16, 17, 18, 19], "excluded_lines": []}, "colossalai/tensor/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 7], "summary": {"covered_lines": 6, "num_statements": 6, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/tensor/colo_parameter.py": {"executed_lines": [1, 3, 5, 6, 8, 10, 11, 14, 18, 39, 46, 47, 49, 54, 55, 70, 80], "summary": {"covered_lines": 16, "num_statements": 60, "percent_covered": 26.666666666666668, "percent_covered_display": "27", "missing_lines": 44, "excluded_lines": 0}, "missing_lines": [15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 40, 41, 42, 43, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 94], "excluded_lines": []}, "colossalai/tensor/colo_tensor.py": {"executed_lines": [1, 2, 4, 6, 14, 15, 25, 33, 39, 40, 48, 49, 51, 65, 66, 94], "summary": {"covered_lines": 15, "num_statements": 52, "percent_covered": 28.846153846153847, "percent_covered_display": "29", "missing_lines": 37, "excluded_lines": 0}, "missing_lines": [16, 17, 26, 27, 28, 29, 30, 34, 35, 36, 61, 62, 63, 67, 68, 70, 71, 73, 77, 78, 79, 80, 81, 84, 85, 87, 88, 90, 91, 92, 95, 96, 98, 99, 100, 101, 102], "excluded_lines": []}, "colossalai/tensor/comm_spec.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 15, 33, 47, 68, 81, 166, 208, 209, 218, 219, 222, 223, 227, 228, 232, 233, 242, 243, 246, 247, 250, 251, 255, 256, 265, 266, 269, 270, 274, 275, 279, 280, 289, 290, 293, 294, 298, 299, 303, 304, 313, 314, 317, 318, 330, 331, 335, 336, 337, 340, 341, 345, 346, 350, 354, 358, 362, 366, 370, 374, 375, 376, 377, 378, 379, 380, 383, 384, 400, 428, 458, 506, 521], "summary": {"covered_lines": 74, "num_statements": 253, "percent_covered": 29.24901185770751, "percent_covered_display": "29", "missing_lines": 179, "excluded_lines": 0}, "missing_lines": [19, 20, 22, 27, 28, 29, 30, 37, 38, 40, 41, 42, 43, 44, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 73, 75, 76, 77, 78, 128, 129, 130, 131, 132, 133, 136, 139, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 157, 158, 161, 163, 182, 183, 184, 187, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 220, 224, 225, 229, 244, 248, 252, 267, 271, 272, 276, 291, 295, 296, 300, 315, 319, 320, 327, 328, 332, 338, 342, 343, 347, 351, 355, 359, 363, 367, 371, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 424, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 464, 465, 466, 467, 469, 471, 472, 475, 477, 478, 479, 481, 482, 483, 485, 487, 488, 490, 492, 493, 495, 496, 497, 498, 500, 501, 502, 504, 514, 515, 517, 518], "excluded_lines": []}, "colossalai/tensor/d_tensor/__init__.py": {"executed_lines": [1, 22, 23, 25], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/tensor/d_tensor/api.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 16, 19, 24, 37, 51, 80, 95, 108, 132, 147, 166, 189, 221, 249, 260, 268, 283, 298, 312, 326, 345, 358, 389, 438, 485, 499, 514], "summary": {"covered_lines": 38, "num_statements": 163, "percent_covered": 23.312883435582823, "percent_covered_display": "23", "missing_lines": 125, "excluded_lines": 0}, "missing_lines": [21, 34, 47, 48, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 75, 76, 77, 92, 102, 103, 104, 105, 120, 121, 124, 127, 129, 135, 136, 139, 142, 144, 157, 158, 159, 160, 163, 177, 178, 180, 181, 182, 183, 185, 186, 207, 208, 210, 211, 213, 214, 216, 218, 236, 237, 239, 240, 242, 243, 244, 246, 250, 251, 254, 255, 257, 261, 262, 264, 265, 278, 279, 280, 294, 295, 308, 309, 322, 323, 336, 337, 355, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 384, 385, 386, 422, 423, 424, 426, 429, 430, 433, 435, 471, 472, 473, 476, 477, 480, 482, 495, 496, 503, 505, 508, 509, 510, 511, 518, 520, 521, 522, 523], "excluded_lines": []}, "colossalai/tensor/d_tensor/comm_spec.py": {"executed_lines": [1, 2, 4, 5, 6, 8, 14, 15, 16, 17, 18, 19, 20, 23, 24, 38, 52, 78, 93, 107, 119, 138, 149, 150, 159, 160, 163, 164, 168, 169, 173, 174, 183, 184, 187, 188, 191, 192, 196, 197, 206, 207, 210, 211, 215, 216, 220, 221, 230, 231, 234, 235, 239, 240, 244, 245, 254, 255, 258, 259, 271, 272, 276, 280, 284, 288, 292, 296], "summary": {"covered_lines": 62, "num_statements": 151, "percent_covered": 41.05960264900662, "percent_covered_display": "41", "missing_lines": 89, "excluded_lines": 0}, "missing_lines": [46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 86, 87, 89, 90, 97, 98, 99, 101, 102, 103, 104, 111, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 142, 143, 144, 145, 146, 161, 165, 166, 170, 185, 189, 193, 208, 212, 213, 217, 232, 236, 237, 241, 256, 260, 261, 268, 269, 273, 277, 281, 285, 289, 293], "excluded_lines": []}, "colossalai/tensor/d_tensor/layout.py": {"executed_lines": [1, 2, 4, 6, 8, 9, 12, 13, 21, 27, 30, 41], "summary": {"covered_lines": 11, "num_statements": 38, "percent_covered": 28.94736842105263, "percent_covered_display": "29", "missing_lines": 27, "excluded_lines": 0}, "missing_lines": [22, 23, 24, 25, 28, 31, 32, 33, 34, 35, 38, 39, 42, 45, 46, 47, 48, 49, 50, 52, 57, 58, 59, 61, 62, 64, 65], "excluded_lines": []}, "colossalai/tensor/d_tensor/layout_converter.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 19, 22, 23, 24, 31, 39, 40, 44, 45, 46, 47, 49, 50, 53, 54, 58, 59, 62, 63, 67, 149, 267, 361, 382, 537, 549], "summary": {"covered_lines": 38, "num_statements": 216, "percent_covered": 17.59259259259259, "percent_covered_display": "18", "missing_lines": 178, "excluded_lines": 0}, "missing_lines": [35, 36, 51, 55, 56, 60, 64, 65, 102, 103, 104, 108, 109, 111, 112, 113, 114, 118, 119, 121, 124, 125, 126, 136, 137, 138, 144, 145, 146, 147, 185, 186, 190, 191, 193, 194, 195, 196, 198, 199, 201, 203, 204, 205, 207, 208, 210, 211, 212, 214, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 232, 240, 244, 245, 247, 248, 249, 251, 254, 255, 256, 261, 262, 263, 265, 304, 305, 306, 310, 311, 314, 315, 316, 317, 319, 320, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 336, 337, 338, 347, 348, 351, 356, 357, 358, 359, 376, 377, 378, 379, 380, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 452, 468, 473, 474, 475, 476, 478, 481, 482, 483, 486, 488, 490, 492, 494, 497, 500, 501, 502, 507, 509, 511, 512, 513, 515, 516, 517, 519, 520, 521, 522, 523, 525, 526, 527, 528, 530, 531, 533, 535, 541, 542, 543, 544, 545, 546, 547, 612, 614, 615, 616, 617, 620, 621, 625], "excluded_lines": []}, "colossalai/tensor/d_tensor/misc.py": {"executed_lines": [1, 2, 5, 6, 9, 10, 13, 14], "summary": {"covered_lines": 8, "num_statements": 8, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/tensor/d_tensor/sharding_spec.py": {"executed_lines": [1, 2, 4, 5, 7, 9, 10, 11, 12, 15, 16, 26, 31, 34, 42, 59, 119, 141, 142, 152, 175, 186, 191, 200, 212], "summary": {"covered_lines": 23, "num_statements": 104, "percent_covered": 22.115384615384617, "percent_covered_display": "22", "missing_lines": 81, "excluded_lines": 0}, "missing_lines": [27, 28, 29, 32, 35, 36, 37, 38, 39, 40, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 79, 82, 85, 90, 93, 95, 98, 99, 102, 103, 106, 107, 110, 111, 114, 115, 117, 137, 138, 155, 156, 157, 158, 159, 162, 165, 167, 168, 171, 173, 176, 177, 181, 182, 187, 188, 189, 195, 196, 197, 198, 204, 205, 206, 207, 208, 209, 210, 239, 242, 243, 244, 245], "excluded_lines": []}, "colossalai/tensor/d_tensor/utils.py": {"executed_lines": [1, 2, 3, 5, 6, 9], "summary": {"covered_lines": 6, "num_statements": 38, "percent_covered": 15.789473684210526, "percent_covered_display": "16", "missing_lines": 32, "excluded_lines": 0}, "missing_lines": [22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 36, 38, 39, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 62, 63, 64, 66], "excluded_lines": []}, "colossalai/tensor/moe_tensor/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/tensor/moe_tensor/api.py": {"executed_lines": [1, 3, 4, 5, 7, 10, 23, 35, 51, 64, 77, 90, 103, 116, 129, 142], "summary": {"covered_lines": 16, "num_statements": 27, "percent_covered": 59.25925925925926, "percent_covered_display": "59", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [20, 32, 48, 61, 74, 87, 100, 113, 126, 139, 152], "excluded_lines": []}, "colossalai/tensor/moe_tensor/moe_info.py": {"executed_lines": [1, 4, 5, 7], "summary": {"covered_lines": 3, "num_statements": 15, "percent_covered": 20.0, "percent_covered_display": "20", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30], "excluded_lines": []}, "colossalai/tensor/padded_tensor/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/tensor/padded_tensor/api.py": {"executed_lines": [1, 4, 37, 56, 69, 101, 118], "summary": {"covered_lines": 7, "num_statements": 59, "percent_covered": 11.864406779661017, "percent_covered_display": "12", "missing_lines": 52, "excluded_lines": 0}, "missing_lines": [14, 15, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 47, 48, 50, 51, 53, 66, 74, 78, 79, 81, 82, 83, 90, 92, 93, 94, 96, 98, 102, 103, 105, 106, 107, 109, 110, 111, 113, 115, 119, 120, 122, 123, 124, 126, 128], "excluded_lines": []}, "colossalai/tensor/param_op_hook.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 17, 18, 21, 22, 25, 26, 29, 30, 34, 35, 40, 42, 43, 44, 61, 62, 66, 67, 71, 72, 76, 77, 81, 82, 92, 93, 100, 101, 105, 106, 107, 111, 112, 117, 118, 119, 123, 124, 129, 136, 151], "summary": {"covered_lines": 46, "num_statements": 99, "percent_covered": 46.464646464646464, "percent_covered_display": "46", "missing_lines": 53, "excluded_lines": 0}, "missing_lines": [19, 23, 27, 31, 54, 55, 56, 57, 59, 63, 64, 68, 69, 73, 74, 78, 79, 83, 88, 89, 90, 94, 96, 97, 98, 102, 108, 109, 113, 114, 120, 121, 125, 126, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 152, 153, 154, 155], "excluded_lines": []}, "colossalai/tensor/shape_consistency.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 16, 19, 20, 21, 28, 38, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 59, 63, 64, 67, 68, 72, 146, 257, 340, 396, 418, 581, 689, 754], "summary": {"covered_lines": 40, "num_statements": 294, "percent_covered": 13.605442176870747, "percent_covered_display": "14", "missing_lines": 254, "excluded_lines": 0}, "missing_lines": [29, 30, 31, 32, 35, 42, 43, 56, 60, 61, 65, 69, 70, 104, 105, 106, 107, 108, 109, 113, 114, 116, 119, 120, 121, 132, 135, 136, 139, 140, 141, 142, 143, 144, 180, 181, 182, 183, 184, 186, 187, 189, 191, 192, 193, 195, 196, 198, 199, 200, 202, 205, 206, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 230, 231, 235, 236, 238, 239, 240, 242, 245, 246, 249, 250, 251, 252, 253, 255, 289, 290, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 306, 307, 308, 309, 310, 311, 314, 315, 316, 326, 329, 330, 333, 334, 335, 336, 337, 338, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 363, 364, 366, 367, 368, 370, 372, 373, 381, 382, 384, 385, 388, 389, 390, 391, 392, 394, 412, 413, 414, 415, 416, 428, 429, 430, 431, 432, 433, 435, 446, 447, 448, 449, 450, 451, 452, 454, 456, 468, 469, 472, 473, 474, 475, 476, 477, 478, 491, 493, 495, 499, 501, 513, 514, 515, 516, 517, 518, 520, 521, 522, 523, 525, 527, 531, 533, 542, 543, 546, 548, 549, 550, 553, 554, 555, 557, 558, 565, 566, 567, 568, 569, 575, 576, 577, 579, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 655, 657, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 687, 748, 749, 750, 751, 752, 755, 756, 757, 758, 759], "excluded_lines": []}, "colossalai/tensor/sharding_spec.py": {"executed_lines": [1, 2, 3, 5, 7, 9, 11, 13, 14, 15, 16, 19, 20, 30, 35, 38, 46, 63, 123, 145, 146, 149, 150, 153, 154, 157, 158, 161, 162, 175, 200, 206, 238, 247, 259, 294], "summary": {"covered_lines": 34, "num_statements": 138, "percent_covered": 24.63768115942029, "percent_covered_display": "25", "missing_lines": 104, "excluded_lines": 0}, "missing_lines": [31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 54, 55, 56, 57, 58, 59, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 83, 86, 89, 94, 97, 99, 102, 103, 106, 107, 110, 111, 114, 115, 118, 119, 121, 141, 142, 178, 180, 181, 182, 183, 184, 185, 186, 189, 192, 193, 194, 197, 198, 201, 202, 203, 204, 208, 209, 210, 211, 212, 214, 219, 220, 221, 226, 227, 228, 230, 231, 233, 234, 242, 243, 244, 245, 251, 252, 253, 254, 255, 256, 257, 286, 289, 290, 291, 292, 295, 296, 297, 298, 299, 302, 303], "excluded_lines": []}, "colossalai/tensor/utils.py": {"executed_lines": [1, 3, 4, 6, 9, 29, 63, 93, 119, 165, 169, 196, 210], "summary": {"covered_lines": 13, "num_statements": 78, "percent_covered": 16.666666666666668, "percent_covered_display": "17", "missing_lines": 65, "excluded_lines": 0}, "missing_lines": [23, 24, 26, 51, 52, 53, 54, 55, 57, 58, 60, 82, 83, 84, 85, 86, 87, 88, 90, 103, 104, 105, 106, 107, 108, 111, 112, 113, 149, 151, 152, 154, 155, 156, 157, 158, 161, 162, 166, 171, 172, 174, 175, 176, 180, 181, 183, 190, 193, 200, 201, 202, 203, 204, 205, 206, 207, 218, 219, 220, 221, 222, 223, 225, 227], "excluded_lines": []}, "colossalai/testing/__init__.py": {"executed_lines": [1, 10, 11, 22], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/testing/comparison.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 8, 11, 15, 19, 30, 43, 86, 101], "summary": {"covered_lines": 14, "num_statements": 81, "percent_covered": 17.28395061728395, "percent_covered_display": "17", "missing_lines": 67, "excluded_lines": 0}, "missing_lines": [12, 16, 20, 32, 33, 34, 37, 38, 39, 40, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 118, 121, 122, 123, 124, 125, 133, 136, 137, 138, 146, 147, 148, 149, 153], "excluded_lines": []}, "colossalai/testing/pytest_wrapper.py": {"executed_lines": [1, 7, 10], "summary": {"covered_lines": 2, "num_statements": 12, "percent_covered": 16.666666666666668, "percent_covered_display": "17", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [32, 33, 34, 35, 39, 40, 42, 43, 44, 46], "excluded_lines": []}, "colossalai/testing/random.py": {"executed_lines": [1, 3, 4, 7], "summary": {"covered_lines": 4, "num_statements": 15, "percent_covered": 26.666666666666668, "percent_covered_display": "27", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19], "excluded_lines": []}, "colossalai/testing/utils.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 16, 59, 60, 66, 68, 71, 117, 123, 124, 149, 150, 152, 154, 157, 170, 171, 174, 175, 179, 180, 183, 212, 229, 255, 265, 266, 275, 277, 280, 281, 286, 290, 297], "summary": {"covered_lines": 44, "num_statements": 103, "percent_covered": 42.71844660194175, "percent_covered_display": "43", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [61, 62, 63, 64, 118, 119, 120, 121, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 144, 177, 201, 202, 203, 204, 205, 207, 209, 218, 219, 220, 221, 222, 223, 224, 225, 226, 250, 251, 252, 267, 268, 269, 270, 271, 272, 273, 282, 283, 284, 287, 288, 291, 292, 293, 295, 298], "excluded_lines": []}, "colossalai/utils/__init__.py": {"executed_lines": [1, 11, 12, 13, 15], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/utils/common.py": {"executed_lines": [3, 4, 5, 6, 7, 8, 10, 11, 13, 16, 23, 30, 31, 39, 43, 56, 65, 75], "summary": {"covered_lines": 18, "num_statements": 47, "percent_covered": 38.297872340425535, "percent_covered_display": "38", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [20, 25, 26, 27, 32, 33, 34, 36, 40, 44, 46, 47, 49, 50, 51, 53, 58, 61, 62, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78], "excluded_lines": []}, "colossalai/utils/memory.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 9, 10, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 44, 47, 58, 59, 61, 62, 63, 66, 73, 74, 75, 77], "excluded_lines": []}, "colossalai/utils/model/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/utils/model/utils.py": {"executed_lines": [5, 6, 8, 11, 19, 41, 42, 46, 82, 105, 108, 111], "summary": {"covered_lines": 12, "num_statements": 61, "percent_covered": 19.672131147540984, "percent_covered_display": "20", "missing_lines": 49, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 15, 16, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 67, 68, 72, 75, 77, 79, 80, 83, 84, 86, 87, 88, 91, 94, 97, 99, 101, 102, 106, 109, 112], "excluded_lines": []}, "colossalai/utils/multi_tensor_apply/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/utils/multi_tensor_apply/multi_tensor_apply.py": {"executed_lines": [4, 5, 12, 13, 15, 16, 17, 18, 23, 32], "summary": {"covered_lines": 9, "num_statements": 16, "percent_covered": 56.25, "percent_covered_display": "56", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 24, 25, 33, 35], "excluded_lines": []}, "colossalai/utils/rank_recorder/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "colossalai/utils/rank_recorder/rank_recorder.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 135, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 135, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 13, 15, 16, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 159, 160, 162, 164, 166, 167, 170, 171], "excluded_lines": []}, "colossalai/utils/tensor_detector/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/utils/tensor_detector/tensor_detector.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 9, 10, 13, 14, 47, 55, 65, 110, 170, 180], "summary": {"covered_lines": 16, "num_statements": 118, "percent_covered": 13.559322033898304, "percent_covered_display": "14", "missing_lines": 102, "excluded_lines": 0}, "missing_lines": [26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 73, 74, 76, 77, 79, 80, 81, 86, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 105, 107, 108, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 147, 149, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182], "excluded_lines": []}, "colossalai/utils/timer.py": {"executed_lines": [3, 4, 6, 9, 10, 12, 18, 19, 22, 23, 27, 34, 38, 56, 64, 72, 84, 91, 92, 98, 102, 113, 125, 135, 149, 152, 155], "summary": {"covered_lines": 25, "num_statements": 71, "percent_covered": 35.2112676056338, "percent_covered_display": "35", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [13, 14, 15, 16, 20, 24, 25, 29, 30, 31, 32, 36, 47, 48, 49, 50, 51, 52, 53, 54, 62, 70, 81, 82, 86, 87, 88, 99, 100, 108, 109, 110, 111, 120, 121, 123, 133, 142, 143, 144, 146, 147, 150, 153, 156, 157], "excluded_lines": []}, "colossalai/version.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/zero/__init__.py": {"executed_lines": [1, 2, 3, 5], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/zero/gemini/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 7], "summary": {"covered_lines": 6, "num_statements": 6, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/zero/gemini/chunk/__init__.py": {"executed_lines": [1, 2, 3, 4, 6], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/zero/gemini/chunk/chunk.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 20, 33, 34, 35, 36, 37, 40, 41, 44, 48, 53, 58, 59, 61, 168, 169, 189, 190, 198, 199, 210, 211, 220, 221, 224, 225, 234, 235, 238, 239, 249, 260, 286, 317, 360, 369, 377, 408, 427, 445, 460, 467, 476, 498, 501, 513, 528, 543, 551, 556, 561, 564, 567, 609], "summary": {"covered_lines": 67, "num_statements": 347, "percent_covered": 19.30835734870317, "percent_covered_display": "19", "missing_lines": 280, "excluded_lines": 0}, "missing_lines": [45, 49, 50, 54, 55, 88, 89, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 112, 114, 117, 119, 122, 127, 129, 130, 134, 136, 139, 140, 141, 145, 146, 147, 151, 156, 158, 160, 163, 164, 166, 170, 171, 173, 175, 176, 178, 180, 181, 182, 183, 184, 185, 187, 191, 192, 193, 194, 196, 201, 203, 204, 205, 206, 208, 213, 215, 216, 218, 222, 226, 227, 229, 236, 241, 242, 244, 245, 247, 251, 252, 253, 255, 256, 257, 258, 267, 268, 270, 272, 273, 275, 276, 277, 280, 281, 282, 283, 284, 289, 292, 293, 294, 295, 297, 298, 299, 301, 302, 304, 306, 307, 309, 310, 311, 312, 314, 315, 325, 328, 329, 330, 331, 332, 334, 335, 337, 338, 340, 342, 343, 344, 345, 346, 348, 349, 350, 354, 355, 356, 358, 363, 365, 366, 367, 372, 374, 375, 380, 382, 386, 387, 388, 389, 391, 392, 393, 395, 399, 400, 401, 402, 404, 405, 406, 423, 424, 425, 438, 440, 441, 442, 443, 455, 457, 458, 462, 463, 465, 469, 470, 471, 473, 474, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 493, 494, 495, 496, 499, 502, 504, 506, 507, 508, 510, 511, 514, 515, 517, 519, 521, 523, 525, 526, 529, 530, 531, 535, 536, 538, 540, 541, 545, 546, 548, 549, 552, 553, 554, 557, 558, 559, 562, 565, 568, 578, 579, 583, 584, 585, 587, 588, 589, 591, 592, 593, 595, 596, 597, 599, 600, 602, 603, 604, 605, 607, 615, 617, 625, 626, 627, 628, 629, 631, 633, 634, 636, 637, 639, 640, 644, 647, 648, 649, 650, 652], "excluded_lines": []}, "colossalai/zero/gemini/chunk/manager.py": {"executed_lines": [1, 2, 4, 5, 6, 8, 9, 11, 14, 15, 23, 37, 100, 105, 115, 124, 132, 137, 147, 155, 166, 175, 186, 200, 215, 226, 232, 237, 241, 245, 250, 255, 265], "summary": {"covered_lines": 32, "num_statements": 161, "percent_covered": 19.875776397515526, "percent_covered_display": "20", "missing_lines": 129, "excluded_lines": 0}, "missing_lines": [24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 58, 59, 60, 62, 63, 64, 65, 67, 69, 70, 74, 77, 79, 80, 81, 82, 84, 94, 95, 96, 98, 102, 103, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 134, 135, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 163, 164, 173, 179, 180, 181, 182, 183, 184, 193, 194, 195, 196, 197, 198, 209, 210, 211, 212, 213, 216, 220, 221, 222, 223, 224, 228, 229, 230, 233, 234, 235, 238, 239, 242, 243, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 268, 272, 273, 274, 276, 277, 279, 285, 288, 289, 292, 293, 295, 298, 300], "excluded_lines": []}, "colossalai/zero/gemini/chunk/search_utils.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 14, 41, 63, 79, 108], "summary": {"covered_lines": 14, "num_statements": 86, "percent_covered": 16.27906976744186, "percent_covered_display": "16", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [23, 24, 25, 27, 28, 30, 32, 33, 34, 36, 37, 38, 53, 54, 55, 56, 57, 58, 59, 60, 76, 94, 95, 97, 98, 99, 101, 102, 103, 105, 135, 136, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 160, 161, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 191], "excluded_lines": []}, "colossalai/zero/gemini/chunk/utils.py": {"executed_lines": [1, 2, 4, 5, 6, 8, 9, 12, 18], "summary": {"covered_lines": 9, "num_statements": 30, "percent_covered": 30.0, "percent_covered_display": "30", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [13, 14, 15, 25, 26, 28, 29, 31, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 51, 53, 54], "excluded_lines": []}, "colossalai/zero/gemini/gemini_ddp.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 30, 36, 37, 39, 40, 41, 42, 43, 45, 46, 50, 55, 56, 74, 183, 186, 189, 192, 195, 200, 201, 219, 249, 263, 284, 301, 307, 314, 334, 340, 343, 403, 406, 410, 437, 481, 499, 552, 609, 782, 839, 848, 863], "summary": {"covered_lines": 59, "num_statements": 468, "percent_covered": 12.606837606837606, "percent_covered_display": "13", "missing_lines": 409, "excluded_lines": 0}, "missing_lines": [47, 48, 100, 101, 102, 105, 106, 107, 117, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 148, 150, 152, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 173, 174, 175, 177, 178, 179, 180, 181, 184, 187, 190, 193, 198, 216, 217, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 246, 247, 251, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 271, 272, 273, 274, 276, 277, 278, 280, 281, 282, 286, 287, 289, 290, 291, 292, 293, 294, 296, 298, 299, 302, 303, 304, 305, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 329, 332, 335, 336, 337, 338, 341, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 359, 360, 361, 363, 364, 367, 368, 370, 371, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 404, 407, 408, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 465, 468, 469, 470, 473, 475, 476, 478, 479, 493, 494, 495, 496, 497, 512, 516, 517, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 532, 534, 535, 536, 537, 538, 541, 542, 543, 545, 546, 550, 575, 576, 577, 580, 581, 582, 584, 586, 587, 588, 590, 591, 592, 598, 599, 603, 604, 607, 644, 645, 647, 648, 649, 651, 660, 661, 662, 664, 665, 666, 668, 669, 670, 672, 673, 674, 675, 680, 681, 682, 684, 688, 689, 690, 691, 692, 693, 699, 700, 702, 703, 705, 706, 708, 710, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 725, 726, 727, 728, 729, 731, 732, 733, 743, 744, 745, 746, 748, 750, 753, 754, 755, 756, 757, 759, 760, 761, 763, 764, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 783, 784, 785, 786, 789, 790, 793, 794, 795, 798, 800, 809, 811, 813, 814, 815, 824, 826, 828, 832, 833, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 853, 855, 856, 857, 859, 860, 861, 887, 890, 891, 892, 895, 896, 897, 898, 900, 903, 904, 905, 906, 907, 909, 910, 911, 913, 914, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 931, 932, 934], "excluded_lines": []}, "colossalai/zero/gemini/gemini_hook.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 9, 10, 11, 14, 15, 16, 19, 20, 26, 39, 49, 52, 55, 58, 61, 62, 70, 71], "summary": {"covered_lines": 24, "num_statements": 50, "percent_covered": 48.0, "percent_covered_display": "48", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 47, 50, 53, 56, 59, 63, 64, 65, 66, 68], "excluded_lines": []}, "colossalai/zero/gemini/gemini_mgr.py": {"executed_lines": [1, 2, 3, 5, 7, 8, 9, 12, 13, 27, 55, 63, 64, 67, 70, 83, 87, 94, 117, 118, 136, 141, 145, 149, 150, 153, 154, 159, 160, 163], "summary": {"covered_lines": 29, "num_statements": 97, "percent_covered": 29.896907216494846, "percent_covered_display": "30", "missing_lines": 68, "excluded_lines": 0}, "missing_lines": [34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 65, 68, 77, 78, 80, 81, 84, 85, 89, 90, 91, 92, 99, 100, 101, 102, 104, 112, 113, 115, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 133, 134, 137, 138, 139, 142, 143, 146, 147, 151, 155, 156, 157, 161, 166], "excluded_lines": []}, "colossalai/zero/gemini/gemini_optimizer.py": {"executed_lines": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 31, 37, 39, 40, 42, 44, 47, 48, 64, 67, 71, 72, 101, 199, 212, 222, 227, 253, 264, 268, 294, 297, 301, 309, 341, 349, 388, 417, 570, 612, 638, 666, 694, 715, 774, 785, 793, 807, 834, 837, 848, 849], "summary": {"covered_lines": 58, "num_statements": 456, "percent_covered": 12.719298245614034, "percent_covered_display": "13", "missing_lines": 398, "excluded_lines": 0}, "missing_lines": [59, 62, 65, 68, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 144, 145, 147, 148, 149, 150, 151, 156, 158, 159, 160, 161, 162, 164, 166, 167, 177, 178, 180, 182, 184, 185, 189, 194, 195, 197, 200, 201, 202, 203, 205, 206, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 242, 244, 245, 246, 247, 248, 250, 251, 254, 256, 257, 258, 259, 260, 262, 265, 266, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 284, 286, 287, 288, 289, 290, 291, 292, 295, 298, 299, 306, 307, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 455, 456, 462, 465, 466, 467, 468, 469, 474, 475, 476, 477, 478, 479, 481, 485, 486, 487, 488, 489, 495, 496, 497, 500, 501, 502, 503, 506, 507, 508, 511, 514, 515, 516, 518, 520, 525, 526, 529, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 561, 562, 563, 566, 568, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 595, 596, 598, 599, 600, 602, 603, 604, 606, 607, 608, 610, 624, 625, 627, 628, 629, 632, 634, 635, 636, 643, 650, 659, 660, 661, 662, 664, 684, 685, 688, 689, 690, 691, 692, 699, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 720, 724, 725, 726, 727, 728, 730, 731, 735, 736, 738, 739, 740, 741, 743, 744, 745, 746, 747, 749, 750, 752, 753, 754, 755, 758, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 781, 782, 783, 787, 788, 790, 791, 801, 802, 803, 804, 805, 823, 824, 825, 826, 828, 829, 830, 832, 835, 845, 850, 851], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 7], "summary": {"covered_lines": 6, "num_statements": 6, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/chunk_memstats_collector.py": {"executed_lines": [1, 3, 4, 6, 7, 10, 11, 24, 32, 33], "summary": {"covered_lines": 10, "num_statements": 17, "percent_covered": 58.8235294117647, "percent_covered_display": "59", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [20, 21, 28, 29, 30, 34, 36], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/memory_monitor.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 11, 12, 16, 20, 23, 24, 27, 28, 31, 37, 41, 46, 47, 76, 89, 93, 96, 100, 112, 125, 126, 131, 134, 138], "summary": {"covered_lines": 27, "num_statements": 72, "percent_covered": 37.5, "percent_covered_display": "38", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [17, 18, 21, 25, 29, 32, 38, 39, 42, 43, 77, 78, 80, 82, 83, 85, 86, 87, 90, 91, 94, 97, 98, 101, 102, 104, 105, 107, 108, 109, 110, 113, 115, 116, 117, 121, 122, 132, 135, 136, 145, 146, 147, 148, 149], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/memory_stats.py": {"executed_lines": [1, 3, 5, 8, 9, 37, 44, 47, 51, 52, 55, 72, 87, 93, 101, 109], "summary": {"covered_lines": 16, "num_statements": 74, "percent_covered": 21.62162162162162, "percent_covered_display": "22", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [14, 16, 18, 19, 21, 23, 24, 25, 28, 29, 31, 32, 34, 35, 38, 39, 40, 42, 45, 48, 49, 53, 63, 64, 65, 67, 68, 69, 70, 82, 83, 85, 88, 89, 91, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 123, 125, 126], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/memstats_collector.py": {"executed_lines": [1, 2, 4, 5, 8, 9, 20, 34, 53, 54, 57, 61, 69, 80, 94], "summary": {"covered_lines": 14, "num_statements": 52, "percent_covered": 26.923076923076923, "percent_covered_display": "27", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 43, 44, 45, 49, 50, 51, 55, 58, 59, 62, 64, 65, 66, 73, 74, 77, 78, 84, 85, 86, 87, 89, 91, 92, 95, 96, 97, 98], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/param_runtime_order.py": {"executed_lines": [1, 3, 6, 7, 10, 13, 17, 18, 23, 26, 29, 37, 40], "summary": {"covered_lines": 12, "num_statements": 25, "percent_covered": 48.0, "percent_covered_display": "48", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [8, 11, 14, 24, 27, 30, 31, 32, 33, 34, 35, 38, 41], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/runtime_mem_tracer.py": {"executed_lines": [1, 3, 8, 9, 11, 13, 16, 17, 28, 43, 46, 49, 52, 60, 69, 75, 83, 88, 96, 100], "summary": {"covered_lines": 19, "num_statements": 64, "percent_covered": 29.6875, "percent_covered_display": "30", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 44, 47, 50, 56, 57, 58, 64, 65, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 89, 90, 92, 93, 94, 97, 98, 101, 102, 103, 104], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/static_memstats_collector.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 72, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 9, 11, 12, 14, 17, 18, 21, 22, 23, 24, 27, 32, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 85, 86, 87, 89, 96, 98, 99, 102, 103, 105], "excluded_lines": []}, "colossalai/zero/gemini/memory_tracer/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 34, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 15, 16, 17, 18, 21, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59], "excluded_lines": []}, "colossalai/zero/gemini/placement_policy.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 9, 10, 11, 13, 14, 17, 18, 20, 26, 27, 30, 31, 37, 38, 58, 75, 99, 100, 102, 117, 178, 179, 180, 189, 202, 203, 208, 209, 214, 215], "summary": {"covered_lines": 36, "num_statements": 119, "percent_covered": 30.252100840336134, "percent_covered_display": "30", "missing_lines": 83, "excluded_lines": 0}, "missing_lines": [23, 24, 28, 34, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 73, 78, 80, 81, 82, 83, 84, 87, 88, 90, 92, 93, 94, 95, 96, 110, 114, 115, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 176, 181, 182, 183, 184, 185, 186, 187, 192, 193, 196, 197, 199, 210, 211, 212, 216], "excluded_lines": []}, "colossalai/zero/gemini/utils.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 11, 14, 32, 48, 64], "summary": {"covered_lines": 12, "num_statements": 59, "percent_covered": 20.338983050847457, "percent_covered_display": "20", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [15, 16, 18, 19, 21, 23, 25, 26, 27, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 81, 83, 85, 86, 87, 89, 90, 94, 95, 97, 98, 101, 102, 104, 105, 107], "excluded_lines": []}, "colossalai/zero/low_level/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/zero/low_level/_utils.py": {"executed_lines": [1, 2, 4, 5, 6, 9, 13, 17, 24, 29, 52, 65, 69, 90, 108, 160, 181, 186, 194], "summary": {"covered_lines": 19, "num_statements": 94, "percent_covered": 20.21276595744681, "percent_covered_display": "20", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [10, 14, 18, 19, 20, 21, 25, 26, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 46, 48, 53, 54, 56, 57, 58, 60, 62, 66, 85, 86, 87, 99, 100, 101, 102, 103, 104, 105, 130, 131, 134, 135, 137, 139, 140, 144, 146, 147, 149, 152, 153, 154, 155, 157, 161, 165, 168, 172, 173, 174, 176, 177, 178, 182, 183, 188, 189, 190, 191, 207, 210, 211], "excluded_lines": []}, "colossalai/zero/low_level/bookkeeping/__init__.py": {"executed_lines": [1, 2, 3, 4, 6], "summary": {"covered_lines": 5, "num_statements": 5, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "colossalai/zero/low_level/bookkeeping/base_store.py": {"executed_lines": [1, 2, 5, 6, 10, 11, 14, 15], "summary": {"covered_lines": 8, "num_statements": 12, "percent_covered": 66.66666666666667, "percent_covered_display": "67", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [7, 8, 12, 16], "excluded_lines": []}, "colossalai/zero/low_level/bookkeeping/bucket_store.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 11, 12, 16, 32, 41, 46, 63, 86, 95, 109, 121], "summary": {"covered_lines": 17, "num_statements": 61, "percent_covered": 27.868852459016395, "percent_covered_display": "28", "missing_lines": 44, "excluded_lines": 0}, "missing_lines": [13, 14, 18, 19, 21, 23, 24, 25, 26, 27, 30, 39, 44, 55, 56, 57, 58, 61, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 93, 103, 104, 105, 106, 107, 119, 123, 124, 125, 126, 127, 128, 129], "excluded_lines": []}, "colossalai/zero/low_level/bookkeeping/gradient_store.py": {"executed_lines": [1, 3, 5, 8, 9, 26, 43, 61, 74, 93, 110, 113, 116], "summary": {"covered_lines": 13, "num_statements": 42, "percent_covered": 30.952380952380953, "percent_covered_display": "31", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [10, 11, 20, 22, 24, 37, 38, 39, 41, 52, 53, 54, 55, 57, 59, 72, 84, 86, 87, 88, 89, 91, 104, 105, 106, 108, 111, 114, 126], "excluded_lines": []}, "colossalai/zero/low_level/bookkeeping/parameter_store.py": {"executed_lines": [1, 2, 4, 7, 8, 18, 28, 40], "summary": {"covered_lines": 8, "num_statements": 16, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [9, 12, 15, 16, 26, 38, 48, 49], "excluded_lines": []}, "colossalai/zero/low_level/bookkeeping/tensor_bucket.py": {"executed_lines": [1, 4, 5, 10, 11, 14, 15, 18, 21, 24, 34, 38, 41, 45, 48], "summary": {"covered_lines": 15, "num_statements": 37, "percent_covered": 40.54054054054054, "percent_covered_display": "41", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [6, 7, 8, 12, 16, 19, 22, 25, 27, 28, 29, 31, 32, 35, 36, 39, 42, 43, 46, 49, 50, 51], "excluded_lines": []}, "colossalai/zero/low_level/low_level_optim.py": {"executed_lines": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 21, 22, 23, 25, 26, 29, 30, 54, 62, 63, 65, 225, 226, 229, 230, 233, 243, 283, 288, 301, 452, 459, 471, 484, 504, 524, 543, 567, 700, 751, 771, 780, 789, 790, 802, 823, 855, 879, 933, 955, 958], "summary": {"covered_lines": 53, "num_statements": 517, "percent_covered": 10.251450676982591, "percent_covered_display": "10", "missing_lines": 464, "excluded_lines": 0}, "missing_lines": [42, 51, 52, 55, 56, 57, 58, 59, 87, 89, 90, 91, 94, 96, 99, 102, 103, 104, 111, 112, 113, 114, 117, 118, 121, 122, 123, 126, 129, 131, 132, 133, 134, 135, 136, 139, 143, 144, 145, 151, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 176, 179, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 199, 200, 205, 206, 209, 210, 211, 222, 223, 227, 231, 234, 235, 236, 237, 238, 239, 245, 246, 248, 249, 250, 252, 253, 254, 256, 257, 259, 261, 262, 263, 265, 266, 269, 270, 272, 274, 275, 277, 285, 286, 291, 292, 293, 294, 295, 302, 303, 305, 306, 307, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344, 346, 347, 349, 350, 352, 353, 354, 355, 357, 359, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 375, 376, 377, 382, 383, 384, 387, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 415, 417, 418, 421, 422, 423, 430, 431, 434, 435, 440, 441, 442, 443, 446, 447, 448, 450, 453, 454, 455, 456, 457, 466, 467, 468, 469, 479, 480, 482, 485, 491, 495, 497, 498, 505, 509, 510, 512, 514, 515, 517, 520, 521, 522, 525, 529, 530, 531, 533, 534, 535, 538, 539, 541, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 568, 569, 570, 572, 573, 574, 575, 576, 577, 580, 581, 586, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 601, 602, 603, 604, 606, 607, 610, 612, 613, 615, 616, 617, 618, 619, 622, 623, 624, 626, 629, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 656, 659, 660, 661, 662, 667, 668, 669, 672, 673, 674, 675, 676, 677, 678, 682, 688, 692, 697, 698, 712, 713, 715, 716, 717, 718, 723, 724, 727, 728, 729, 730, 733, 738, 743, 745, 753, 754, 755, 757, 759, 760, 761, 763, 764, 772, 773, 774, 775, 776, 778, 783, 784, 786, 791, 792, 793, 794, 796, 804, 805, 807, 809, 810, 813, 814, 815, 817, 819, 821, 829, 830, 831, 832, 833, 834, 835, 836, 837, 840, 842, 845, 846, 849, 851, 853, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 889, 890, 892, 893, 894, 895, 896, 899, 900, 901, 902, 903, 905, 906, 907, 908, 911, 913, 916, 917, 920, 921, 923, 924, 925, 926, 928, 929, 931, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 950, 951, 952, 953, 956, 959, 960, 964], "excluded_lines": []}, "colossalai/zero/wrapper.py": {"executed_lines": [1, 2, 4, 5, 7, 10, 52], "summary": {"covered_lines": 7, "num_statements": 36, "percent_covered": 19.444444444444443, "percent_covered_display": "19", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [37, 39, 40, 42, 43, 45, 47, 49, 89, 90, 92, 94, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 116, 117], "excluded_lines": []}, "examples/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "examples/language/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "examples/language/data_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 48, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 14, 15, 24, 25, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 72, 73, 74, 79, 80, 81, 82, 83, 85, 97, 98, 99, 102, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 119, 120], "excluded_lines": []}, "examples/language/model_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 7, 8, 9, 10, 11, 12, 14, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32], "excluded_lines": []}, "examples/language/openmoe/model/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "examples/language/openmoe/model/modeling_openmoe.py": {"executed_lines": [20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 40, 41, 42, 44, 47, 49, 52, 128, 146, 160, 184, 223, 230, 242, 243, 255, 277, 289, 290, 292, 309, 312, 429, 430, 462, 523, 540, 544, 545, 546, 547, 548, 549, 551, 562, 567, 631, 635, 636, 643, 661, 664, 668, 691, 692, 820, 823, 833, 836, 839, 842, 845, 848, 851, 852, 853, 976, 1006, 1007, 1015, 1023, 1060, 1061, 1084, 1085, 1101, 1102], "summary": {"covered_lines": 77, "num_statements": 467, "percent_covered": 16.488222698072803, "percent_covered_display": "16", "missing_lines": 390, "excluded_lines": 0}, "missing_lines": [45, 102, 124, 134, 135, 136, 137, 138, 140, 141, 142, 150, 151, 153, 155, 157, 173, 174, 175, 177, 179, 181, 186, 187, 189, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 217, 218, 220, 225, 226, 227, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 269, 270, 272, 274, 282, 283, 284, 285, 286, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 310, 322, 324, 325, 326, 327, 328, 330, 331, 333, 334, 336, 337, 340, 341, 342, 344, 345, 346, 348, 349, 350, 353, 355, 356, 358, 360, 361, 362, 363, 364, 366, 369, 370, 373, 374, 376, 377, 379, 380, 381, 382, 383, 385, 387, 388, 393, 394, 395, 398, 399, 400, 401, 404, 405, 407, 408, 413, 414, 416, 417, 418, 419, 421, 423, 424, 426, 431, 432, 433, 434, 435, 436, 437, 438, 457, 458, 460, 485, 487, 490, 498, 501, 502, 503, 504, 506, 507, 508, 509, 510, 512, 514, 515, 517, 518, 520, 552, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 644, 645, 646, 648, 649, 655, 657, 659, 662, 665, 671, 672, 673, 680, 682, 685, 689, 704, 705, 708, 710, 713, 714, 715, 716, 717, 718, 720, 722, 723, 725, 726, 727, 729, 730, 731, 734, 736, 738, 739, 741, 742, 745, 749, 751, 752, 753, 756, 759, 760, 761, 763, 764, 765, 767, 769, 771, 772, 774, 776, 778, 786, 795, 797, 798, 800, 801, 803, 806, 807, 809, 810, 811, 812, 824, 825, 826, 827, 828, 831, 834, 837, 840, 843, 846, 849, 893, 895, 896, 899, 902, 914, 915, 916, 917, 918, 920, 922, 923, 924, 929, 931, 932, 933, 934, 936, 937, 939, 940, 942, 944, 945, 946, 947, 952, 954, 955, 957, 958, 960, 961, 962, 964, 965, 966, 968, 979, 980, 982, 983, 985, 986, 987, 988, 991, 992, 994, 996, 1004, 1008, 1009, 1010, 1013, 1016, 1017, 1018, 1019, 1020, 1021, 1033, 1034, 1037, 1038, 1039, 1040, 1045, 1048, 1051, 1054, 1055, 1056, 1057, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1112], "excluded_lines": []}, "examples/language/openmoe/model/openmoe_policy.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 19, 22, 23, 26, 38, 86, 89, 108, 129, 144, 145, 148, 159, 164, 169, 170, 198, 206, 223, 224, 229, 230, 407, 408], "summary": {"covered_lines": 37, "num_statements": 246, "percent_covered": 15.040650406504065, "percent_covered_display": "15", "missing_lines": 209, "excluded_lines": 0}, "missing_lines": [24, 27, 29, 30, 32, 33, 34, 36, 39, 41, 42, 43, 47, 48, 51, 52, 72, 81, 82, 84, 87, 92, 93, 94, 95, 97, 99, 100, 101, 102, 106, 110, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 149, 150, 152, 157, 161, 162, 166, 171, 173, 175, 186, 188, 190, 196, 200, 201, 202, 203, 204, 207, 208, 209, 214, 220, 248, 250, 252, 253, 256, 258, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 304, 306, 310, 311, 316, 323, 324, 325, 328, 331, 332, 333, 335, 336, 337, 338, 340, 342, 344, 345, 347, 349, 351, 359, 368, 370, 371, 372, 373, 375, 376, 379, 380, 381, 384, 385, 386, 387, 389, 390, 401, 452, 453, 454, 457, 460, 461, 462, 463, 464, 465, 468, 486, 487, 496, 497, 498, 499, 501, 503, 504, 505, 510, 512, 513, 514, 515, 517, 518, 520, 521, 523, 525, 526, 527, 528, 533, 535, 536, 538, 539, 541, 542, 543, 545, 546, 547, 549, 557, 558, 559, 560], "excluded_lines": []}, "examples/language/performance_evaluator.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 72, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 43, 44, 47, 59, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 99, 100, 101, 106, 108, 109, 110, 111, 112, 113, 114, 118], "excluded_lines": []}, "extensions/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 21], "summary": {"covered_lines": 8, "num_statements": 8, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "extensions/base_extension.py": {"executed_lines": [1, 2, 3, 4, 6, 9, 10, 16, 17, 20, 21, 24, 25, 28, 29, 60, 61, 66, 67, 72, 73, 76, 77, 80, 81], "summary": {"covered_lines": 25, "num_statements": 47, "percent_covered": 53.191489361702125, "percent_covered_display": "53", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [11, 12, 13, 14, 18, 22, 26, 38, 40, 41, 44, 45, 48, 49, 52, 55, 56, 57, 58, 74, 78, 82], "excluded_lines": []}, "extensions/cpp_extension.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 10, 13, 14, 25, 28, 48, 54, 60, 70, 108, 109, 114, 115, 120, 121, 126], "summary": {"covered_lines": 23, "num_statements": 64, "percent_covered": 35.9375, "percent_covered_display": "36", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [15, 18, 21, 22, 23, 26, 37, 38, 39, 40, 42, 43, 44, 45, 52, 58, 61, 63, 71, 73, 74, 75, 78, 79, 80, 81, 84, 85, 87, 89, 90, 98, 100, 101, 103, 105, 127, 128, 129, 132, 134], "excluded_lines": []}, "extensions/cpu_adam/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "extensions/cpu_adam/cpu_adam_arm.py": {"executed_lines": [1, 3, 6, 7, 10, 14, 21, 27, 30, 40], "summary": {"covered_lines": 10, "num_statements": 20, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [8, 12, 15, 16, 22, 25, 28, 31, 38, 41], "excluded_lines": []}, "extensions/cpu_adam/cpu_adam_x86.py": {"executed_lines": [1, 3, 4, 7, 8, 11, 14, 22, 28, 31, 44], "summary": {"covered_lines": 11, "num_statements": 24, "percent_covered": 45.833333333333336, "percent_covered_display": "46", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [9, 12, 15, 16, 19, 23, 26, 29, 32, 42, 45, 53, 54], "excluded_lines": []}, "extensions/csrc/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5], "excluded_lines": []}, "extensions/csrc/scaled_softmax.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 95, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 95, "excluded_lines": 0}, "missing_lines": [4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 24, 33, 34, 36, 37, 39, 40, 42, 43, 45, 46, 47, 48, 50, 53, 62, 63, 64, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 83, 97, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126, 128, 130, 131, 133, 141, 142, 144, 145, 146, 148, 149, 150, 152, 153, 154, 156, 157, 160, 161, 162, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 182, 184, 187, 188, 190], "excluded_lines": []}, "extensions/cuda_extension.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 18, 19, 20, 25, 35, 45, 56, 97], "summary": {"covered_lines": 19, "num_statements": 57, "percent_covered": 33.333333333333336, "percent_covered_display": "33", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [27, 28, 30, 31, 32, 33, 36, 38, 39, 42, 43, 49, 51, 52, 53, 54, 57, 59, 62, 63, 64, 67, 68, 69, 70, 73, 74, 76, 78, 79, 88, 90, 91, 93, 95, 98, 100, 101], "excluded_lines": []}, "extensions/flash_attention/__init__.py": {"executed_lines": [1, 2, 3, 5, 7, 10, 11, 14], "summary": {"covered_lines": 8, "num_statements": 9, "percent_covered": 88.88888888888889, "percent_covered_display": "89", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [9], "excluded_lines": []}, "extensions/flash_attention/flash_attention_dao_cuda.py": {"executed_lines": [1, 4, 5, 8, 21, 24, 29, 34], "summary": {"covered_lines": 8, "num_statements": 40, "percent_covered": 20.0, "percent_covered_display": "20", "missing_lines": 32, "excluded_lines": 0}, "missing_lines": [6, 10, 11, 13, 14, 16, 17, 18, 19, 22, 25, 30, 35, 37, 38, 39, 40, 42, 43, 45, 61, 62, 63, 64, 65, 68, 69, 70, 82, 85, 94, 96], "excluded_lines": []}, "extensions/flash_attention/flash_attention_npu.py": {"executed_lines": [1, 4, 5, 8, 16, 19, 24, 29], "summary": {"covered_lines": 8, "num_statements": 24, "percent_covered": 33.333333333333336, "percent_covered_display": "33", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [6, 9, 10, 12, 13, 14, 17, 20, 25, 30, 32, 33, 35, 50, 51, 62], "excluded_lines": []}, "extensions/flash_attention/flash_attention_sdpa_cuda.py": {"executed_lines": [1, 4, 5, 8, 18, 21, 24, 27], "summary": {"covered_lines": 8, "num_statements": 23, "percent_covered": 34.78260869565217, "percent_covered_display": "35", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [6, 10, 11, 13, 14, 15, 16, 19, 22, 25, 28, 30, 32, 47, 56], "excluded_lines": []}, "extensions/layernorm/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "extensions/layernorm/layernorm_cuda.py": {"executed_lines": [1, 2, 5, 6, 9, 13, 17, 20], "summary": {"covered_lines": 8, "num_statements": 18, "percent_covered": 44.44444444444444, "percent_covered_display": "44", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [7, 10, 11, 14, 15, 18, 21, 22, 23, 24], "excluded_lines": []}, "extensions/moe/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "extensions/moe/moe_cuda.py": {"executed_lines": [1, 2, 5, 6, 9, 13, 17, 20], "summary": {"covered_lines": 8, "num_statements": 18, "percent_covered": 44.44444444444444, "percent_covered_display": "44", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [7, 10, 11, 14, 15, 18, 21, 27, 28, 29], "excluded_lines": []}, "extensions/optimizer/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "extensions/optimizer/fused_optimizer_cuda.py": {"executed_lines": [1, 2, 5, 6, 9, 23, 27, 31], "summary": {"covered_lines": 8, "num_statements": 18, "percent_covered": 44.44444444444444, "percent_covered_display": "44", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [7, 10, 21, 24, 25, 28, 29, 32, 33, 34], "excluded_lines": []}, "extensions/softmax/__init__.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 3, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "extensions/softmax/scaled_masked_softmax_cuda.py": {"executed_lines": [1, 2, 5, 6, 9, 16, 19, 22], "summary": {"covered_lines": 8, "num_statements": 16, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [7, 10, 14, 17, 20, 23, 31, 32], "excluded_lines": []}, "extensions/softmax/scaled_upper_triangle_masked_softmax_cuda.py": {"executed_lines": [1, 2, 5, 6, 9, 12, 22, 25], "summary": {"covered_lines": 8, "num_statements": 17, "percent_covered": 47.05882352941177, "percent_covered_display": "47", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [7, 10, 13, 20, 23, 26, 32, 33, 34], "excluded_lines": []}, "extensions/triton_extension.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 14, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21], "excluded_lines": []}, "extensions/utils.py": {"executed_lines": [1, 2, 3, 4, 5, 8, 26, 45, 84, 104, 120, 142, 154, 193, 217], "summary": {"covered_lines": 15, "num_statements": 94, "percent_covered": 15.957446808510639, "percent_covered_display": "16", "missing_lines": 79, "excluded_lines": 0}, "missing_lines": [12, 13, 15, 16, 18, 19, 20, 22, 23, 33, 35, 36, 37, 38, 39, 42, 55, 57, 58, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 85, 86, 88, 89, 95, 96, 101, 111, 113, 114, 115, 116, 117, 132, 135, 136, 149, 151, 159, 162, 163, 175, 176, 178, 180, 181, 182, 184, 185, 187, 188, 189, 190, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 224, 226, 227, 228, 229], "excluded_lines": []}, "setup.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 50, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 15, 16, 19, 20, 23, 33, 34, 37, 44, 45, 48, 56, 57, 58, 59, 61, 62, 65, 66, 67, 70, 71, 72, 76, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 95, 97, 98, 100], "excluded_lines": []}, "tests/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/kit/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/kit/model_zoo/__init__.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 7, "percent_covered": 28.571428571428573, "percent_covered_display": "29", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [4, 5, 8, 30, 33], "excluded_lines": []}, "tests/kit/model_zoo/custom/__init__.py": {"executed_lines": [1, 2, 3, 4], "summary": {"covered_lines": 4, "num_statements": 4, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/kit/model_zoo/custom/base.py": {"executed_lines": [1, 2, 5, 6, 11, 14, 20, 24], "summary": {"covered_lines": 8, "num_statements": 19, "percent_covered": 42.10526315789474, "percent_covered_display": "42", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [7, 8, 9, 12, 15, 16, 18, 21, 22, 25, 26], "excluded_lines": []}, "tests/kit/model_zoo/custom/hanging_param_model.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 15, 21, 28, 32, 38, 42], "summary": {"covered_lines": 12, "num_statements": 25, "percent_covered": 48.0, "percent_covered_display": "48", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 19, 22, 23, 24, 25, 29, 33, 34, 35, 39], "excluded_lines": []}, "tests/kit/model_zoo/custom/nested_model.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 14, 18, 19, 25, 33, 37, 43, 47], "summary": {"covered_lines": 15, "num_statements": 32, "percent_covered": 46.875, "percent_covered_display": "47", "missing_lines": 17, "excluded_lines": 0}, "missing_lines": [11, 12, 15, 20, 21, 22, 23, 26, 27, 28, 29, 30, 34, 38, 39, 40, 44], "excluded_lines": []}, "tests/kit/model_zoo/custom/repeated_computed_layers.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 15, 22, 28, 32, 38, 42], "summary": {"covered_lines": 12, "num_statements": 25, "percent_covered": 48.0, "percent_covered_display": "48", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 19, 20, 23, 24, 25, 29, 33, 34, 35, 39], "excluded_lines": []}, "tests/kit/model_zoo/custom/simple_net.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 14, 23, 33, 37, 43, 47], "summary": {"covered_lines": 12, "num_statements": 31, "percent_covered": 38.70967741935484, "percent_covered_display": "39", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 34, 38, 39, 40, 44], "excluded_lines": []}, "tests/kit/model_zoo/diffusers/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/kit/model_zoo/diffusers/diffusers.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 35, "percent_covered": 5.714285714285714, "percent_covered_display": "6", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 34, 35, 36, 37, 40, 41, 42, 45, 52, 56, 63, 70, 77], "excluded_lines": []}, "tests/kit/model_zoo/executor.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 18, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 10, 25, 26, 27, 28, 30, 31, 34, 53, 54, 55, 57, 58], "excluded_lines": []}, "tests/kit/model_zoo/registry.py": {"executed_lines": [2, 3, 5, 8, 9, 10, 18, 19, 22, 23, 27, 62, 64, 105], "summary": {"covered_lines": 12, "num_statements": 35, "percent_covered": 34.285714285714285, "percent_covered_display": "34", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [73, 75, 76, 78, 79, 81, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102], "excluded_lines": []}, "tests/kit/model_zoo/timm/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "tests/kit/model_zoo/timm/timm.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 39, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 39, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 9, 10, 12, 15, 21, 24, 30, 36, 39, 45, 51, 57, 61, 68, 71, 77, 83, 89, 92, 98, 104, 107, 113, 119, 122, 125, 128, 134, 140, 143, 150, 157, 164, 171, 178, 185], "excluded_lines": []}, "tests/kit/model_zoo/torchaudio/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "tests/kit/model_zoo/torchaudio/torchaudio.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 50, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 24, 26, 35, 37, 45, 53, 54, 55, 56, 59, 67, 74, 82, 83, 84, 85, 88, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 130, 131, 132, 133, 134, 137, 145], "excluded_lines": []}, "tests/kit/model_zoo/torchrec/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "tests/kit/model_zoo/torchrec/torchrec.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 58, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 7, 9, 11, 12, 15, 16, 17, 21, 22, 25, 28, 31, 32, 33, 36, 37, 38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 56, 58, 59, 60, 63, 64, 65, 68, 69, 70, 73, 74, 75, 78, 79, 80, 83, 90, 97, 104, 111, 118, 122, 129, 136, 143], "excluded_lines": []}, "tests/kit/model_zoo/torchvision/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "tests/kit/model_zoo/torchvision/torchvision.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 8, 9, 12, 16, 17, 20, 21, 22, 24, 37, 40, 43, 47, 50, 56, 63, 69, 75, 81, 87, 93, 96, 102, 108, 114, 121, 124, 131, 132, 138, 146, 147, 153], "excluded_lines": []}, "tests/kit/model_zoo/transformers/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 18, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19], "excluded_lines": []}, "tests/kit/model_zoo/transformers/albert.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 37, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 37, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 9, 10, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 29, 33, 40, 47, 54, 61, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 91, 98], "excluded_lines": []}, "tests/kit/model_zoo/transformers/bert.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 50, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 12, 21, 22, 23, 24, 27, 30, 31, 32, 35, 38, 39, 40, 43, 46, 47, 48, 51, 54, 55, 56, 59, 70, 160, 250, 340, 342, 345, 348, 349, 350, 351, 352, 353, 357, 361, 364, 366, 376, 384, 392, 400, 408, 416, 424, 432, 440], "excluded_lines": []}, "tests/kit/model_zoo/transformers/blip2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 21, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 12, 27, 28, 29, 30, 31, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 59], "excluded_lines": []}, "tests/kit/model_zoo/transformers/bloom.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 11, 19, 20, 21, 24, 27, 28, 29, 32, 35, 36, 37, 40, 42, 43, 44, 47, 55, 59, 60, 61, 62, 68, 71, 74, 75, 76, 78, 83, 91, 99, 107, 115], "excluded_lines": []}, "tests/kit/model_zoo/transformers/chatglm2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 25, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 12, 13, 14, 15, 18, 21, 22, 23, 24, 28, 31, 34, 36, 53, 70, 71, 72, 73, 74, 75, 78], "excluded_lines": []}, "tests/kit/model_zoo/transformers/falcon.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 11, 19, 20, 21, 24, 27, 28, 29, 32, 35, 36, 37, 40, 42, 43, 44, 47, 48, 52, 53, 54, 55, 61, 64, 67, 68, 69, 71, 83, 92, 101, 109, 117], "excluded_lines": []}, "tests/kit/model_zoo/transformers/gpt.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 51, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 51, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 13, 23, 30, 38, 41, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 60, 63, 64, 71, 74, 76, 77, 78, 81, 82, 83, 84, 91, 96, 97, 98, 99, 100, 102, 109, 113, 116, 119, 121, 136, 137, 140, 148, 156, 164, 172, 180], "excluded_lines": []}, "tests/kit/model_zoo/transformers/gptj.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 13, 22, 23, 24, 27, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 54, 57, 60, 62, 77, 78, 81, 89, 97, 105], "excluded_lines": []}, "tests/kit/model_zoo/transformers/llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 9, 10, 11, 13, 18, 30, 37, 44, 47, 48, 49, 50, 51, 54, 57, 58, 59, 61, 69, 70, 76, 84, 92], "excluded_lines": []}, "tests/kit/model_zoo/transformers/mistral.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 26, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 12, 21, 22, 23, 26, 29, 30, 31, 34, 36, 37, 38, 42, 45, 48, 49, 51, 55, 56, 58, 66, 74], "excluded_lines": []}, "tests/kit/model_zoo/transformers/opt.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 31, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 9, 10, 13, 14, 15, 16, 19, 22, 23, 24, 25, 28, 31, 32, 33, 34, 37, 40, 41, 42, 43, 46, 47, 50, 51, 61, 69, 77], "excluded_lines": []}, "tests/kit/model_zoo/transformers/sam.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 14, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 12, 27, 28, 29, 30, 31, 40, 43, 45, 46, 49], "excluded_lines": []}, "tests/kit/model_zoo/transformers/t5.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 25, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 12, 19, 20, 21, 24, 28, 29, 30, 31, 34, 37, 38, 39, 40, 44, 47, 48, 49, 52, 58, 66, 74], "excluded_lines": []}, "tests/kit/model_zoo/transformers/vit.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 24, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 10, 14, 15, 16, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 34, 37, 38, 39, 45, 54, 63], "excluded_lines": []}, "tests/kit/model_zoo/transformers/whisper.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 12, 25, 26, 27, 30, 35, 36, 37, 40, 46, 47, 48, 49, 53, 56, 57, 59, 72, 81, 90], "excluded_lines": []}, "tests/test_analyzer/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_analyzer/test_fx/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_analyzer/test_fx/test_bias_addition.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 76, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 30, 34, 35, 36, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110], "excluded_lines": []}, "tests/test_analyzer/test_fx/test_mod_dir.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 49, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 49, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 25, 28, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68], "excluded_lines": []}, "tests/test_analyzer/test_fx/test_nested_ckpt.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 42, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 35, 36, 38, 39, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57], "excluded_lines": []}, "tests/test_analyzer/test_fx/test_shape_prop.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 46, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 23, 24, 25, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 65, 66, 67], "excluded_lines": []}, "tests/test_analyzer/test_fx/test_symbolic_profile.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 50, 51, 52], "excluded_lines": []}, "tests/test_analyzer/test_fx/zoo.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 4, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [1, 2, 5, 26], "excluded_lines": []}, "tests/test_analyzer/test_subclasses/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_analyzer/test_subclasses/test_aten.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 32, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 32, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 9, 10, 11, 12, 14, 16, 64, 65, 68, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 95, 96], "excluded_lines": []}, "tests/test_analyzer/test_subclasses/test_flop_tensor.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 29, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 45, 46, 47, 48, 49, 50, 53, 54, 55], "excluded_lines": []}, "tests/test_analyzer/test_subclasses/test_meta_mode.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 31, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 15, 16, 19, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 46, 47], "excluded_lines": []}, "tests/test_auto_parallel/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_auto_parallel/test_pass/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_auto_parallel/test_pass/test_node_converting_pass.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 43, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54], "excluded_lines": []}, "tests/test_auto_parallel/test_pass/test_size_value_converting_pass.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 56, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_bias_addition_forward.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 62, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 62, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 26, 29, 30, 31, 32, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 86, 87], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_broadcast.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 37, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 37, "excluded_lines": 0}, "missing_lines": [1, 3, 8, 9, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 41, 42, 44, 45, 48, 50, 51, 54, 57, 59, 61, 62], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_checkpoint.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 49, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 49, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 48, 49, 52, 53, 54, 55, 59, 65, 66, 67, 68, 69, 70, 73, 74], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_compatibility_with_ddp.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 75, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 89, 90, 92, 93, 95, 98, 99, 100, 101, 102, 103, 106, 107], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_compatibility_with_gemini.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 77, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 77, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 105, 106, 107, 108, 109, 110, 113, 114], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_find_repeat_block.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 77, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 77, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 8, 11, 12, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 36, 37, 38, 39, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_gpt/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_gpt/gpt_modules.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 144, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 144, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 22, 23, 24, 27, 35, 36, 37, 39, 40, 46, 48, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 64, 66, 67, 69, 70, 73, 74, 77, 78, 79, 81, 83, 85, 88, 92, 93, 95, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 116, 121, 122, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 147, 149, 150, 156, 157, 158, 159, 161, 163, 166, 167, 169, 170, 172, 174, 175, 177, 178, 179, 182, 184, 190, 191, 192, 194, 196, 197, 199, 200, 203, 204, 205, 206, 212, 213, 214, 217, 221, 223, 224, 225, 227, 229, 231, 234, 235, 237, 238, 239, 240, 243, 244, 247, 249, 254, 259, 261, 264, 265, 266, 267, 269, 270, 271, 273], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_gpt/test_runtime_with_gpt_modules.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 135, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 135, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 14, 16, 17, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 80, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 97, 98, 102, 103, 108, 112, 113, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131, 132, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 199, 200], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_gpt/test_solver_with_gpt_module.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 66, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 66, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 34, 36, 37, 38, 41, 42, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 87], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_liveness_analysis.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 43, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 48, 49, 50, 53, 54, 55, 58, 59], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_addbmm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 158, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 158, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 24, 25, 28, 29, 30, 31, 33, 34, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 58, 59, 67, 76, 84, 86, 87, 90, 93, 95, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 126, 129, 130, 133, 134, 137, 138, 140, 141, 142, 143, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 169, 178, 187, 195, 196, 197, 200, 203, 205, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 232, 234, 235, 236, 237, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 262, 263, 264, 265, 266, 267, 268, 269, 270, 279, 280, 281], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_addmm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 110, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 110, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 65, 67, 69, 71, 73, 75, 76, 77, 78, 80, 82, 92, 103, 104, 105, 107, 108, 109, 112, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 133, 134, 135, 138, 139, 142, 143, 146, 147, 150, 151, 154, 155, 158, 161, 164, 167, 169, 171, 172, 173, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 190, 191], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_batch_norm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 64, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 24, 25, 26, 28, 31, 32, 40, 45, 46, 47, 48, 49, 50, 53, 56, 58, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 87, 88, 91, 94, 110, 111, 112, 113, 114, 117, 118], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_bias_linear_function_node.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 99, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 99, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 45, 47, 49, 51, 52, 62, 70, 71, 72, 73, 75, 76, 79, 81, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 125, 126, 129, 130, 133, 134, 137, 138, 139, 142, 145, 148, 150, 152, 153, 154, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_bias_linear_module_node.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 96, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 96, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 41, 43, 45, 47, 48, 58, 59, 60, 61, 62, 64, 65, 68, 70, 72, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 114, 115, 118, 119, 122, 123, 126, 127, 128, 131, 134, 137, 139, 141, 142, 143, 146, 147, 148, 151, 152, 153, 154, 155, 158, 159], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_binary_elementwise_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 168, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 168, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 44, 53, 54, 55, 56, 57, 59, 60, 63, 66, 68, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 161, 163, 165, 166, 174, 175, 176, 177, 178, 180, 181, 183, 184, 187, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 229, 230, 231, 232, 233, 234, 235, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 261], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_bmm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 137, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 137, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 41, 43, 44, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 94, 97, 100, 101, 104, 105, 108, 109, 111, 112, 113, 114, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 136, 138, 139, 147, 148, 149, 150, 151, 152, 153, 156, 159, 161, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 190, 191, 192, 193, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_conv_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 188, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 188, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 25, 27, 28, 29, 32, 34, 35, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 60, 61, 63, 65, 66, 67, 69, 71, 72, 73, 75, 76, 78, 79, 80, 82, 84, 85, 87, 88, 91, 92, 95, 96, 99, 100, 103, 104, 107, 108, 111, 112, 115, 118, 121, 124, 126, 127, 128, 129, 131, 132, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 183, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 203, 206, 208, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 242, 243, 246, 247, 250, 251, 254, 255, 258, 259, 262, 263, 266, 269, 272, 275, 277, 278, 279, 280, 282, 283, 286, 287, 288, 289, 291, 292, 293, 296, 297, 301, 302, 303, 306, 307, 311, 312, 313, 316, 317, 318], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_default_reshape_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 53, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 53, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 35, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 55, 56, 57, 61, 64, 66, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 83, 86, 87], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_embedding_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 175, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 175, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 20, 21, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 42, 43, 45, 46, 47, 50, 52, 53, 62, 63, 64, 65, 66, 67, 68, 71, 74, 76, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126, 127, 130, 132, 133, 134, 135, 138, 139, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 176, 182, 186, 187, 188, 190, 191, 194, 199, 201, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 229, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 248, 249, 252, 253, 254, 257, 259, 260, 261, 262, 265, 266, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 283, 284, 285], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_getattr_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 51, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 51, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 48, 51, 53, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_getitem_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 112, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 112, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 32, 33, 34, 36, 38, 39, 41, 43, 45, 46, 47, 49, 59, 60, 64, 66, 67, 68, 69, 70, 71, 74, 77, 78, 79, 83, 85, 87, 90, 93, 96, 97, 98, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 125, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 143, 149, 150, 151, 154, 155, 156, 159, 160, 163, 165, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 184, 187, 188, 189], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_layer_norm_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 67, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 67, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 27, 29, 31, 33, 34, 42, 47, 48, 49, 50, 52, 53, 56, 59, 61, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 86, 87, 90, 91, 94, 97, 100, 101, 102, 103, 104, 107, 108], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_linear_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 200, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 200, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 42, 43, 52, 53, 54, 55, 56, 58, 59, 62, 65, 67, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 121, 122, 125, 126, 129, 130, 133, 134, 137, 140, 143, 145, 147, 148, 149, 151, 152, 155, 156, 157, 159, 160, 163, 164, 165, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 186, 188, 190, 192, 193, 202, 203, 204, 205, 206, 208, 209, 211, 212, 215, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 262, 263, 264, 265, 268, 269, 272, 273, 276, 277, 280, 281, 284, 287, 290, 292, 294, 295, 296, 298, 299, 302, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 321, 329, 330], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_matmul_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 94, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 94, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 14, 20, 21, 24, 25, 26, 29, 30, 31, 50, 51, 54, 55, 56, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 80, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 98, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 122, 125, 126, 128, 130, 131, 132, 133, 138, 139, 140, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_norm_pooling_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 41, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 22, 23, 25, 26, 27, 29, 30, 31, 32, 35, 37, 39, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 60, 61], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_output_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 44, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 44, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 52, 54, 56, 59, 61, 62, 63, 64, 65, 67, 70, 71], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_permute_and_transpose_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 245, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 245, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 29, 30, 32, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 68, 69, 70, 72, 74, 76, 77, 78, 80, 89, 90, 97, 101, 103, 110, 114, 116, 117, 119, 120, 121, 122, 125, 126, 129, 130, 132, 133, 134, 137, 138, 140, 141, 145, 149, 152, 154, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 333, 334], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_placeholder_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 50, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44, 51, 54, 56, 57, 59, 60, 62, 64, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 81], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_shard_option.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 72, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 42, 43, 45, 47, 50, 52, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 80, 83, 85, 87, 88, 91, 92, 94, 96, 97, 100, 101, 104, 107, 108, 109, 111, 112, 115, 116], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_softmax_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 124, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 124, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 38, 40, 42, 43, 44, 46, 55, 63, 67, 69, 70, 72, 73, 74, 75, 78, 79, 82, 83, 85, 89, 92, 94, 97, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 178, 179], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_split_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 185, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 185, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 59, 61, 63, 64, 65, 67, 76, 77, 84, 88, 90, 97, 101, 103, 104, 106, 107, 108, 109, 112, 113, 116, 117, 119, 120, 121, 124, 125, 127, 129, 132, 134, 137, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_sum_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 175, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 175, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 48, 58, 66, 70, 71, 72, 74, 75, 76, 77, 81, 82, 85, 86, 88, 90, 93, 94, 97, 99, 102, 104, 105, 106, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_tensor_constructor.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 44, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 44, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 35, 36, 37, 38, 39, 41, 42, 43, 44, 47, 50, 52, 55, 56, 58, 59, 60, 61, 63, 64, 66, 69, 70], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_unary_element_wise_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 54, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 36, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 56, 57, 58, 62, 65, 67, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 87, 88], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_view_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 185, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 185, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 58, 60, 62, 63, 64, 66, 75, 76, 83, 84, 86, 93, 97, 99, 100, 102, 103, 104, 105, 108, 109, 112, 113, 115, 116, 117, 120, 121, 123, 125, 128, 130, 133, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 254, 255], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/test_where_handler.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 59, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 34, 39, 40, 41, 42, 44, 45, 46, 47, 50, 53, 55, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 90, 91], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_node_handler/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 124, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 124, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 26, 27, 28, 29, 31, 32, 33, 35, 37, 40, 41, 42, 44, 46, 48, 49, 50, 52, 54, 57, 58, 59, 61, 63, 66, 76, 77, 79, 80, 81, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 130, 137, 138, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 167, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 184, 195, 196, 197, 198, 200, 201, 202], "excluded_lines": []}, "tests/test_auto_parallel/test_tensor_shard/test_solver_with_resnet_v2.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 57, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 57, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 24, 25, 27, 28, 29, 31, 56, 57, 58, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97], "excluded_lines": []}, "tests/test_booster/test_accelerator.py": {"executed_lines": [1, 3, 4, 7, 8, 9], "summary": {"covered_lines": 6, "num_statements": 11, "percent_covered": 54.54545454545455, "percent_covered_display": "55", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 13, 14], "excluded_lines": []}, "tests/test_booster/test_mixed_precision/test_fp16_torch.py": {"executed_lines": [1, 2, 4, 5, 6, 7], "summary": {"covered_lines": 6, "num_statements": 30, "percent_covered": 20.0, "percent_covered_display": "20", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [10, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40], "excluded_lines": []}, "tests/test_booster/test_plugin/test_3d_plugin.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "summary": {"covered_lines": 17, "num_statements": 119, "percent_covered": 14.285714285714286, "percent_covered_display": "14", "missing_lines": 102, "excluded_lines": 0}, "missing_lines": [22, 23, 24, 25, 26, 27, 30, 32, 33, 35, 36, 43, 44, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 67, 69, 71, 72, 73, 74, 75, 77, 78, 80, 81, 84, 85, 91, 92, 93, 95, 96, 99, 102, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 118, 193, 194, 195, 196, 197, 198, 200, 210, 212, 217, 219, 221, 222, 223, 225, 226, 227, 229, 230, 232, 234, 235, 236, 237, 245, 246, 247, 249, 251, 252, 255, 256, 259, 262, 263, 266, 268, 269, 270, 273, 274, 275, 278, 279], "excluded_lines": []}, "tests/test_booster/test_plugin/test_dp_plugin_base.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 20, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 61, 86, 92, 93], "summary": {"covered_lines": 28, "num_statements": 53, "percent_covered": 52.83018867924528, "percent_covered_display": "53", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [28, 31, 34, 37, 40, 43, 46, 49, 52, 55, 58, 62, 65, 66, 69, 70, 72, 73, 75, 77, 80, 81, 88, 89, 94], "excluded_lines": []}, "tests/test_booster/test_plugin/test_gemini_plugin.py": {"executed_lines": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "summary": {"covered_lines": 13, "num_statements": 80, "percent_covered": 16.25, "percent_covered_display": "16", "missing_lines": 67, "excluded_lines": 0}, "missing_lines": [18, 19, 20, 21, 22, 24, 25, 26, 27, 34, 35, 36, 37, 38, 39, 41, 45, 47, 48, 50, 51, 52, 53, 55, 56, 58, 59, 60, 62, 69, 70, 71, 72, 73, 81, 82, 83, 85, 86, 88, 90, 101, 103, 123, 125, 141, 144, 145, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 162, 164, 165, 168, 169, 170, 173, 174], "excluded_lines": []}, "tests/test_booster/test_plugin/test_low_level_zero_plugin.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15], "summary": {"covered_lines": 11, "num_statements": 94, "percent_covered": 11.702127659574469, "percent_covered_display": "12", "missing_lines": 83, "excluded_lines": 0}, "missing_lines": [18, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 44, 46, 47, 48, 49, 51, 52, 54, 55, 59, 60, 67, 68, 69, 70, 72, 73, 75, 77, 79, 80, 81, 82, 84, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 121, 122, 123, 125, 126, 127, 128, 131, 133, 134, 135, 138, 139, 140, 143, 144], "excluded_lines": []}, "tests/test_booster/test_plugin/test_torch_ddp_plugin.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14], "summary": {"covered_lines": 12, "num_statements": 82, "percent_covered": 14.634146341463415, "percent_covered_display": "15", "missing_lines": 70, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 30, 31, 33, 34, 35, 36, 38, 39, 40, 43, 44, 45, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 61, 62, 65, 66, 67, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 93, 95, 96, 98, 100, 101, 102, 103, 106, 107, 110, 112, 113, 114, 117, 118, 119], "excluded_lines": []}, "tests/test_booster/test_plugin/test_torch_fsdp_plugin.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 9, 10, 11, 13, 14, 15], "summary": {"covered_lines": 12, "num_statements": 55, "percent_covered": 21.818181818181817, "percent_covered_display": "22", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 55, 57, 58, 68, 69, 70, 71, 74, 76, 77, 80, 81, 82, 83, 86, 87], "excluded_lines": []}, "tests/test_checkpoint_io/test_gemini_checkpoint_io.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 21], "summary": {"covered_lines": 13, "num_statements": 121, "percent_covered": 10.743801652892563, "percent_covered_display": "11", "missing_lines": 108, "excluded_lines": 0}, "missing_lines": [23, 29, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 56, 57, 65, 66, 67, 69, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 102, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 131, 132, 136, 137, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 189, 190], "excluded_lines": []}, "tests/test_checkpoint_io/test_gemini_torch_compability.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 18], "summary": {"covered_lines": 11, "num_statements": 116, "percent_covered": 9.482758620689655, "percent_covered_display": "9", "missing_lines": 105, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 59, 62, 69, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 125, 128, 135, 136, 137, 141, 142, 143, 144, 147, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176], "excluded_lines": []}, "tests/test_checkpoint_io/test_general_checkpoint_io.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 20, 21, 22, 68, 69, 109, 167], "summary": {"covered_lines": 15, "num_statements": 112, "percent_covered": 13.392857142857142, "percent_covered_display": "13", "missing_lines": 97, "excluded_lines": 0}, "missing_lines": [24, 25, 26, 29, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 56, 59, 60, 61, 64, 65, 71, 72, 74, 77, 78, 79, 80, 83, 84, 86, 88, 89, 92, 94, 95, 98, 99, 101, 102, 105, 106, 111, 112, 115, 118, 119, 120, 121, 124, 125, 128, 130, 131, 134, 135, 137, 138, 141, 142, 145, 146, 147, 148, 149, 152, 153, 156, 157, 159, 160, 163, 164, 169, 170, 175, 178, 179, 180, 181, 184, 185, 188, 190, 191, 194, 195, 199, 200, 203, 204], "excluded_lines": []}, "tests/test_checkpoint_io/test_hybrid_parallel_plugin_checkpoint_io.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 21], "summary": {"covered_lines": 13, "num_statements": 94, "percent_covered": 13.829787234042554, "percent_covered_display": "14", "missing_lines": 81, "excluded_lines": 0}, "missing_lines": [23, 24, 35, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 117, 118, 119, 120, 122, 123, 126, 127, 129, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143, 144, 147, 148], "excluded_lines": []}, "tests/test_checkpoint_io/test_low_level_zero_checkpoint_io.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 21, 22], "summary": {"covered_lines": 14, "num_statements": 135, "percent_covered": 10.37037037037037, "percent_covered_display": "10", "missing_lines": 121, "excluded_lines": 0}, "missing_lines": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 128, 129, 131, 133, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 181, 182, 183, 184, 187, 188], "excluded_lines": []}, "tests/test_checkpoint_io/test_plugins_huggingface_compatibility.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 17], "summary": {"covered_lines": 10, "num_statements": 55, "percent_covered": 18.181818181818183, "percent_covered_display": "18", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 66, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80], "excluded_lines": []}, "tests/test_checkpoint_io/test_torch_ddp_checkpoint_io.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 17, 63, 68, 69], "summary": {"covered_lines": 17, "num_statements": 55, "percent_covered": 30.90909090909091, "percent_covered_display": "31", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 54, 55, 57, 58, 59, 60, 64, 65, 70], "excluded_lines": []}, "tests/test_checkpoint_io/test_torch_fsdp_checkpoint_io.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 18, 46, 142, 148, 149, 150], "summary": {"covered_lines": 18, "num_statements": 105, "percent_covered": 17.142857142857142, "percent_covered_display": "17", "missing_lines": 87, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 73, 75, 76, 78, 80, 82, 84, 86, 87, 88, 89, 91, 92, 94, 96, 98, 99, 100, 101, 103, 104, 105, 107, 109, 110, 112, 113, 115, 117, 119, 121, 122, 127, 128, 130, 131, 133, 134, 136, 137, 138, 139, 144, 145, 151], "excluded_lines": []}, "tests/test_checkpoint_io/utils.py": {"executed_lines": [1, 2, 3, 5, 8, 9], "summary": {"covered_lines": 6, "num_statements": 14, "percent_covered": 42.857142857142854, "percent_covered_display": "43", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [13, 14, 15, 16, 17, 18, 19, 21], "excluded_lines": []}, "tests/test_cluster/test_device_mesh_manager.py": {"executed_lines": [1, 2, 3, 4, 7, 27, 31], "summary": {"covered_lines": 7, "num_statements": 16, "percent_covered": 43.75, "percent_covered_display": "44", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [8, 9, 10, 17, 21, 23, 24, 28, 32], "excluded_lines": []}, "tests/test_cluster/test_process_group_mesh.py": {"executed_lines": [1, 2, 4, 5, 6, 9, 60, 178, 191, 192, 196], "summary": {"covered_lines": 11, "num_statements": 95, "percent_covered": 11.578947368421053, "percent_covered_display": "12", "missing_lines": 84, "excluded_lines": 0}, "missing_lines": [10, 11, 13, 14, 17, 20, 21, 24, 27, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 69, 75, 81, 87, 93, 99, 105, 112, 114, 115, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 148, 149, 150, 151, 156, 157, 160, 161, 166, 167, 168, 169, 174, 175, 179, 188, 193, 197], "excluded_lines": []}, "tests/test_config/test_load_config.py": {"executed_lines": [4, 6, 9], "summary": {"covered_lines": 3, "num_statements": 8, "percent_covered": 37.5, "percent_covered_display": "38", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [10, 11, 13, 14, 15], "excluded_lines": []}, "tests/test_device/test_alpha_beta.py": {"executed_lines": [1, 3, 4, 5, 6, 9, 18, 19, 20, 21, 22, 26], "summary": {"covered_lines": 12, "num_statements": 20, "percent_covered": 60.0, "percent_covered_display": "60", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 13, 14, 15, 23, 27], "excluded_lines": []}, "tests/test_device/test_device_mesh.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 10, 23, 39, 77, 81, 82, 83, 87], "summary": {"covered_lines": 14, "num_statements": 58, "percent_covered": 24.137931034482758, "percent_covered_display": "24", "missing_lines": 44, "excluded_lines": 0}, "missing_lines": [11, 12, 17, 18, 19, 20, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 46, 47, 48, 49, 52, 54, 55, 57, 59, 60, 62, 64, 67, 68, 69, 70, 71, 72, 73, 74, 78, 84, 88, 89], "excluded_lines": []}, "tests/test_device/test_extract_alpha_beta.py": {"executed_lines": [1, 3, 4, 5, 6, 9, 21, 22, 23, 24, 25, 29], "summary": {"covered_lines": 12, "num_statements": 22, "percent_covered": 54.54545454545455, "percent_covered_display": "55", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 14, 15, 16, 17, 18, 26, 30], "excluded_lines": []}, "tests/test_device/test_init_logical_pg.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 11, 30, 31, 32, 36], "summary": {"covered_lines": 12, "num_statements": 25, "percent_covered": 48.0, "percent_covered_display": "48", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [12, 14, 15, 17, 18, 21, 23, 24, 25, 26, 27, 33, 37], "excluded_lines": []}, "tests/test_device/test_search_logical_device_mesh.py": {"executed_lines": [1, 3, 4, 5, 6, 9, 21, 22, 23, 24, 25, 29], "summary": {"covered_lines": 12, "num_statements": 22, "percent_covered": 54.54545454545455, "percent_covered_display": "55", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 13, 15, 16, 17, 18, 26, 30], "excluded_lines": []}, "tests/test_gptq/test_gptq_linear.py": {"executed_lines": [1, 2, 3, 5, 6, 11, 12, 19, 20, 21, 23, 25, 26, 27, 31, 32, 33, 35], "summary": {"covered_lines": 18, "num_statements": 86, "percent_covered": 20.930232558139537, "percent_covered_display": "21", "missing_lines": 68, "excluded_lines": 0}, "missing_lines": [7, 8, 9, 13, 14, 16, 18, 29, 30, 37, 38, 39, 40, 41, 44, 52, 54, 55, 57, 58, 61, 64, 66, 68, 69, 70, 71, 74, 78, 79, 80, 81, 82, 84, 85, 87, 89, 91, 99, 101, 102, 104, 106, 107, 108, 109, 111, 113, 114, 115, 116, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 143, 144], "excluded_lines": []}, "tests/test_infer/test_hybrid_bloom.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10], "summary": {"covered_lines": 8, "num_statements": 81, "percent_covered": 9.876543209876543, "percent_covered_display": "10", "missing_lines": 73, "excluded_lines": 0}, "missing_lines": [11, 13, 14, 16, 17, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 34, 35, 39, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 102, 103, 104, 107, 111, 112, 113, 114, 115, 116, 117, 120, 121], "excluded_lines": []}, "tests/test_infer/test_hybrid_chatglm2.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9], "summary": {"covered_lines": 7, "num_statements": 83, "percent_covered": 8.433734939759036, "percent_covered_display": "8", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [10, 11, 12, 14, 15, 17, 18, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 35, 36, 45, 47, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 104, 105, 106, 107, 110, 111, 112, 115, 119, 120, 121, 122, 123, 124, 125, 128, 129], "excluded_lines": []}, "tests/test_infer/test_hybrid_llama.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10], "summary": {"covered_lines": 8, "num_statements": 82, "percent_covered": 9.75609756097561, "percent_covered_display": "10", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [11, 13, 15, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 37, 38, 44, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 103, 104, 107, 108, 109, 112, 116, 117, 118, 119, 120, 121, 122, 125, 126], "excluded_lines": []}, "tests/test_infer/test_kvcache_manager.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18], "summary": {"covered_lines": 14, "num_statements": 44, "percent_covered": 31.818181818181817, "percent_covered_display": "32", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 65, 66], "excluded_lines": []}, "tests/test_lazy/lazy_init_utils.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 21, 27, 41, 69, 93], "summary": {"covered_lines": 18, "num_statements": 72, "percent_covered": 25.0, "percent_covered_display": "25", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [22, 23, 24, 28, 29, 31, 33, 34, 35, 37, 38, 47, 49, 50, 52, 53, 54, 57, 58, 60, 62, 63, 64, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109], "excluded_lines": []}, "tests/test_lazy/test_from_pretrained.py": {"executed_lines": [1, 3, 5, 6, 9, 30], "summary": {"covered_lines": 6, "num_statements": 22, "percent_covered": 27.272727272727273, "percent_covered_display": "27", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 31], "excluded_lines": []}, "tests/test_lazy/test_models.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 14, "percent_covered": 21.428571428571427, "percent_covered_display": "21", "missing_lines": 11, "excluded_lines": 0}, "missing_lines": [7, 8, 16, 17, 18, 19, 21, 24, 25, 28, 29], "excluded_lines": []}, "tests/test_lazy/test_ops.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 12, 13, 63], "summary": {"covered_lines": 10, "num_statements": 56, "percent_covered": 17.857142857142858, "percent_covered_display": "18", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64], "excluded_lines": []}, "tests/test_lora/test_lora.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14], "summary": {"covered_lines": 12, "num_statements": 68, "percent_covered": 17.647058823529413, "percent_covered_display": "18", "missing_lines": 56, "excluded_lines": 0}, "missing_lines": [15, 18, 19, 20, 21, 23, 24, 34, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 55, 56, 58, 61, 62, 64, 65, 69, 70, 71, 73, 74, 75, 77, 78, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106], "excluded_lines": []}, "tests/test_moe/moe_utils.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 22, 23, 41, 50, 51, 52, 63, 66, 87, 102, 119, 154], "summary": {"covered_lines": 24, "num_statements": 99, "percent_covered": 24.242424242424242, "percent_covered_display": "24", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 24, 25, 26, 27, 30, 32, 33, 34, 35, 37, 38, 39, 42, 44, 45, 47, 64, 71, 72, 77, 78, 80, 81, 82, 89, 90, 91, 94, 95, 96, 97, 103, 104, 105, 106, 107, 109, 110, 112, 113, 115, 116, 126, 129, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167], "excluded_lines": []}, "tests/test_moe/test_grad_handler.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 17, 73, 74, 75, 79], "summary": {"covered_lines": 17, "num_statements": 51, "percent_covered": 33.333333333333336, "percent_covered_display": "33", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [18, 27, 28, 29, 30, 31, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 76, 80], "excluded_lines": []}, "tests/test_moe/test_kernel.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 15, 19, 87, 88, 89, 90, 91, 92, 93, 97], "summary": {"covered_lines": 20, "num_statements": 57, "percent_covered": 35.08771929824562, "percent_covered_display": "35", "missing_lines": 37, "excluded_lines": 0}, "missing_lines": [16, 21, 23, 24, 26, 27, 28, 31, 35, 42, 43, 44, 47, 48, 49, 50, 51, 54, 55, 58, 59, 61, 62, 64, 65, 67, 70, 71, 72, 74, 75, 77, 80, 81, 83, 94, 98], "excluded_lines": []}, "tests/test_moe/test_moe_checkpoint.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 24, 25, 26, 29, 39, 71, 86, 134, 179, 191, 192, 193, 194, 195, 196, 200], "summary": {"covered_lines": 30, "num_statements": 100, "percent_covered": 30.0, "percent_covered_display": "30", "missing_lines": 70, "excluded_lines": 0}, "missing_lines": [30, 31, 32, 42, 43, 44, 45, 46, 54, 55, 57, 58, 59, 61, 62, 64, 65, 67, 68, 72, 82, 83, 87, 88, 89, 91, 92, 100, 101, 109, 110, 119, 120, 129, 130, 131, 135, 136, 137, 141, 142, 144, 145, 147, 148, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 166, 167, 169, 170, 172, 173, 174, 175, 176, 180, 188, 197, 201], "excluded_lines": []}, "tests/test_moe/test_moe_ep_tp.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 51, 93, 128, 219, 220, 221, 222, 223, 230, 231, 235], "summary": {"covered_lines": 26, "num_statements": 141, "percent_covered": 18.43971631205674, "percent_covered_display": "18", "missing_lines": 115, "excluded_lines": 0}, "missing_lines": [26, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 44, 45, 46, 48, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 100, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 161, 163, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 188, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 232, 236], "excluded_lines": []}, "tests/test_moe/test_moe_group.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 16, 61, 73, 74, 75, 76, 80], "summary": {"covered_lines": 18, "num_statements": 50, "percent_covered": 36.0, "percent_covered_display": "36", "missing_lines": 32, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 41, 42, 43, 45, 46, 48, 49, 50, 53, 54, 57, 58, 62, 70, 77, 81, 82], "excluded_lines": []}, "tests/test_moe/test_moe_hybrid_zero.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 15, 32, 83, 89, 90, 91, 92, 96], "summary": {"covered_lines": 19, "num_statements": 68, "percent_covered": 27.941176470588236, "percent_covered_display": "28", "missing_lines": 49, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 19, 20, 22, 23, 25, 26, 28, 29, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 78, 84, 85, 86, 93, 97], "excluded_lines": []}, "tests/test_moe/test_moe_load_balance.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 26, 43, 99, 165, 180, 181, 182, 183, 187], "summary": {"covered_lines": 22, "num_statements": 125, "percent_covered": 17.6, "percent_covered_display": "18", "missing_lines": 103, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 85, 88, 89, 92, 93, 94, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 151, 154, 155, 158, 159, 160, 162, 166, 174, 175, 176, 177, 184, 188], "excluded_lines": []}, "tests/test_moe/test_moe_router.py": {"executed_lines": [1, 2, 4, 7, 15, 22, 46], "summary": {"covered_lines": 7, "num_statements": 25, "percent_covered": 28.0, "percent_covered_display": "28", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 47], "excluded_lines": []}, "tests/test_moe/test_moe_zero_fwd_bwd.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 63, 69, 70, 71, 72, 73, 77], "summary": {"covered_lines": 17, "num_statements": 58, "percent_covered": 29.310344827586206, "percent_covered_display": "29", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 57, 58, 59, 60, 64, 65, 66, 74, 78], "excluded_lines": []}, "tests/test_moe/test_moe_zero_optim.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 68, 74, 75, 76, 77, 78, 82], "summary": {"covered_lines": 18, "num_statements": 61, "percent_covered": 29.508196721311474, "percent_covered_display": "30", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 45, 46, 47, 49, 50, 51, 52, 53, 55, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 79, 83], "excluded_lines": []}, "tests/test_optimizer/test_adam_kernel.py": {"executed_lines": [3, 4, 5, 7, 8, 9, 11, 12, 14, 22, 29, 30, 38, 39, 43, 44, 65, 66, 74, 91, 92, 100, 117, 150, 151, 152, 153, 164, 165, 166, 167], "summary": {"covered_lines": 31, "num_statements": 88, "percent_covered": 35.22727272727273, "percent_covered_display": "35", "missing_lines": 57, "excluded_lines": 0}, "missing_lines": [31, 32, 33, 34, 35, 36, 40, 45, 46, 48, 49, 51, 53, 56, 57, 58, 60, 62, 67, 68, 70, 71, 72, 75, 93, 94, 96, 98, 101, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 154, 155, 156, 157, 158, 159, 168, 169, 170, 171], "excluded_lines": []}, "tests/test_optimizer/test_adam_optim.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10], "summary": {"covered_lines": 8, "num_statements": 49, "percent_covered": 16.3265306122449, "percent_covered_display": "16", "missing_lines": 41, "excluded_lines": 0}, "missing_lines": [12, 20, 26, 29, 30, 31, 41, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89], "excluded_lines": []}, "tests/test_optimizer/test_lr_scheduler.py": {"executed_lines": [1, 2, 4, 7, 19], "summary": {"covered_lines": 5, "num_statements": 15, "percent_covered": 33.333333333333336, "percent_covered_display": "33", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [8, 9, 10, 11, 12, 13, 14, 15, 16, 20], "excluded_lines": []}, "tests/test_optimizer/test_nvme.py": {"executed_lines": [1, 2, 4, 5, 6], "summary": {"covered_lines": 5, "num_statements": 36, "percent_covered": 13.88888888888889, "percent_covered_display": "14", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [9, 10, 11, 12, 13, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 48, 49], "excluded_lines": []}, "tests/test_pipeline/test_p2p_communication.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 15, 73, 78, 79, 80, 84], "summary": {"covered_lines": 16, "num_statements": 61, "percent_covered": 26.229508196721312, "percent_covered_display": "26", "missing_lines": 45, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 20, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 66, 67, 68, 69, 70, 74, 75, 81, 85], "excluded_lines": []}, "tests/test_pipeline/test_pipeline_utils/test_t5_pipeline_utils.py": {"executed_lines": [1, 3, 4, 5, 8, 9, 13, 14, 19, 20, 24, 46], "summary": {"covered_lines": 12, "num_statements": 39, "percent_covered": 30.76923076923077, "percent_covered_display": "31", "missing_lines": 27, "excluded_lines": 0}, "missing_lines": [10, 15, 16, 17, 21, 25, 26, 33, 34, 35, 36, 37, 38, 43, 47, 48, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75], "excluded_lines": []}, "tests/test_pipeline/test_pipeline_utils/test_whisper_pipeline_utils.py": {"executed_lines": [1, 3, 4, 5, 8, 9, 13, 14, 19, 20, 24, 46, 80], "summary": {"covered_lines": 13, "num_statements": 42, "percent_covered": 30.952380952380953, "percent_covered_display": "31", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [10, 15, 16, 17, 21, 25, 26, 33, 34, 35, 36, 37, 38, 43, 47, 48, 60, 61, 62, 63, 64, 65, 71, 72, 73, 76, 77, 81, 82], "excluded_lines": []}, "tests/test_pipeline/test_schedule/test_interleaved.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 27, 33, 49, 148, 149, 150, 151, 152, 153, 164], "summary": {"covered_lines": 28, "num_statements": 91, "percent_covered": 30.76923076923077, "percent_covered_display": "31", "missing_lines": 63, "excluded_lines": 0}, "missing_lines": [24, 25, 28, 29, 30, 40, 41, 42, 43, 44, 46, 61, 64, 65, 66, 68, 69, 72, 78, 79, 80, 81, 82, 86, 87, 90, 91, 94, 95, 96, 98, 99, 102, 103, 104, 106, 109, 110, 113, 114, 115, 116, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 134, 137, 138, 140, 141, 142, 144, 145, 154, 155, 165], "excluded_lines": []}, "tests/test_pipeline/test_schedule/test_oneF_oneB.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 27, 33, 47, 144, 155, 156, 157, 158, 159, 160, 170], "summary": {"covered_lines": 29, "num_statements": 99, "percent_covered": 29.292929292929294, "percent_covered_display": "29", "missing_lines": 70, "excluded_lines": 0}, "missing_lines": [24, 25, 28, 29, 30, 39, 40, 41, 42, 44, 52, 53, 54, 57, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 88, 89, 92, 93, 94, 96, 99, 100, 101, 102, 105, 106, 109, 110, 111, 112, 115, 116, 117, 120, 121, 122, 123, 126, 127, 128, 130, 133, 134, 136, 137, 138, 140, 141, 151, 152, 161, 162, 171], "excluded_lines": []}, "tests/test_pipeline/test_schedule/test_pipeline_schedule_utils.py": {"executed_lines": [1, 3, 6, 16, 37], "summary": {"covered_lines": 5, "num_statements": 40, "percent_covered": 12.5, "percent_covered_display": "12", "missing_lines": 35, "excluded_lines": 0}, "missing_lines": [7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47], "excluded_lines": []}, "tests/test_pipeline/test_stage_manager.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 10, 66, 71, 72, 73, 77], "summary": {"covered_lines": 12, "num_statements": 45, "percent_covered": 26.666666666666668, "percent_covered_display": "27", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [11, 12, 13, 19, 25, 26, 27, 30, 31, 34, 35, 36, 39, 40, 43, 44, 45, 48, 49, 50, 53, 54, 55, 56, 59, 60, 61, 62, 63, 67, 68, 74, 78], "excluded_lines": []}, "tests/test_shardformer/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_shardformer/test_flash_attention.py": {"executed_lines": [1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14, 16, 22, 33, 42, 53, 57, 67, 75, 99, 100, 101, 137], "summary": {"covered_lines": 23, "num_statements": 94, "percent_covered": 24.46808510638298, "percent_covered_display": "24", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 43, 44, 45, 54, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 127, 128, 129, 130, 131, 132, 134, 138], "excluded_lines": []}, "tests/test_shardformer/test_hybrid_parallel_grad_clip_norm/test_amp_optimizer.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10], "summary": {"covered_lines": 9, "num_statements": 100, "percent_covered": 9.0, "percent_covered_display": "9", "missing_lines": 91, "excluded_lines": 0}, "missing_lines": [11, 23, 24, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 46, 50, 51, 52, 55, 58, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 75, 82, 84, 85, 88, 89, 92, 97, 98, 101, 102, 103, 104, 105, 107, 108, 109, 111, 114, 115, 117, 118, 119, 121, 124, 148, 149, 151, 152, 154, 155, 156, 159, 183, 184, 186, 187, 189, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 220, 221, 222], "excluded_lines": []}, "tests/test_shardformer/test_hybrid_parallel_grad_clip_norm/test_naive_optimizer.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10], "summary": {"covered_lines": 9, "num_statements": 90, "percent_covered": 10.0, "percent_covered_display": "10", "missing_lines": 81, "excluded_lines": 0}, "missing_lines": [11, 23, 24, 28, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 46, 50, 51, 52, 55, 58, 59, 60, 63, 66, 67, 68, 69, 74, 75, 78, 79, 80, 81, 82, 84, 86, 87, 89, 92, 93, 95, 96, 97, 99, 102, 116, 117, 119, 120, 122, 123, 124, 127, 141, 142, 144, 145, 147, 148, 149, 152, 153, 154, 155, 158, 159, 160, 161, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 178, 179, 180], "excluded_lines": []}, "tests/test_shardformer/test_hybrid_parallel_grad_clip_norm/test_zero_optimizer.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13], "summary": {"covered_lines": 11, "num_statements": 94, "percent_covered": 11.702127659574469, "percent_covered_display": "12", "missing_lines": 83, "excluded_lines": 0}, "missing_lines": [14, 24, 25, 29, 33, 34, 36, 37, 39, 41, 42, 43, 44, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 69, 74, 75, 78, 79, 80, 81, 82, 84, 85, 86, 88, 91, 92, 94, 95, 96, 98, 101, 136, 137, 139, 140, 142, 143, 144, 147, 173, 174, 176, 177, 179, 180, 181, 184, 185, 186, 187, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 210, 211, 212], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_dist_crossentropy.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 15, 47, 48, 49, 54], "summary": {"covered_lines": 13, "num_statements": 34, "percent_covered": 38.23529411764706, "percent_covered_display": "38", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [16, 17, 20, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 41, 42, 50, 51, 55], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_dropout.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 10, 42, 58, 64, 65, 69], "summary": {"covered_lines": 12, "num_statements": 42, "percent_covered": 28.571428571428573, "percent_covered_display": "29", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [11, 12, 15, 18, 19, 24, 25, 28, 29, 30, 32, 33, 36, 37, 38, 39, 43, 44, 47, 48, 51, 52, 53, 54, 55, 59, 60, 61, 66, 70], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_embedding.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 45, 50, 51, 55], "summary": {"covered_lines": 15, "num_statements": 37, "percent_covered": 40.54054054054054, "percent_covered_display": "41", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [16, 18, 19, 20, 21, 23, 24, 27, 28, 31, 32, 33, 34, 37, 38, 40, 41, 42, 46, 47, 52, 56], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_gpt2_qkv_fused_linear_1d.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 19, 20, 30, 37, 44, 59, 101, 137, 138, 139, 140, 145, 152, 153, 157], "summary": {"covered_lines": 26, "num_statements": 96, "percent_covered": 27.083333333333332, "percent_covered_display": "27", "missing_lines": 70, "excluded_lines": 0}, "missing_lines": [31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 60, 61, 62, 63, 64, 73, 74, 75, 76, 77, 78, 81, 82, 85, 86, 87, 90, 91, 94, 95, 97, 98, 102, 104, 105, 106, 107, 111, 112, 113, 114, 115, 118, 119, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 141, 142, 146, 149, 154, 158], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_layernorm.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 9, 10, 13, 14, 43, 48, 49, 53], "summary": {"covered_lines": 14, "num_statements": 35, "percent_covered": 40.0, "percent_covered_display": "40", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [15, 17, 18, 19, 20, 22, 23, 24, 27, 28, 31, 32, 33, 34, 37, 38, 40, 44, 45, 50, 54], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_linear_1d.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 74, 120, 178, 179, 180, 181, 187, 192, 193, 197], "summary": {"covered_lines": 23, "num_statements": 118, "percent_covered": 19.491525423728813, "percent_covered_display": "19", "missing_lines": 95, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 22, 23, 28, 29, 30, 31, 34, 35, 38, 39, 43, 44, 45, 46, 49, 51, 52, 53, 56, 57, 59, 60, 61, 64, 65, 66, 71, 75, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 108, 110, 111, 112, 115, 116, 117, 121, 123, 124, 126, 127, 128, 129, 132, 136, 137, 138, 139, 143, 144, 145, 146, 149, 152, 153, 154, 157, 160, 161, 163, 164, 165, 168, 169, 170, 175, 182, 183, 184, 188, 189, 194, 198], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_qkv_fused_linear_1d.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 16, 19, 20, 30, 37, 44, 59, 60, 94, 95, 128, 136, 137, 141], "summary": {"covered_lines": 24, "num_statements": 91, "percent_covered": 26.373626373626372, "percent_covered_display": "26", "missing_lines": 67, "excluded_lines": 0}, "missing_lines": [31, 32, 33, 34, 35, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 77, 78, 81, 82, 83, 84, 87, 88, 90, 91, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 114, 115, 116, 117, 120, 121, 123, 124, 125, 129, 132, 133, 138, 142], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_sequence_parallel.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 25, 49, 60, 94, 159, 160, 161, 162, 163, 167, 172, 173, 177], "summary": {"covered_lines": 24, "num_statements": 111, "percent_covered": 21.62162162162162, "percent_covered_display": "22", "missing_lines": 87, "excluded_lines": 0}, "missing_lines": [34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 52, 53, 54, 56, 58, 61, 63, 64, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 89, 91, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 113, 114, 116, 119, 120, 121, 124, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 152, 153, 154, 155, 156, 164, 168, 169, 174, 178], "excluded_lines": []}, "tests/test_shardformer/test_layer/test_vocab_parallel_embedding_1d.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 14, 15, 47, 52, 53, 57], "summary": {"covered_lines": 15, "num_statements": 39, "percent_covered": 38.46153846153846, "percent_covered_display": "38", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 33, 34, 35, 36, 39, 40, 42, 43, 44, 48, 49, 54, 58], "excluded_lines": []}, "tests/test_shardformer/test_model/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_shardformer/test_model/_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 190, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 190, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 38, 39, 41, 42, 43, 44, 46, 53, 54, 55, 56, 59, 67, 68, 70, 71, 72, 73, 76, 82, 83, 84, 87, 89, 90, 92, 93, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 136, 146, 155, 156, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 219, 221, 222, 224, 226, 229, 230, 233, 243, 244, 245, 248, 249, 251, 252, 254, 255, 257, 258, 260, 263, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 290, 297, 301, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 326, 329, 334, 335, 336, 337, 338, 339, 340, 343, 348, 349, 350, 351, 352, 353], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_bert.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 84, "percent_covered": 9.523809523809524, "percent_covered_display": "10", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [10, 22, 23, 27, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 52, 56, 67, 68, 69, 72, 73, 76, 77, 78, 80, 81, 82, 84, 87, 88, 90, 91, 92, 95, 97, 100, 177, 178, 179, 180, 182, 183, 184, 187, 221, 222, 224, 225, 227, 228, 229, 232, 233, 234, 235, 238, 239, 240, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 258, 259, 260], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_blip2.py": {"executed_lines": [1, 2, 4, 5, 6, 13], "summary": {"covered_lines": 6, "num_statements": 40, "percent_covered": 15.0, "percent_covered_display": "15", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [14, 17, 19, 22, 25, 26, 28, 34, 35, 38, 43, 48, 57, 68, 69, 70, 71, 72, 78, 79, 86, 94, 96, 99, 100, 101, 109, 112, 113, 114, 115, 116, 119, 120], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_bloom.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 83, "percent_covered": 9.63855421686747, "percent_covered_display": "10", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [10, 22, 23, 27, 31, 32, 35, 36, 38, 39, 40, 43, 44, 45, 46, 48, 49, 52, 56, 67, 68, 69, 72, 73, 76, 77, 78, 80, 81, 82, 84, 86, 87, 88, 90, 91, 94, 96, 99, 164, 165, 167, 168, 170, 171, 172, 175, 199, 200, 202, 203, 205, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_chatglm2.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 82, "percent_covered": 9.75609756097561, "percent_covered_display": "10", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [10, 22, 23, 27, 37, 38, 41, 42, 44, 45, 49, 52, 53, 54, 55, 57, 58, 69, 80, 91, 92, 93, 96, 97, 100, 101, 102, 104, 107, 108, 110, 113, 114, 115, 117, 118, 130, 132, 133, 136, 203, 204, 206, 213, 215, 216, 219, 243, 244, 246, 253, 255, 256, 259, 260, 261, 269, 272, 273, 274, 282, 285, 286, 287, 288, 289, 292, 293, 294, 295, 296, 299, 300, 301], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_falcon.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10], "summary": {"covered_lines": 9, "num_statements": 83, "percent_covered": 10.843373493975903, "percent_covered_display": "11", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [11, 23, 24, 28, 32, 33, 36, 37, 39, 40, 43, 44, 45, 46, 48, 49, 52, 55, 56, 59, 60, 63, 64, 65, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 83, 85, 88, 131, 132, 134, 135, 137, 138, 139, 142, 166, 167, 169, 170, 172, 173, 174, 177, 178, 179, 180, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 203, 204, 205], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_gpt2.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 84, "percent_covered": 9.523809523809524, "percent_covered_display": "10", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [10, 22, 23, 27, 37, 38, 41, 42, 44, 45, 46, 49, 50, 51, 52, 54, 55, 65, 76, 87, 88, 89, 92, 93, 96, 97, 98, 100, 102, 103, 105, 108, 109, 110, 112, 113, 125, 127, 128, 131, 217, 218, 219, 221, 228, 230, 231, 234, 258, 259, 260, 262, 269, 271, 272, 275, 276, 277, 285, 288, 289, 290, 298, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 315, 316, 317], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_gptj.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 82, "percent_covered": 9.75609756097561, "percent_covered_display": "10", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [10, 22, 23, 27, 37, 38, 41, 42, 44, 45, 48, 49, 50, 51, 53, 54, 65, 75, 76, 79, 80, 83, 84, 85, 87, 89, 90, 92, 95, 96, 97, 99, 100, 112, 114, 115, 118, 182, 183, 184, 186, 193, 195, 196, 199, 223, 224, 225, 227, 234, 236, 237, 240, 241, 242, 250, 253, 254, 255, 263, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 281, 282, 283], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_llama.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14], "summary": {"covered_lines": 12, "num_statements": 101, "percent_covered": 11.881188118811881, "percent_covered_display": "12", "missing_lines": 89, "excluded_lines": 0}, "missing_lines": [15, 26, 29, 30, 31, 34, 36, 38, 42, 43, 46, 47, 49, 50, 52, 55, 56, 59, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 78, 79, 82, 85, 95, 96, 97, 100, 101, 104, 105, 106, 108, 110, 111, 113, 116, 117, 118, 120, 121, 126, 128, 131, 259, 260, 262, 263, 265, 266, 267, 270, 309, 310, 312, 313, 315, 316, 317, 320, 321, 322, 323, 326, 327, 328, 329, 332, 333, 334, 335, 336, 339, 340, 341, 342, 343, 346, 347, 348], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_mistral.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 9, 10, 11], "summary": {"covered_lines": 9, "num_statements": 64, "percent_covered": 14.0625, "percent_covered_display": "14", "missing_lines": 55, "excluded_lines": 0}, "missing_lines": [12, 23, 26, 27, 31, 35, 36, 39, 40, 42, 43, 46, 47, 48, 49, 51, 52, 62, 72, 73, 76, 77, 80, 81, 82, 84, 86, 87, 89, 92, 93, 94, 96, 97, 109, 111, 114, 160, 161, 163, 164, 166, 167, 168, 171, 172, 173, 174, 177, 178, 179, 180, 181, 184, 185], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_opt.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 9, 10, 11], "summary": {"covered_lines": 9, "num_statements": 81, "percent_covered": 11.11111111111111, "percent_covered_display": "11", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [12, 23, 26, 27, 31, 41, 42, 45, 46, 48, 52, 55, 56, 57, 58, 60, 61, 71, 81, 82, 85, 86, 89, 90, 91, 93, 94, 95, 97, 100, 101, 102, 104, 105, 117, 119, 120, 123, 178, 179, 180, 187, 189, 190, 193, 217, 218, 220, 227, 229, 230, 233, 234, 235, 243, 246, 247, 248, 256, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 273, 274, 275], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_sam.py": {"executed_lines": [1, 2, 4, 5, 6, 13], "summary": {"covered_lines": 6, "num_statements": 39, "percent_covered": 15.384615384615385, "percent_covered_display": "15", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [14, 17, 19, 22, 25, 26, 28, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 53, 55, 58, 59, 60, 61, 64, 65, 66, 67, 68, 71, 72], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_t5.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 79, "percent_covered": 10.126582278481013, "percent_covered_display": "10", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [10, 22, 23, 27, 37, 38, 41, 42, 44, 47, 48, 49, 51, 52, 53, 56, 59, 60, 63, 64, 65, 67, 69, 70, 72, 75, 77, 79, 80, 81, 93, 95, 98, 158, 159, 160, 162, 170, 171, 173, 175, 176, 177, 180, 206, 207, 209, 216, 218, 219, 222, 223, 224, 232, 235, 236, 237, 245, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 262, 263, 264], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_vit.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 79, "percent_covered": 10.126582278481013, "percent_covered_display": "10", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [10, 22, 23, 27, 31, 32, 35, 36, 39, 40, 43, 44, 45, 46, 48, 49, 52, 55, 56, 59, 60, 63, 64, 65, 67, 69, 70, 71, 74, 75, 76, 78, 79, 84, 86, 90, 133, 136, 137, 138, 140, 141, 142, 145, 159, 160, 162, 163, 165, 166, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 197], "excluded_lines": []}, "tests/test_shardformer/test_model/test_shard_whisper.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 88, "percent_covered": 9.090909090909092, "percent_covered_display": "9", "missing_lines": 80, "excluded_lines": 0}, "missing_lines": [10, 21, 23, 27, 31, 32, 35, 36, 37, 39, 40, 43, 44, 45, 47, 51, 57, 58, 59, 61, 63, 64, 67, 70, 71, 74, 75, 78, 79, 80, 82, 84, 85, 87, 90, 91, 93, 94, 95, 98, 103, 105, 110, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 187, 188, 190, 191, 193, 194, 197, 198, 199, 200, 203, 204, 205, 206, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 223, 224, 225], "excluded_lines": []}, "tests/test_shardformer/test_shard_utils.py": {"executed_lines": [1, 2, 4, 7, 8, 14], "summary": {"covered_lines": 6, "num_statements": 21, "percent_covered": 28.571428571428573, "percent_covered_display": "29", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "excluded_lines": []}, "tests/test_shardformer/test_with_torch_ddp.py": {"executed_lines": [1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14], "summary": {"covered_lines": 12, "num_statements": 52, "percent_covered": 23.076923076923077, "percent_covered_display": "23", "missing_lines": 40, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 25, 26, 27, 28, 30, 32, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 50, 51, 54, 57, 58, 61, 64, 65, 68, 69, 72, 73, 74, 75, 78, 79, 80, 81, 82, 85, 86], "excluded_lines": []}, "tests/test_smoothquant/test_llama_attention.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 11, 13, 14, 17, 18, 19, 22], "summary": {"covered_lines": 14, "num_statements": 90, "percent_covered": 15.555555555555555, "percent_covered_display": "16", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [8, 16, 24, 26, 27, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 73, 75, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 112, 113, 115, 123, 124, 126, 127, 128, 130, 135, 136], "excluded_lines": []}, "tests/test_smoothquant/test_llama_mlp.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 12, 13, 14, 17, 18, 21, 22, 23, 26], "summary": {"covered_lines": 15, "num_statements": 46, "percent_covered": 32.608695652173914, "percent_covered_display": "33", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [10, 11, 20, 29, 30, 31, 32, 33, 35, 37, 38, 40, 42, 45, 49, 50, 51, 53, 55, 57, 60, 64, 66, 73, 74, 75, 76, 78, 80, 83, 84], "excluded_lines": []}, "tests/test_smoothquant/test_smoothquant_linear.py": {"executed_lines": [1, 3, 4, 6, 7, 11, 12, 13, 16, 20, 38], "summary": {"covered_lines": 11, "num_statements": 25, "percent_covered": 44.0, "percent_covered_display": "44", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [9, 10, 21, 22, 23, 25, 26, 27, 29, 30, 32, 33, 35, 39], "excluded_lines": []}, "tests/test_smoothquant/test_sq_rotary_embedding.py": {"executed_lines": [4, 5, 6, 8, 9, 12, 13, 14, 16], "summary": {"covered_lines": 9, "num_statements": 40, "percent_covered": 22.5, "percent_covered_display": "22", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 47, 48, 50, 51, 53, 54, 55, 58, 59], "excluded_lines": []}, "tests/test_tensor/test_comm_spec_apply.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 13, 40, 66, 111, 138, 156, 179, 207, 208, 209, 214], "summary": {"covered_lines": 20, "num_statements": 96, "percent_covered": 20.833333333333332, "percent_covered_display": "21", "missing_lines": 76, "excluded_lines": 0}, "missing_lines": [15, 16, 18, 21, 24, 29, 32, 35, 37, 42, 43, 46, 49, 54, 57, 58, 60, 61, 62, 63, 68, 69, 70, 73, 74, 75, 76, 79, 81, 86, 87, 92, 95, 100, 103, 106, 108, 113, 117, 120, 121, 124, 126, 130, 132, 133, 135, 140, 142, 144, 148, 150, 151, 153, 158, 164, 166, 170, 173, 174, 176, 180, 181, 183, 184, 186, 189, 191, 194, 197, 200, 201, 204, 210, 211, 215], "excluded_lines": []}, "tests/test_tensor/test_dtensor/test_comm_spec.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 12, 31, 51, 92, 113, 125, 153, 154, 155, 160], "summary": {"covered_lines": 18, "num_statements": 77, "percent_covered": 23.376623376623378, "percent_covered_display": "23", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [14, 15, 17, 20, 23, 26, 28, 33, 34, 37, 40, 43, 45, 46, 47, 48, 53, 54, 55, 58, 59, 60, 61, 64, 66, 71, 72, 77, 80, 87, 89, 94, 98, 101, 102, 105, 107, 108, 110, 115, 117, 119, 120, 122, 126, 127, 129, 130, 132, 135, 137, 140, 143, 146, 149, 150, 156, 157, 161], "excluded_lines": []}, "tests/test_tensor/test_dtensor/test_dtensor.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 10, 11, 16, 22, 80, 81, 86], "summary": {"covered_lines": 13, "num_statements": 65, "percent_covered": 20.0, "percent_covered_display": "20", "missing_lines": 52, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 17, 18, 19, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 77, 82, 83, 87], "excluded_lines": []}, "tests/test_tensor/test_dtensor/test_dtensor_sharding_spec.py": {"executed_lines": [1, 2, 4, 7, 34], "summary": {"covered_lines": 5, "num_statements": 20, "percent_covered": 25.0, "percent_covered_display": "25", "missing_lines": 15, "excluded_lines": 0}, "missing_lines": [8, 9, 12, 13, 15, 18, 19, 21, 22, 24, 25, 26, 27, 29, 35], "excluded_lines": []}, "tests/test_tensor/test_dtensor/test_layout_converter.py": {"executed_lines": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 21, 83, 142, 174, 175, 176, 183], "summary": {"covered_lines": 22, "num_statements": 93, "percent_covered": 23.655913978494624, "percent_covered_display": "24", "missing_lines": 71, "excluded_lines": 0}, "missing_lines": [22, 23, 26, 28, 32, 33, 35, 37, 40, 44, 48, 49, 51, 53, 56, 59, 63, 67, 68, 70, 72, 75, 78, 84, 85, 86, 87, 88, 93, 94, 99, 100, 102, 105, 106, 110, 111, 112, 115, 116, 117, 118, 121, 122, 123, 126, 127, 128, 131, 136, 138, 139, 143, 144, 146, 147, 148, 153, 154, 159, 160, 162, 165, 168, 170, 171, 177, 178, 179, 180, 184], "excluded_lines": []}, "tests/test_tensor/test_mix_gather.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 14, 48, 90, 124, 166, 193, 231, 259, 297, 326, 327, 328, 333], "summary": {"covered_lines": 23, "num_statements": 150, "percent_covered": 15.333333333333334, "percent_covered_display": "15", "missing_lines": 127, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 33, 35, 43, 45, 49, 50, 52, 54, 55, 56, 57, 58, 65, 68, 72, 74, 78, 81, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 109, 111, 119, 121, 125, 126, 128, 129, 130, 131, 132, 136, 141, 144, 148, 150, 154, 157, 161, 163, 167, 168, 169, 170, 171, 172, 174, 178, 180, 188, 190, 194, 195, 197, 198, 200, 205, 208, 212, 214, 219, 222, 226, 228, 232, 234, 235, 236, 237, 238, 240, 244, 246, 254, 256, 260, 261, 263, 264, 266, 271, 274, 278, 280, 285, 288, 292, 294, 298, 299, 301, 302, 304, 307, 309, 311, 313, 315, 317, 319, 321, 323, 329, 330, 334], "excluded_lines": []}, "tests/test_tensor/test_padded_tensor.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 8, 11, 39, 40, 45], "summary": {"covered_lines": 11, "num_statements": 33, "percent_covered": 33.333333333333336, "percent_covered_display": "33", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 35, 36, 41, 42, 46], "excluded_lines": []}, "tests/test_tensor/test_shape_consistency.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 13, 14, 15, 18, 94, 140], "summary": {"covered_lines": 12, "num_statements": 50, "percent_covered": 24.0, "percent_covered_display": "24", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [19, 23, 30, 34, 37, 41, 45, 53, 57, 60, 63, 67, 71, 79, 83, 86, 89, 95, 96, 101, 106, 108, 112, 113, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 131, 134, 141, 142], "excluded_lines": []}, "tests/test_tensor/test_shape_consistency_apply.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8, 9, 12, 68, 69, 70, 75], "summary": {"covered_lines": 13, "num_statements": 43, "percent_covered": 30.232558139534884, "percent_covered_display": "30", "missing_lines": 30, "excluded_lines": 0}, "missing_lines": [13, 14, 16, 17, 20, 21, 22, 23, 24, 29, 34, 36, 37, 38, 41, 42, 43, 44, 47, 49, 54, 55, 60, 62, 63, 64, 65, 71, 72, 76], "excluded_lines": []}, "tests/test_tensor/test_sharding_spec.py": {"executed_lines": [1, 3, 4, 7, 24], "summary": {"covered_lines": 5, "num_statements": 13, "percent_covered": 38.46153846153846, "percent_covered_display": "38", "missing_lines": 8, "excluded_lines": 0}, "missing_lines": [8, 9, 14, 15, 16, 20, 21, 25], "excluded_lines": []}, "tests/test_zero/test_gemini/test_chunk_mgrv2.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 15, 16, 17, 51, 56, 57, 58, 59, 63], "summary": {"covered_lines": 19, "num_statements": 47, "percent_covered": 40.42553191489362, "percent_covered_display": "40", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 42, 43, 45, 46, 47, 48, 52, 53, 60, 64], "excluded_lines": []}, "tests/test_zero/test_gemini/test_chunkv2.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 20, 26, 34, 35, 36, 37, 110, 115, 116, 117, 118, 122], "summary": {"covered_lines": 23, "num_statements": 87, "percent_covered": 26.436781609195403, "percent_covered_display": "26", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 21, 22, 23, 27, 28, 30, 31, 38, 39, 40, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 111, 112, 119, 123], "excluded_lines": []}, "tests/test_zero/test_gemini/test_fwd_bwd.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "summary": {"covered_lines": 14, "num_statements": 76, "percent_covered": 18.42105263157895, "percent_covered_display": "18", "missing_lines": 62, "excluded_lines": 0}, "missing_lines": [17, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 50, 51, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 88, 89, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116], "excluded_lines": []}, "tests/test_zero/test_gemini/test_gemini_use_rmt.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "summary": {"covered_lines": 10, "num_statements": 67, "percent_covered": 14.925373134328359, "percent_covered_display": "15", "missing_lines": 57, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 60, 61, 62, 66, 67, 68, 70, 71, 73, 77, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97], "excluded_lines": []}, "tests/test_zero/test_gemini/test_grad_accum.py": {"executed_lines": [1, 2, 3, 4], "summary": {"covered_lines": 4, "num_statements": 99, "percent_covered": 4.040404040404041, "percent_covered_display": "4", "missing_lines": 95, "excluded_lines": 0}, "missing_lines": [5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 39, 40, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 61, 62, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 86, 87, 89, 92, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 146, 147, 148, 149, 152, 153], "excluded_lines": []}, "tests/test_zero/test_gemini/test_grad_clip.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "summary": {"covered_lines": 13, "num_statements": 75, "percent_covered": 17.333333333333332, "percent_covered_display": "17", "missing_lines": 62, "excluded_lines": 0}, "missing_lines": [16, 39, 40, 41, 43, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 67, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 111, 112, 113, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 129, 132, 133], "excluded_lines": []}, "tests/test_zero/test_gemini/test_inference.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17], "summary": {"covered_lines": 15, "num_statements": 88, "percent_covered": 17.045454545454547, "percent_covered_display": "17", "missing_lines": 73, "excluded_lines": 0}, "missing_lines": [19, 27, 28, 29, 31, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 49, 50, 53, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 122, 123], "excluded_lines": []}, "tests/test_zero/test_gemini/test_optim.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15], "summary": {"covered_lines": 14, "num_statements": 116, "percent_covered": 12.068965517241379, "percent_covered_display": "12", "missing_lines": 102, "excluded_lines": 0}, "missing_lines": [17, 33, 35, 43, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 72, 73, 74, 75, 76, 77, 78, 82, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 97, 98, 102, 103, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 124, 125, 127, 128, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 146, 148, 149, 151, 159, 160, 162, 163, 165, 167, 168, 169, 170, 172, 174, 175, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200], "excluded_lines": []}, "tests/test_zero/test_gemini/test_runtime_mem_tracer.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 9], "summary": {"covered_lines": 7, "num_statements": 38, "percent_covered": 18.42105263157895, "percent_covered_display": "18", "missing_lines": 31, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 15, 17, 18, 22, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54], "excluded_lines": []}, "tests/test_zero/test_gemini/test_search.py": {"executed_lines": [1, 2, 4, 5, 6, 7, 8], "summary": {"covered_lines": 7, "num_statements": 33, "percent_covered": 21.21212121212121, "percent_covered_display": "21", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [11, 12, 17, 18, 22, 23, 24, 27, 28, 30, 34, 35, 44, 45, 46, 49, 50, 51, 52, 55, 56, 57, 58, 59, 62, 63], "excluded_lines": []}, "tests/test_zero/test_gemini/test_zeroddp_state_dict.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10], "summary": {"covered_lines": 9, "num_statements": 63, "percent_covered": 14.285714285714286, "percent_covered_display": "14", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [12, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 84, 85, 86, 87, 88, 91, 92], "excluded_lines": []}, "tests/test_zero/test_gemini/test_zerooptim_state_dict.py": {"executed_lines": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "summary": {"covered_lines": 10, "num_statements": 58, "percent_covered": 17.24137931034483, "percent_covered_display": "17", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [13, 21, 22, 23, 24, 25, 29, 31, 33, 34, 35, 36, 38, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85], "excluded_lines": []}, "tests/test_zero/test_low_level/test_grad_acc.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 23, 29, 72, 132, 140, 141, 145], "summary": {"covered_lines": 21, "num_statements": 89, "percent_covered": 23.59550561797753, "percent_covered_display": "24", "missing_lines": 68, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 24, 25, 26, 30, 31, 32, 34, 35, 37, 38, 39, 42, 46, 47, 48, 50, 52, 53, 54, 57, 58, 60, 61, 64, 65, 68, 69, 73, 74, 75, 78, 79, 81, 82, 83, 86, 91, 95, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 119, 120, 122, 123, 124, 127, 129, 133, 135, 136, 137, 142, 146], "excluded_lines": []}, "tests/test_zero/test_low_level/test_zero1_2.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 22, 28, 44, 54, 108, 109, 110, 180, 187, 188, 189, 193], "summary": {"covered_lines": 24, "num_statements": 102, "percent_covered": 23.529411764705884, "percent_covered_display": "24", "missing_lines": 78, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 20, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 65, 66, 69, 70, 73, 74, 75, 78, 82, 83, 85, 86, 87, 90, 91, 94, 95, 96, 97, 100, 101, 104, 105, 119, 120, 123, 124, 126, 129, 134, 142, 144, 146, 149, 152, 153, 156, 159, 162, 163, 164, 165, 166, 167, 170, 173, 176, 177, 181, 183, 184, 190, 194], "excluded_lines": []}, "tests/test_zero/test_low_level/test_zero_ckpt.py": {"executed_lines": [1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 15, 16, 21, 27, 43, 105, 111, 112, 113, 117], "summary": {"covered_lines": 20, "num_statements": 68, "percent_covered": 29.41176470588235, "percent_covered_display": "29", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 48, 49, 52, 53, 55, 58, 62, 66, 68, 70, 73, 74, 77, 78, 81, 82, 84, 85, 88, 89, 90, 93, 96, 97, 100, 101, 102, 106, 108, 114, 118], "excluded_lines": []}}, "totals": {"covered_lines": 8761, "num_statements": 73691, "percent_covered": 11.888833100378609, "percent_covered_display": "12", "missing_lines": 64930, "excluded_lines": 0}}