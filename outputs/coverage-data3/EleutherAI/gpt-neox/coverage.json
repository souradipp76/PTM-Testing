{"meta": {"format": 2, "version": "7.4.4", "timestamp": "2024-04-28T23:33:55.441933", "branch_coverage": false, "show_contexts": false}, "files": {"deepy.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 16, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [16, 17, 19, 22, 23, 25, 26, 28, 29, 32, 33, 34, 35, 37, 40, 41], "excluded_lines": []}, "eval.py": {"executed_lines": [18, 19, 20, 22, 25], "summary": {"covered_lines": 5, "num_statements": 30, "percent_covered": 16.666666666666668, "percent_covered_display": "17", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [26, 27, 28, 29, 30, 31, 34, 35, 38, 45, 46, 48, 49, 50, 51, 52, 59, 66, 67, 70, 71, 72, 73, 76, 77], "excluded_lines": []}, "eval_tasks/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [15], "excluded_lines": []}, "eval_tasks/eval_adapter.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 244, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 244, "excluded_lines": 0}, "missing_lines": [15, 17, 18, 19, 20, 21, 23, 26, 27, 28, 30, 31, 32, 33, 36, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 72, 77, 78, 79, 82, 88, 89, 90, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 127, 138, 139, 142, 144, 145, 146, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 163, 166, 167, 168, 169, 171, 173, 174, 176, 177, 184, 185, 187, 189, 190, 193, 195, 197, 198, 200, 208, 212, 213, 214, 215, 217, 218, 219, 221, 222, 225, 226, 228, 232, 234, 237, 242, 252, 253, 254, 256, 257, 259, 260, 261, 264, 265, 268, 270, 275, 276, 281, 284, 285, 289, 292, 293, 294, 295, 296, 297, 299, 300, 301, 306, 309, 310, 311, 313, 314, 316, 321, 322, 323, 326, 328, 332, 335, 337, 342, 343, 347, 349, 353, 354, 355, 358, 359, 361, 362, 365, 367, 369, 370, 372, 375, 379, 380, 381, 383, 385, 387, 388, 397, 398, 399, 402, 403, 404, 415, 419, 421, 422, 423, 424, 425, 426, 428, 429, 431, 437, 438, 440, 441, 442, 444, 446, 447, 455, 456, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 482, 483, 484, 488, 490, 498, 507, 509, 510, 511, 512, 514, 515, 516, 517, 520, 529, 530, 533], "excluded_lines": []}, "generate.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 18, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 18, "excluded_lines": 0}, "missing_lines": [19, 21, 29, 33, 36, 37, 40, 41, 44, 56, 57, 60, 61, 74, 75, 87, 92, 93], "excluded_lines": []}, "megatron/__init__.py": {"executed_lines": [14, 17, 26], "summary": {"covered_lines": 3, "num_statements": 7, "percent_covered": 42.857142857142854, "percent_covered_display": "43", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 23], "excluded_lines": []}, "megatron/checkpointing.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 203, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 203, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 53, 57, 58, 59, 60, 63, 66, 69, 70, 74, 81, 82, 85, 91, 92, 93, 94, 96, 99, 102, 103, 105, 106, 110, 113, 115, 118, 121, 122, 123, 126, 131, 133, 134, 135, 138, 140, 141, 143, 144, 154, 155, 158, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 212, 215, 216, 217, 218, 219, 220, 221, 223, 226, 233, 235, 236, 239, 240, 241, 242, 245, 265, 266, 267, 270, 275, 278, 279, 280, 281, 282, 288, 295, 305, 306, 307, 308, 309, 310, 315, 316, 319, 325, 330, 337, 343, 346, 347, 348, 349, 354, 357, 358, 360, 362, 363, 364, 365, 368, 369, 370, 373, 376, 380, 381, 384, 385, 386, 387, 389, 390, 398, 401, 402, 408, 411, 412, 414, 416, 419, 420, 422, 423, 425, 428, 429, 434, 435, 436, 437, 441, 444, 445, 446, 452, 454, 455, 462, 463, 464, 465, 466, 467, 468, 469, 470, 476, 478, 479, 480, 482], "excluded_lines": []}, "megatron/data/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "megatron/data/blendable_dataset.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [18, 20, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 46, 47, 48, 49, 51, 53, 62, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82], "excluded_lines": []}, "megatron/data/data_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 181, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 181, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 31, 32, 34, 35, 36, 37, 40, 41, 49, 54, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 89, 92, 105, 107, 108, 111, 113, 114, 115, 122, 123, 124, 126, 127, 128, 129, 133, 143, 145, 146, 147, 149, 152, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 183, 184, 185, 189, 190, 191, 192, 195, 206, 207, 215, 216, 230, 231, 244, 245, 257, 260, 274, 275, 277, 278, 280, 283, 284, 287, 288, 291, 292, 294, 297, 300, 302, 305, 306, 307, 310, 312, 315, 317, 318, 319, 320, 326, 329, 332, 335, 340, 351, 354, 357, 364, 367, 372, 378, 384, 389, 399, 400, 401, 402, 403, 404, 408, 420, 421, 422, 425, 426, 427, 429, 431, 434, 437, 439, 444, 445, 446, 449, 450, 453, 458, 459, 463, 466, 473, 474, 476, 478, 479, 481, 483, 484, 486, 488, 491, 494, 495, 497, 498, 499, 500, 501, 503], "excluded_lines": []}, "megatron/data/gpt2_dataset.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 143, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 143, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 23, 24, 26, 29, 30, 44, 45, 46, 49, 50, 52, 54, 64, 65, 67, 68, 72, 73, 75, 76, 78, 80, 81, 82, 83, 85, 90, 92, 93, 94, 103, 107, 108, 110, 113, 115, 116, 118, 122, 123, 124, 127, 130, 147, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 174, 179, 180, 181, 182, 187, 189, 191, 192, 194, 195, 196, 200, 203, 204, 209, 212, 213, 214, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 245, 247, 250, 253, 254, 255, 256, 257, 261, 262, 265, 268, 269, 270, 271, 272, 273, 276, 283, 284, 287, 289, 291, 293, 294, 295, 296, 298, 299, 301, 302, 304, 309, 310, 311, 314, 315, 317, 318, 319, 321, 324, 326, 327, 328, 329, 330, 331], "excluded_lines": []}, "megatron/data/indexed_dataset.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 392, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 392, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 50, 53, 54, 55, 59, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 86, 87, 88, 89, 92, 93, 96, 108, 109, 110, 111, 112, 115, 116, 119, 120, 123, 124, 125, 126, 127, 128, 131, 134, 136, 137, 138, 139, 140, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 165, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 202, 203, 205, 206, 207, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 340, 341, 342, 344, 345, 346, 347, 348, 351, 354, 356, 358, 360, 361, 362, 363, 365, 366, 367, 369, 370, 373, 375, 377, 378, 379, 381, 382, 383, 385, 386, 388, 389, 391, 393, 394, 395, 396, 401, 402, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 423, 424, 430, 431, 438, 439, 440, 442, 443, 444, 446, 447, 448, 450, 451, 452, 454, 455, 456, 458, 459, 461, 462, 464, 465, 466, 468, 470, 471, 473, 474, 476, 477, 478, 480, 481, 482, 483, 484, 487, 488, 490, 491, 492, 493, 495, 496, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 517, 518, 520, 526, 527, 528, 529, 530, 533, 535, 536, 537, 539, 540, 541, 543, 544, 546, 547, 549, 550, 551, 553, 554, 555, 560, 561, 562, 563, 564, 565, 567, 568, 569, 571, 572, 573, 574, 576, 577, 579, 581, 582, 584, 585, 588, 589, 591, 592, 594, 595], "excluded_lines": []}, "megatron/data/samplers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 79, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 79, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 24, 37, 38, 39, 40, 41, 43, 44, 50, 51, 55, 56, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 79, 81, 82, 84, 85, 88, 105, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165], "excluded_lines": []}, "megatron/devutil.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 25, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 25, "excluded_lines": 0}, "missing_lines": [1, 4, 9, 10, 11, 13, 14, 16, 17, 19, 20, 26, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51], "excluded_lines": []}, "megatron/fused_kernels/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 73, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 73, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 24, 25, 32, 35, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 68, 71, 72, 74, 80, 96, 97, 99, 101, 102, 107, 115, 119, 126, 130, 134, 138, 146, 147, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181], "excluded_lines": []}, "megatron/fused_kernels/setup.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 18, 19, 22, 23, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 42, 52, 53, 57], "excluded_lines": []}, "megatron/gradient_noise_scale/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "megatron/gradient_noise_scale/gradient_noise_scale.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 86, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 86, "excluded_lines": 0}, "missing_lines": [15, 18, 20, 21, 22, 23, 26, 58, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 106, 107, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 135, 137, 138, 141, 142, 143, 146, 151, 156, 157, 160, 161, 164, 170, 171, 172, 175, 180, 187, 190, 195, 196, 197, 199, 201, 202, 204, 207, 209, 210], "excluded_lines": []}, "megatron/initialize.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 93, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 93, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 23, 24, 26, 27, 28, 30, 31, 34, 42, 44, 47, 49, 52, 53, 54, 57, 62, 63, 65, 66, 69, 71, 72, 75, 78, 79, 81, 84, 86, 89, 103, 104, 110, 121, 124, 125, 127, 128, 133, 134, 138, 139, 141, 142, 143, 144, 148, 149, 151, 159, 160, 161, 164, 166, 170, 174, 175, 176, 177, 180, 181, 182, 187, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 216, 218, 219, 220, 221, 222, 223, 225, 228, 231, 232, 233], "excluded_lines": []}, "megatron/learning_rates.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 64, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 64, "excluded_lines": 0}, "missing_lines": [18, 20, 22, 25, 28, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 61, 63, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 83, 85, 86, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 112, 114, 117, 118, 119, 121, 122, 126, 127, 129, 131, 134, 137, 140, 143, 147, 148], "excluded_lines": []}, "megatron/logging.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 159, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 159, "excluded_lines": 0}, "missing_lines": [15, 17, 19, 20, 21, 22, 24, 25, 28, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 65, 66, 76, 77, 78, 79, 82, 88, 89, 90, 91, 92, 93, 94, 95, 108, 111, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 174, 175, 179, 181, 182, 183, 192, 199, 200, 207, 208, 217, 218, 219, 228, 229, 230, 231, 232, 233, 242, 247, 248, 250, 251, 252, 256, 257, 258, 266, 267, 271, 272, 273, 281, 282, 291, 293, 294, 295, 296, 297, 304, 311, 314, 317, 318, 323, 324, 333, 335, 338, 346, 347, 348, 353, 354, 355, 356, 357, 358, 361, 364, 365, 366, 367, 368, 369, 371, 373, 376, 385, 386, 387, 388, 389, 390], "excluded_lines": []}, "megatron/model/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 3, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [18, 19, 20], "excluded_lines": []}, "megatron/model/activations.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 73, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 73, "excluded_lines": 0}, "missing_lines": [18, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 64, 65, 66, 67, 73, 74, 75, 76, 78, 81, 84, 85, 87, 88, 89, 91, 92, 93, 94, 95, 98, 102, 103, 104, 114, 115, 116, 119, 120, 121, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139], "excluded_lines": []}, "megatron/model/fused_bias_dropout.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 19, 22, 23, 24, 25, 28, 31, 32, 33, 34, 37, 38, 39, 41, 44, 45, 48, 51, 52, 55], "excluded_lines": []}, "megatron/model/fused_layer_norm.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 54, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [3, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 20, 21, 22, 24, 28, 31, 32, 41, 43, 44, 47, 52, 78, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 104, 105, 107, 109, 111, 112, 116, 120, 123, 127, 136, 140, 146, 150], "excluded_lines": []}, "megatron/model/fused_rope.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 34, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [14, 15, 18, 27, 28, 34, 36, 39, 40, 42, 44, 45, 48, 50, 51, 55, 58, 76, 79, 88, 89, 96, 98, 101, 102, 104, 106, 107, 110, 112, 113, 117, 120, 141], "excluded_lines": []}, "megatron/model/fused_softmax.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 93, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 93, "excluded_lines": 0}, "missing_lines": [18, 19, 20, 21, 24, 32, 33, 34, 36, 38, 41, 42, 44, 45, 46, 48, 50, 53, 56, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 78, 80, 83, 86, 87, 88, 89, 92, 105, 114, 115, 116, 117, 119, 125, 126, 128, 129, 130, 132, 133, 134, 136, 140, 142, 143, 144, 146, 148, 149, 151, 159, 160, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 182, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 197, 199, 201, 202, 203, 205], "excluded_lines": []}, "megatron/model/gmlp.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 72, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 72, "excluded_lines": 0}, "missing_lines": [16, 17, 18, 20, 21, 22, 23, 25, 28, 29, 30, 31, 32, 33, 34, 43, 44, 45, 46, 49, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 83, 85, 86, 88, 91, 92, 101, 102, 104, 105, 106, 107, 115, 116, 117, 118, 120, 121, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141], "excluded_lines": []}, "megatron/model/gpt2_model.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 122, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 122, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 39, 40, 41, 44, 45, 48, 49, 52, 55, 56, 59, 61, 69, 70, 71, 72, 74, 75, 76, 77, 80, 82, 83, 84, 87, 90, 91, 92, 95, 108, 116, 118, 119, 120, 121, 122, 125, 127, 128, 130, 145, 151, 152, 153, 156, 157, 158, 161, 163, 168, 181, 183, 184, 189, 190, 205, 223, 226, 227, 230, 231, 241, 242, 243, 244, 254, 255, 265, 280, 283, 284, 290, 292, 295, 300, 303, 305, 306, 322, 332, 334, 335, 336, 338, 346, 348, 349, 351, 357, 359, 360, 362, 366, 368, 373, 374, 375, 376, 377, 379, 384, 385, 386, 387, 388, 389, 391, 393, 394, 400], "excluded_lines": []}, "megatron/model/init_functions.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 118, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 118, "excluded_lines": 0}, "missing_lines": [15, 17, 19, 20, 21, 22, 25, 28, 29, 30, 31, 32, 33, 35, 37, 40, 52, 54, 55, 56, 57, 58, 59, 61, 63, 67, 69, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93, 94, 95, 98, 103, 104, 108, 109, 111, 114, 118, 119, 120, 121, 122, 123, 125, 127, 130, 134, 135, 136, 137, 138, 139, 141, 143, 146, 149, 151, 152, 153, 154, 155, 156, 158, 160, 163, 164, 166, 167, 168, 169, 170, 171, 173, 175, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 192, 193, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 210, 211, 214, 217, 225, 227], "excluded_lines": []}, "megatron/model/mamba/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "megatron/model/mamba/mamba.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 111, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 111, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 19, 21, 22, 25, 26, 32, 34, 36, 41, 42, 44, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 65, 68, 71, 82, 93, 95, 100, 117, 122, 123, 124, 125, 126, 128, 131, 137, 138, 139, 142, 152, 155, 156, 161, 162, 165, 174, 179, 180, 186, 197, 210, 211, 224, 237, 239, 243, 246, 249, 250, 252, 254, 262, 281, 286, 288, 290, 292, 298, 299, 300, 303, 317, 319, 324, 325, 328, 329, 332, 347, 349, 351, 353, 356, 361, 368, 370, 373, 375, 377, 383, 387, 389, 391, 394, 397, 398, 401, 403], "excluded_lines": []}, "megatron/model/norms.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 49, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 49, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 45, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 74, 75, 77, 80, 81, 82, 83, 84, 86, 87, 88], "excluded_lines": []}, "megatron/model/positional_embeddings.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 114, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 114, "excluded_lines": 0}, "missing_lines": [15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 58, 59, 60, 62, 64, 66, 67, 68, 70, 71, 73, 79, 80, 81, 83, 85, 87, 92, 98, 99, 100, 105, 106, 107, 111, 114, 117, 121, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 148, 149, 150, 151, 153, 154, 156, 157, 164, 172, 173, 175, 178, 184, 185, 186, 187, 188, 191, 192, 194, 200, 203, 207, 209, 211, 212, 217, 218, 220, 223, 229, 230, 231, 232, 233, 236, 237, 239, 245, 248, 252], "excluded_lines": []}, "megatron/model/transformer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 368, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 368, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 38, 42, 47, 48, 51, 52, 53, 54, 56, 80, 89, 98, 100, 101, 102, 105, 106, 111, 121, 123, 135, 138, 140, 143, 147, 152, 153, 156, 167, 177, 179, 180, 182, 185, 186, 188, 189, 191, 202, 213, 226, 227, 228, 229, 232, 237, 244, 245, 246, 247, 275, 276, 279, 286, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 315, 318, 320, 321, 322, 323, 331, 333, 337, 339, 340, 341, 344, 348, 349, 351, 353, 363, 372, 373, 374, 375, 376, 378, 379, 381, 383, 384, 391, 392, 393, 395, 396, 399, 404, 412, 414, 415, 416, 417, 425, 427, 428, 430, 431, 438, 443, 447, 451, 452, 453, 455, 467, 468, 471, 482, 490, 497, 500, 502, 511, 520, 525, 526, 527, 535, 536, 537, 539, 540, 543, 547, 548, 558, 566, 571, 576, 579, 580, 582, 584, 591, 594, 597, 602, 610, 615, 616, 620, 621, 622, 623, 625, 633, 641, 642, 643, 644, 645, 663, 665, 675, 677, 683, 684, 685, 687, 688, 689, 691, 692, 694, 697, 699, 701, 705, 710, 711, 712, 714, 715, 719, 726, 734, 750, 754, 773, 784, 791, 793, 796, 797, 805, 814, 816, 824, 828, 831, 835, 838, 846, 851, 852, 853, 855, 856, 858, 862, 868, 870, 871, 872, 873, 874, 875, 876, 877, 882, 883, 885, 886, 890, 891, 892, 898, 899, 900, 901, 905, 906, 908, 909, 910, 911, 915, 920, 923, 926, 932, 934, 935, 937, 940, 947, 959, 960, 962, 965, 966, 968, 969, 970, 971, 972, 974, 975, 978, 993, 996, 997, 998, 1005, 1006, 1014, 1016, 1021, 1022, 1023, 1025, 1027, 1028, 1030, 1032, 1050, 1052, 1053, 1054, 1060, 1061, 1063, 1064, 1065, 1066, 1068, 1076, 1078, 1079, 1080, 1082, 1085, 1088, 1089, 1090, 1092, 1093, 1101, 1102, 1103, 1111, 1117, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1137, 1147, 1148, 1152, 1153, 1155, 1156, 1158, 1159, 1161, 1162, 1164, 1171, 1174, 1177, 1178, 1181, 1183, 1185, 1186, 1189, 1192, 1193, 1196, 1197, 1198, 1201, 1204, 1205, 1206, 1208, 1209, 1212, 1215, 1218, 1221, 1222, 1224, 1227, 1228, 1230], "excluded_lines": []}, "megatron/model/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 125, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 125, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 22, 23, 24, 27, 31, 32, 37, 38, 47, 51, 60, 68, 72, 73, 76, 77, 80, 81, 82, 83, 85, 86, 89, 95, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 117, 123, 125, 132, 133, 135, 139, 140, 142, 146, 147, 149, 154, 155, 156, 157, 158, 161, 162, 164, 165, 167, 170, 172, 174, 179, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 197, 198, 202, 205, 206, 208, 209, 213, 214, 216, 220, 223, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 249, 252, 253, 260, 264, 267, 281, 282, 301, 303, 307, 313, 314, 327, 328, 346, 347, 355, 356, 357, 358, 359, 360, 361], "excluded_lines": []}, "megatron/model/word_embeddings.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 114, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 114, "excluded_lines": 0}, "missing_lines": [15, 16, 17, 19, 20, 21, 24, 37, 48, 50, 51, 52, 53, 54, 55, 58, 64, 66, 67, 68, 70, 71, 72, 75, 77, 80, 81, 82, 83, 84, 87, 89, 90, 91, 99, 100, 101, 105, 107, 110, 111, 114, 116, 121, 122, 123, 124, 127, 128, 132, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 156, 158, 159, 160, 162, 165, 168, 169, 171, 173, 174, 178, 179, 180, 181, 182, 185, 186, 194, 195, 196, 197, 198, 199, 203, 204, 205, 208, 209, 210, 212, 215, 216, 220, 221, 222, 223, 224, 226, 227, 230, 232, 233, 234, 236, 238, 239, 241], "excluded_lines": []}, "megatron/mpu/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 35, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 35, "excluded_lines": 0}, "missing_lines": [15, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56], "excluded_lines": []}, "megatron/mpu/cross_entropy.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 47, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [19, 21, 22, 23, 24, 27, 28, 29, 32, 33, 39, 42, 43, 44, 45, 46, 51, 52, 53, 58, 59, 60, 63, 64, 65, 66, 68, 75, 76, 77, 78, 85, 88, 89, 91, 93, 94, 97, 100, 102, 103, 106, 107, 110, 112, 115, 117], "excluded_lines": []}, "megatron/mpu/data.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 55, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 55, "excluded_lines": 0}, "missing_lines": [15, 17, 18, 19, 22, 25, 27, 28, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 79, 91, 94, 96, 98, 102, 107, 112, 113, 114, 115, 116, 117, 118, 120], "excluded_lines": []}, "megatron/mpu/initialize.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 153, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 153, "excluded_lines": 0}, "missing_lines": [19, 21, 23, 26, 28, 30, 35, 38, 39, 42, 45, 48, 50, 53, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 158, 159, 162, 164, 165, 166, 169, 171, 172, 175, 177, 178, 181, 183, 184, 187, 190, 193, 196, 197, 198, 201, 204, 207, 210, 211, 212, 215, 218, 219, 220, 223, 226, 227, 228, 230, 233, 234, 235, 236, 239, 241, 244, 246, 249, 250, 253, 255, 256, 259, 261, 264, 266, 269, 271, 274, 276, 279, 282, 286, 288, 291, 293, 296, 298, 301, 304, 306, 308, 310, 313, 314, 316, 318, 321, 323, 324], "excluded_lines": []}, "megatron/mpu/layers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 252, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 252, "excluded_lines": 0}, "missing_lines": [23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 45, 46, 47, 49, 50, 53, 69, 70, 71, 74, 77, 78, 81, 82, 85, 86, 87, 89, 90, 91, 92, 93, 96, 107, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 129, 132, 135, 136, 143, 153, 161, 165, 166, 167, 177, 184, 185, 187, 191, 192, 194, 196, 206, 207, 209, 210, 213, 227, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 255, 258, 259, 262, 263, 270, 280, 288, 291, 292, 293, 295, 296, 297, 307, 314, 315, 316, 317, 318, 319, 321, 324, 325, 326, 327, 328, 329, 331, 333, 334, 336, 344, 348, 349, 350, 352, 353, 355, 356, 359, 362, 363, 367, 368, 377, 378, 381, 405, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 439, 440, 447, 459, 467, 471, 472, 473, 479, 486, 487, 488, 490, 491, 493, 496, 497, 502, 505, 510, 511, 519, 520, 521, 522, 524, 525, 526, 538, 545, 546, 547, 551, 552, 553, 555, 558, 559, 560, 562, 564, 565, 566, 569, 599, 615, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 636, 637, 644, 656, 664, 667, 668, 669, 673, 681, 682, 684, 687, 688, 693, 696, 701, 702, 710, 711, 712, 713, 715, 716, 717, 729, 736, 737, 738, 740, 741, 742, 744, 745, 747, 749, 751, 752, 754, 755, 756, 757, 759, 760, 761], "excluded_lines": []}, "megatron/mpu/mappings.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 85, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 85, "excluded_lines": 0}, "missing_lines": [18, 20, 26, 29, 33, 34, 37, 38, 39, 42, 45, 46, 48, 51, 55, 57, 58, 61, 64, 65, 67, 70, 73, 75, 76, 79, 80, 81, 84, 85, 87, 88, 89, 92, 95, 96, 98, 101, 104, 105, 106, 108, 109, 110, 112, 113, 114, 117, 120, 121, 122, 124, 125, 126, 128, 129, 130, 133, 136, 137, 138, 140, 141, 142, 144, 145, 146, 149, 152, 153, 154, 156, 157, 158, 160, 161, 162, 170, 171, 174, 175, 178, 179, 182, 183], "excluded_lines": []}, "megatron/mpu/random.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 9, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [18, 19, 22, 27, 30, 34, 35, 36, 37], "excluded_lines": []}, "megatron/mpu/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [19, 22, 24, 29, 32, 33, 36, 45, 46, 48, 50, 51, 53, 56, 61, 62, 65, 66, 67, 69, 70, 71, 72], "excluded_lines": []}, "megatron/mup_substitute.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 58, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 8, 9, 10, 11, 13, 14, 17, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 69, 79, 80, 82, 84, 85, 87, 90, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212], "excluded_lines": []}, "megatron/neox_arguments/__init__.py": {"executed_lines": [1, 36], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "megatron/neox_arguments/arguments.py": {"executed_lines": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 35], "summary": {"covered_lines": 17, "num_statements": 567, "percent_covered": 2.998236331569665, "percent_covered_display": "3", "missing_lines": 550, "excluded_lines": 0}, "missing_lines": [33, 34, 36, 37, 38, 39, 40, 56, 68, 69, 80, 88, 102, 103, 105, 106, 109, 110, 120, 126, 127, 132, 134, 136, 137, 142, 143, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 166, 167, 176, 179, 180, 182, 185, 186, 189, 190, 191, 195, 198, 202, 203, 206, 210, 213, 216, 217, 223, 224, 225, 229, 231, 232, 236, 241, 242, 249, 253, 255, 261, 269, 276, 278, 284, 291, 293, 300, 306, 312, 320, 321, 328, 336, 337, 344, 347, 352, 353, 354, 357, 363, 364, 365, 366, 367, 368, 371, 375, 376, 377, 380, 382, 385, 386, 387, 388, 389, 391, 393, 395, 397, 398, 408, 411, 417, 423, 424, 427, 428, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 461, 465, 467, 471, 472, 475, 477, 479, 481, 483, 484, 491, 492, 493, 494, 496, 497, 498, 499, 500, 504, 505, 506, 507, 510, 511, 512, 521, 522, 528, 529, 535, 538, 542, 544, 545, 548, 550, 551, 554, 556, 557, 558, 559, 560, 561, 563, 566, 569, 570, 573, 576, 577, 582, 583, 587, 590, 592, 593, 597, 599, 600, 604, 606, 607, 611, 613, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 648, 649, 650, 651, 657, 658, 659, 660, 661, 662, 664, 665, 666, 668, 670, 671, 675, 676, 677, 678, 680, 685, 689, 690, 691, 692, 693, 694, 696, 698, 699, 700, 701, 703, 704, 705, 708, 709, 710, 714, 715, 716, 717, 719, 724, 725, 730, 734, 735, 737, 739, 740, 741, 742, 751, 752, 753, 755, 756, 764, 765, 769, 770, 773, 774, 775, 778, 779, 780, 783, 784, 785, 788, 789, 790, 793, 794, 795, 799, 802, 804, 805, 807, 811, 815, 819, 825, 832, 833, 834, 835, 836, 839, 840, 844, 845, 846, 848, 849, 851, 859, 860, 861, 862, 863, 866, 867, 868, 873, 874, 877, 887, 893, 906, 907, 908, 910, 912, 913, 914, 915, 916, 917, 918, 920, 921, 923, 930, 931, 932, 933, 935, 937, 938, 939, 940, 942, 943, 944, 945, 947, 948, 950, 951, 952, 954, 955, 956, 958, 959, 962, 966, 969, 970, 973, 974, 975, 976, 998, 1001, 1002, 1003, 1006, 1010, 1017, 1020, 1031, 1036, 1039, 1040, 1043, 1046, 1047, 1048, 1052, 1055, 1056, 1059, 1060, 1063, 1064, 1065, 1066, 1071, 1073, 1076, 1078, 1082, 1084, 1087, 1091, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1119, 1122, 1123, 1124, 1126, 1131, 1132, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1146, 1148, 1149, 1151, 1153, 1154, 1157, 1158, 1159, 1160, 1164, 1170, 1171, 1172, 1178, 1179, 1183, 1184, 1188, 1189, 1192, 1193, 1194, 1198, 1199, 1202, 1203, 1207, 1208, 1211, 1216, 1220, 1221, 1225, 1227, 1228, 1232, 1233, 1236, 1237, 1241, 1242, 1245, 1246, 1250, 1251, 1255, 1263, 1264, 1270, 1273, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1295, 1299, 1300, 1301, 1302, 1304, 1305, 1307, 1308, 1309, 1312, 1315, 1316, 1317, 1318, 1319, 1321, 1324, 1325, 1326, 1331, 1332, 1333, 1334, 1335, 1337, 1342, 1344, 1349, 1352, 1353, 1354, 1357, 1358, 1359, 1364, 1366, 1371, 1372, 1373, 1374, 1379, 1381, 1386, 1388, 1389, 1390, 1391, 1392, 1397, 1398, 1400], "excluded_lines": []}, "megatron/neox_arguments/deepspeed_args.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 115, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 115, "excluded_lines": 0}, "missing_lines": [15, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 36, 37, 39, 40, 44, 45, 49, 50, 54, 55, 63, 64, 72, 73, 77, 78, 82, 83, 87, 88, 94, 95, 101, 102, 108, 109, 115, 116, 122, 123, 131, 132, 134, 135, 139, 140, 144, 145, 149, 150, 156, 157, 165, 166, 171, 172, 180, 181, 189, 190, 199, 200, 208, 209, 215, 216, 220, 221, 227, 228, 236, 237, 245, 246, 254, 255, 263, 264, 272, 273, 277, 278, 281, 282, 288, 289, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 324, 325, 329, 330, 334, 335, 339, 340, 344, 345, 349, 350, 354, 355, 359, 360, 364, 365], "excluded_lines": []}, "megatron/neox_arguments/neox_args.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 460, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 460, "excluded_lines": 0}, "missing_lines": [15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 43, 45, 46, 47, 48, 49, 50, 53, 54, 59, 60, 64, 65, 69, 70, 76, 77, 81, 82, 87, 88, 93, 94, 99, 100, 104, 105, 109, 110, 114, 115, 121, 122, 128, 129, 139, 140, 144, 145, 149, 150, 154, 155, 159, 160, 164, 165, 169, 170, 174, 175, 179, 180, 184, 187, 191, 192, 196, 197, 201, 202, 206, 207, 211, 213, 231, 233, 257, 258, 262, 263, 267, 268, 272, 275, 279, 280, 284, 285, 289, 290, 294, 295, 299, 300, 304, 305, 309, 310, 314, 315, 319, 320, 324, 325, 329, 330, 334, 335, 339, 340, 348, 359, 364, 375, 380, 381, 386, 387, 396, 397, 405, 406, 409, 410, 414, 415, 421, 422, 432, 433, 437, 438, 442, 443, 447, 448, 453, 454, 458, 459, 464, 466, 471, 472, 477, 487, 492, 493, 497, 498, 502, 503, 507, 508, 512, 513, 517, 518, 522, 523, 528, 529, 534, 535, 539, 540, 544, 545, 549, 550, 554, 555, 559, 560, 565, 566, 571, 572, 574, 575, 577, 578, 580, 581, 583, 584, 586, 587, 589, 590, 592, 593, 597, 598, 602, 603, 607, 608, 612, 613, 617, 618, 622, 623, 629, 630, 634, 635, 639, 640, 644, 645, 649, 650, 654, 655, 659, 660, 672, 673, 677, 678, 683, 684, 689, 690, 694, 695, 699, 700, 704, 705, 709, 710, 714, 715, 719, 720, 724, 725, 729, 730, 734, 735, 739, 740, 744, 745, 749, 750, 752, 753, 757, 758, 762, 763, 767, 768, 772, 773, 777, 778, 782, 783, 787, 788, 792, 793, 798, 799, 804, 812, 816, 817, 822, 823, 828, 829, 834, 835, 839, 840, 845, 846, 850, 851, 855, 856, 860, 861, 865, 866, 871, 872, 877, 878, 883, 884, 900, 901, 909, 910, 914, 915, 919, 920, 924, 925, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 955, 956, 968, 969, 974, 975, 979, 980, 984, 985, 989, 990, 994, 995, 999, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1029, 1030, 1034, 1035, 1039, 1040, 1044, 1045, 1049, 1050, 1054, 1055, 1059, 1060, 1064, 1065, 1069, 1070, 1074, 1075, 1080, 1081, 1085, 1086, 1090, 1091, 1095, 1096, 1100, 1101, 1105, 1106, 1110, 1111, 1115, 1116, 1120, 1121, 1126, 1127, 1131, 1132, 1136, 1137, 1141, 1142, 1146, 1147, 1151, 1152, 1156, 1157, 1161, 1162, 1166, 1167, 1171, 1172, 1177, 1178, 1182, 1183, 1187, 1188, 1193, 1194, 1199, 1200, 1205, 1206, 1210, 1211, 1215, 1216, 1220, 1221, 1225, 1226, 1230, 1231, 1235, 1236, 1240, 1241, 1245, 1246, 1250, 1251, 1256, 1257, 1261, 1262, 1268, 1269, 1273, 1274, 1278, 1279, 1283, 1284, 1288, 1289, 1293, 1294, 1298, 1299, 1303, 1304, 1308, 1309, 1313, 1314, 1318, 1319], "excluded_lines": []}, "megatron/neox_arguments/template.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 16, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [15, 16, 19, 20, 21, 25, 26, 28, 34, 35, 37, 43, 44, 46, 50, 51], "excluded_lines": []}, "megatron/optimizers.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 231, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 231, "excluded_lines": 0}, "missing_lines": [16, 17, 20, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 80, 81, 82, 84, 86, 87, 88, 91, 92, 93, 94, 95, 97, 98, 102, 107, 109, 112, 113, 115, 118, 121, 124, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 152, 155, 157, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 172, 174, 177, 179, 182, 187, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 202, 205, 208, 209, 210, 211, 212, 213, 214, 215, 229, 230, 232, 233, 234, 236, 237, 239, 242, 273, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 297, 298, 299, 301, 308, 309, 310, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340, 344, 345, 348, 349, 351, 359, 360, 361, 363, 364, 365, 368, 369, 374, 375, 376, 378, 380, 381, 384, 388, 389, 391, 393, 394, 396, 399, 400, 403, 406, 407, 409, 412, 414, 415, 418, 440, 447, 448, 449, 450, 451, 452, 454, 455, 457, 461, 462, 463, 466, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 484, 485, 487, 497], "excluded_lines": []}, "megatron/text_generation_utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 253, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 253, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 34, 45, 47, 52, 55, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 91, 94, 95, 97, 99, 100, 103, 106, 107, 108, 109, 110, 112, 115, 119, 120, 123, 136, 137, 143, 146, 147, 153, 154, 156, 157, 158, 161, 163, 164, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 228, 231, 238, 239, 240, 241, 242, 243, 246, 247, 252, 259, 262, 263, 266, 270, 271, 272, 278, 280, 281, 282, 286, 287, 288, 293, 294, 295, 299, 300, 301, 303, 306, 310, 316, 317, 318, 322, 324, 325, 329, 330, 331, 332, 335, 336, 340, 341, 345, 347, 348, 353, 360, 365, 372, 375, 376, 377, 378, 379, 382, 384, 388, 390, 391, 392, 395, 433, 436, 439, 440, 442, 443, 446, 447, 449, 451, 452, 453, 455, 456, 458, 459, 461, 462, 464, 465, 471, 472, 473, 474, 476, 477, 478, 480, 498, 500, 501, 504, 507, 509, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 528, 529, 530, 539, 540, 542, 547, 593, 596, 597, 598, 599, 600, 601, 605, 606, 607, 608, 614, 615, 627, 628, 629, 630, 631, 632, 635, 678, 679, 680, 692, 693, 694, 695, 696, 697, 698, 701, 738, 739, 740, 741, 743, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 763, 764, 769, 771, 772, 774, 775, 776, 777, 794, 795, 806, 807, 808, 809], "excluded_lines": []}, "megatron/tokenizer/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [16], "excluded_lines": []}, "megatron/tokenizer/tokenizer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 244, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 244, "excluded_lines": 0}, "missing_lines": [18, 20, 21, 23, 24, 25, 26, 27, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 63, 65, 68, 72, 73, 74, 75, 76, 77, 82, 85, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 105, 107, 109, 110, 111, 113, 114, 118, 119, 120, 124, 125, 126, 130, 131, 132, 136, 137, 138, 142, 143, 144, 149, 152, 153, 154, 156, 159, 161, 162, 163, 165, 166, 167, 169, 170, 171, 173, 174, 176, 177, 179, 180, 181, 184, 187, 188, 189, 191, 192, 194, 195, 196, 198, 199, 200, 205, 206, 207, 212, 213, 215, 216, 218, 219, 220, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 245, 246, 248, 249, 251, 252, 254, 255, 256, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 278, 279, 280, 282, 283, 284, 286, 287, 288, 290, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303, 306, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 321, 323, 324, 325, 327, 328, 329, 331, 332, 334, 335, 337, 338, 339, 341, 343, 344, 346, 347, 348, 351, 354, 355, 356, 357, 358, 359, 361, 362, 364, 365, 366, 368, 369, 370, 372, 373, 374, 378, 379, 380, 385, 386, 388, 389, 391, 392, 394, 395, 396, 398, 399, 400], "excluded_lines": []}, "megatron/tokenizer/train_tokenizer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 48, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 48, "excluded_lines": 0}, "missing_lines": [15, 19, 20, 22, 23, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 62, 63, 65, 66, 69, 70, 71, 72, 75, 78, 81, 82, 83, 86, 87, 91, 96, 101, 108, 115, 116, 119, 120, 128, 129, 130], "excluded_lines": []}, "megatron/training.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 471, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 471, "excluded_lines": 0}, "missing_lines": [21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 34, 41, 42, 47, 48, 49, 50, 51, 52, 58, 60, 61, 64, 65, 66, 68, 70, 71, 73, 74, 77, 80, 82, 90, 91, 93, 94, 95, 96, 97, 99, 101, 103, 104, 106, 114, 115, 117, 120, 121, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 139, 143, 145, 147, 149, 152, 153, 155, 156, 159, 160, 164, 165, 167, 168, 171, 185, 186, 191, 194, 195, 198, 201, 202, 207, 209, 210, 213, 214, 215, 217, 219, 220, 228, 229, 239, 240, 241, 252, 253, 261, 263, 264, 277, 279, 282, 283, 284, 290, 291, 294, 301, 302, 303, 306, 310, 311, 314, 315, 317, 318, 327, 330, 331, 333, 336, 338, 339, 343, 344, 345, 346, 347, 348, 350, 355, 358, 360, 365, 368, 372, 373, 376, 377, 378, 379, 380, 384, 385, 386, 387, 389, 390, 392, 393, 394, 396, 397, 398, 403, 404, 405, 408, 409, 411, 412, 413, 414, 415, 416, 417, 420, 424, 428, 429, 431, 434, 443, 446, 453, 458, 459, 460, 462, 464, 466, 468, 469, 470, 471, 472, 473, 475, 477, 478, 480, 483, 485, 487, 489, 492, 494, 495, 497, 498, 501, 503, 504, 508, 509, 514, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 533, 538, 539, 540, 542, 544, 545, 550, 551, 552, 554, 555, 557, 558, 559, 561, 566, 568, 569, 571, 574, 576, 578, 583, 585, 586, 587, 589, 590, 591, 592, 594, 595, 596, 598, 599, 600, 603, 605, 607, 608, 610, 613, 614, 615, 620, 621, 622, 623, 624, 625, 626, 632, 634, 636, 638, 641, 643, 645, 646, 647, 651, 654, 655, 657, 658, 659, 660, 661, 674, 677, 679, 680, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 702, 713, 714, 716, 717, 718, 719, 720, 721, 723, 724, 730, 735, 737, 738, 745, 749, 753, 754, 756, 759, 763, 764, 765, 767, 768, 770, 773, 775, 778, 782, 783, 786, 792, 794, 795, 797, 798, 805, 806, 808, 813, 814, 815, 822, 823, 828, 830, 835, 836, 837, 838, 840, 841, 842, 847, 848, 854, 855, 859, 860, 862, 864, 865, 868, 871, 872, 873, 875, 883, 884, 887, 899, 902, 905, 907, 908, 911, 914, 915, 916, 917, 918, 926, 927, 928, 929, 930, 931, 932, 933, 937, 938, 940, 943, 959, 960, 968, 973, 974, 985, 986, 987, 988, 989, 994, 996, 999, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1029, 1035, 1041, 1047, 1048, 1051, 1052, 1054, 1058, 1059, 1061, 1062, 1066, 1067, 1069, 1075, 1076, 1079, 1081, 1084, 1096, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1121, 1122, 1130, 1131, 1132, 1133, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145], "excluded_lines": []}, "megatron/utils.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 255, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 255, "excluded_lines": 0}, "missing_lines": [18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 35, 36, 38, 39, 41, 44, 46, 47, 48, 49, 52, 54, 55, 56, 57, 60, 61, 64, 67, 72, 76, 77, 80, 83, 92, 95, 102, 103, 104, 107, 108, 110, 113, 115, 117, 118, 120, 121, 125, 126, 129, 131, 134, 136, 139, 141, 144, 146, 147, 148, 149, 151, 153, 154, 157, 159, 160, 162, 163, 166, 167, 168, 169, 170, 171, 179, 180, 181, 182, 186, 189, 196, 197, 198, 199, 200, 201, 202, 204, 207, 210, 211, 212, 213, 216, 222, 223, 225, 226, 227, 230, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 246, 248, 249, 250, 251, 253, 255, 256, 258, 260, 262, 263, 265, 267, 268, 270, 271, 272, 275, 278, 279, 280, 281, 283, 284, 285, 286, 288, 293, 294, 295, 297, 298, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 331, 332, 333, 334, 336, 337, 341, 342, 343, 344, 347, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 369, 374, 375, 376, 377, 381, 390, 391, 394, 396, 397, 398, 405, 407, 408, 409, 410, 413, 423, 424, 425, 427, 434, 435, 436, 439, 440, 442, 443, 446, 449, 452, 457, 459, 460, 463, 468, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 494, 503, 509, 510, 513, 523, 524, 525, 527, 528, 529, 532, 543, 544, 547, 548, 550], "excluded_lines": []}, "prepare_data.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 16, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [15, 16, 18, 26, 29, 30, 31, 38, 45, 52, 55, 58, 65, 68, 69, 70], "excluded_lines": []}, "tests/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/common.py": {"executed_lines": [15, 16, 17, 18, 19, 20, 21], "summary": {"covered_lines": 7, "num_statements": 313, "percent_covered": 2.236421725239617, "percent_covered_display": "2", "missing_lines": 306, "excluded_lines": 0}, "missing_lines": [23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 102, 103, 109, 111, 118, 119, 120, 123, 125, 126, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 151, 152, 153, 156, 157, 160, 161, 164, 165, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 182, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 232, 236, 239, 240, 241, 242, 243, 244, 246, 247, 250, 251, 253, 254, 255, 259, 262, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 281, 282, 285, 287, 288, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 303, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 319, 370, 373, 374, 376, 377, 380, 381, 386, 432, 433, 436, 437, 438, 439, 441, 442, 444, 445, 446, 448, 449, 452, 453, 454, 455, 457, 459, 460, 461, 462, 463, 465, 467, 468, 471, 472, 473, 476, 477, 478, 479, 480, 482, 483, 488, 490, 499, 502, 503, 505, 506, 507, 509, 511, 512, 515, 518, 519, 521, 522, 523, 524, 525, 528, 530, 536, 539, 550, 551, 552, 553, 554, 557, 558, 559, 560, 562, 565, 566, 567, 568, 571, 574, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 622, 623, 626, 628, 629, 630], "excluded_lines": []}, "tests/conftest.py": {"executed_lines": [8, 9, 10, 11, 12, 13, 16, 20, 21, 24, 28, 31, 32, 33, 36, 42, 43, 68, 69, 80, 87, 88], "summary": {"covered_lines": 22, "num_statements": 46, "percent_covered": 47.82608695652174, "percent_covered_display": "48", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [37, 38, 39, 44, 45, 46, 47, 50, 51, 55, 56, 59, 60, 71, 72, 73, 74, 81, 82, 83, 84, 89, 90, 91], "excluded_lines": []}, "tests/model/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/model/test_fused_kernels.py": {"executed_lines": [15, 16, 17, 19, 20, 22, 23, 24, 25], "summary": {"covered_lines": 9, "num_statements": 86, "percent_covered": 10.465116279069768, "percent_covered_display": "10", "missing_lines": 77, "excluded_lines": 0}, "missing_lines": [26, 28, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 58, 59, 60, 65, 70, 79, 85, 87, 88, 89, 91, 92, 94, 107, 112, 125, 130, 132, 133, 135, 137, 138, 145, 153, 154, 155, 156, 159, 161, 162, 163, 168, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 199, 212, 217, 230, 235, 237, 238, 240, 242, 243, 250], "excluded_lines": []}, "tests/model/test_model_checkpoint.py": {"executed_lines": [15, 21, 22, 23, 25, 26], "summary": {"covered_lines": 6, "num_statements": 33, "percent_covered": 18.181818181818183, "percent_covered_display": "18", "missing_lines": 27, "excluded_lines": 0}, "missing_lines": [33, 35, 63, 68, 69, 70, 71, 73, 74, 76, 77, 80, 81, 83, 84, 86, 91, 100, 106, 114, 119, 125, 126, 127, 130, 131, 136], "excluded_lines": []}, "tests/model/test_model_generation.py": {"executed_lines": [15, 23, 24, 25], "summary": {"covered_lines": 4, "num_statements": 27, "percent_covered": 14.814814814814815, "percent_covered_display": "15", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [27, 62, 67, 68, 69, 70, 71, 74, 75, 77, 78, 79, 81, 91, 93, 94, 96, 97, 109, 110, 111, 112, 113], "excluded_lines": []}, "tests/model/test_model_instantiation.py": {"executed_lines": [15, 19, 21, 22, 23], "summary": {"covered_lines": 5, "num_statements": 29, "percent_covered": 17.24137931034483, "percent_covered_display": "17", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [31, 73, 78, 81, 82, 83, 84, 87, 98, 103, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 124, 127, 128], "excluded_lines": []}, "tests/model/test_model_train.py": {"executed_lines": [15, 22, 23], "summary": {"covered_lines": 3, "num_statements": 30, "percent_covered": 10.0, "percent_covered_display": "10", "missing_lines": 27, "excluded_lines": 0}, "missing_lines": [24, 25, 26, 27, 29, 50, 53, 56, 60, 62, 63, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 81, 82, 86, 87, 92], "excluded_lines": []}, "tests/neox_args/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/neox_args/test_neoxargs_commandline.py": {"executed_lines": [15, 18, 19, 20, 22], "summary": {"covered_lines": 5, "num_statements": 52, "percent_covered": 9.615384615384615, "percent_covered_display": "10", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [25, 26, 31, 34, 39, 42, 47, 48, 50, 53, 54, 59, 62, 67, 70, 75, 76, 78, 81, 82, 88, 91, 97, 100, 105, 106, 108, 111, 112, 117, 120, 130, 133, 138, 139, 141, 144, 145, 149, 152, 155, 156, 157, 160, 161, 164, 165], "excluded_lines": []}, "tests/neox_args/test_neoxargs_implementation.py": {"executed_lines": [15, 18, 21, 22], "summary": {"covered_lines": 4, "num_statements": 6, "percent_covered": 66.66666666666667, "percent_covered_display": "67", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [26, 28], "excluded_lines": []}, "tests/neox_args/test_neoxargs_load.py": {"executed_lines": [15, 18, 19, 20], "summary": {"covered_lines": 4, "num_statements": 63, "percent_covered": 6.349206349206349, "percent_covered_display": "6", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [23, 24, 26, 27, 28, 31, 34, 37, 38, 41, 42, 43, 47, 50, 53, 54, 55, 65, 66, 70, 73, 74, 78, 83, 84, 88, 91, 92, 96, 99, 100, 104, 107, 108, 112, 115, 116, 120, 123, 124, 128, 131, 132, 136, 139, 140, 145, 146, 147, 148, 149, 152, 153, 157, 159, 160, 161, 162, 163], "excluded_lines": []}, "tests/neox_args/test_neoxargs_usage.py": {"executed_lines": [15, 18, 19, 20], "summary": {"covered_lines": 4, "num_statements": 23, "percent_covered": 17.391304347826086, "percent_covered_display": "17", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [23, 24, 28, 30, 31, 34, 59, 60, 61, 64, 65, 68, 71, 72, 75, 76, 77, 81, 83], "excluded_lines": []}, "tests/unit/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/unit/test_arguments.py": {"executed_lines": [15], "summary": {"covered_lines": 1, "num_statements": 23, "percent_covered": 4.3478260869565215, "percent_covered_display": "4", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [16, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 32, 35, 36, 37, 40, 41, 43, 44, 47, 48, 49], "excluded_lines": []}, "tests/unit/test_dependencies.py": {"executed_lines": [1, 2], "summary": {"covered_lines": 2, "num_statements": 5, "percent_covered": 40.0, "percent_covered_display": "40", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [5, 6, 7], "excluded_lines": []}, "tests/unit/test_format_conversion_scripts.py": {"executed_lines": [1, 2], "summary": {"covered_lines": 2, "num_statements": 12, "percent_covered": 16.666666666666668, "percent_covered_display": "17", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [3, 4, 7, 9, 10, 11, 12, 15, 23, 24], "excluded_lines": []}, "tests/unit/test_launcher_scripts.py": {"executed_lines": [3, 5], "summary": {"covered_lines": 2, "num_statements": 52, "percent_covered": 3.8461538461538463, "percent_covered_display": "4", "missing_lines": 50, "excluded_lines": 0}, "missing_lines": [6, 7, 8, 9, 10, 13, 23, 24, 27, 28, 29, 32, 33, 34, 35, 38, 43, 56, 59, 62, 63, 64, 65, 66, 67, 70, 75, 78, 81, 82, 83, 84, 85, 86, 89, 94, 97, 100, 103, 104, 105, 106, 107, 110, 111, 114, 117, 118, 119, 120], "excluded_lines": []}, "tests/unit/test_tokenizer.py": {"executed_lines": [1, 2], "summary": {"covered_lines": 2, "num_statements": 7, "percent_covered": 28.571428571428573, "percent_covered_display": "29", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [5, 6, 7, 13, 14], "excluded_lines": []}, "tests/unit/test_url_accessibility.py": {"executed_lines": [1, 2, 4, 7, 17, 18, 19], "summary": {"covered_lines": 7, "num_statements": 20, "percent_covered": 35.0, "percent_covered_display": "35", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25], "excluded_lines": []}, "tools/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tools/ckpts/convert_neox_to_hf.py": {"executed_lines": [15, 16, 18, 19, 20, 22, 23, 31, 33, 38], "summary": {"covered_lines": 10, "num_statements": 194, "percent_covered": 5.154639175257732, "percent_covered_display": "5", "missing_lines": 184, "excluded_lines": 0}, "missing_lines": [41, 54, 108, 111, 116, 117, 119, 121, 132, 135, 140, 142, 144, 148, 150, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 173, 177, 178, 179, 181, 185, 186, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 206, 208, 209, 218, 228, 229, 249, 251, 258, 259, 261, 269, 272, 282, 284, 287, 298, 299, 303, 305, 310, 324, 347, 348, 353, 363, 375, 376, 377, 378, 381, 394, 396, 398, 400, 401, 403, 405, 406, 408, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 429, 434, 435, 437, 444, 450, 451, 453, 454, 467, 472, 475, 477, 480, 488, 489, 490, 498, 499, 506, 507, 515, 516, 523, 524, 525, 526, 533, 534, 544, 546, 547, 554, 555, 557, 558, 559, 560, 569, 570, 572, 574, 577, 578, 585, 586, 588, 589, 603, 605, 608, 609, 611, 614, 619, 624, 629, 635, 640, 646, 649, 655, 661, 662, 663, 664, 671, 672, 673, 674, 678, 679, 684, 693, 695, 697, 699, 700, 701, 704, 706, 709, 710, 711, 714, 720], "excluded_lines": []}, "tools/datasets/corpora.py": {"executed_lines": [17, 18, 19, 21, 31, 32, 35, 36, 38, 73, 74, 78, 79, 80, 84, 85, 86, 90, 91, 95, 96, 100, 101, 105, 106, 110, 111, 115, 116, 120, 124, 137, 162, 172, 173, 174, 175, 178, 179, 180, 183, 184, 185, 190, 191, 192, 195, 196, 197, 202, 203, 204, 209, 210, 211, 216, 217, 218, 223, 224, 225, 230, 231, 232, 235, 236, 237, 240, 241, 242, 243, 246, 247, 248, 251, 254, 255, 256, 261, 262, 263, 268, 269, 270, 275, 276, 277, 283, 284, 285, 291, 292, 293, 296, 306, 330], "summary": {"covered_lines": 95, "num_statements": 169, "percent_covered": 56.21301775147929, "percent_covered_display": "56", "missing_lines": 74, "excluded_lines": 0}, "missing_lines": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 82, 88, 93, 98, 103, 108, 113, 118, 122, 126, 127, 128, 129, 130, 131, 134, 135, 139, 140, 144, 154, 155, 157, 158, 160, 163, 164, 166, 167, 169, 297, 298, 299, 300, 301, 302, 303, 342, 343, 344, 345, 346, 347, 348, 351, 353, 355, 356, 364], "excluded_lines": []}, "train.py": {"executed_lines": [18, 19], "summary": {"covered_lines": 2, "num_statements": 11, "percent_covered": 18.181818181818183, "percent_covered_display": "18", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [20, 23, 24, 27, 28, 29, 30, 33, 34], "excluded_lines": []}}, "totals": {"covered_lines": 222, "num_statements": 7945, "percent_covered": 2.7942101950912526, "percent_covered_display": "3", "missing_lines": 7723, "excluded_lines": 0}}