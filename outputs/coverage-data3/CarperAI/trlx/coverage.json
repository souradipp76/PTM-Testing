{"meta": {"format": 2, "version": "7.4.4", "timestamp": "2024-04-28T23:44:09.390065", "branch_coverage": false, "show_contexts": false}, "files": {"examples/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "examples/architext.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 10, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 10, "excluded_lines": 0}, "missing_lines": [3, 4, 7, 9, 12, 30, 31, 33, 36, 37], "excluded_lines": []}, "examples/ilql_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 21, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 9, 10, 13, 15, 18, 20, 22, 31, 32, 33, 35, 37, 46, 47, 48], "excluded_lines": []}, "examples/ilql_sentiments_t5.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 43, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 8, 9, 17, 20, 22, 25, 78, 83, 84, 85, 87, 88, 91, 92, 94, 95, 96, 98, 106, 108, 110, 111, 112, 114, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 139, 140], "excluded_lines": []}, "examples/nemo_ilql_inference.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 42, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 8, 9, 10, 12, 13, 14, 16, 18, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 48, 51, 52, 55, 56, 57, 72, 73, 74, 76, 78, 85, 86, 88, 89, 91, 94, 95], "excluded_lines": []}, "examples/nemo_ilql_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 6, 7, 10, 12, 15, 18, 21, 39, 41, 50, 51, 52, 54, 56, 65, 66], "excluded_lines": []}, "examples/nemo_ppo_inference.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 36, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 36, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 7, 8, 10, 12, 24, 25, 26, 27, 30, 31, 33, 34, 35, 39, 40, 41, 42, 44, 46, 47, 51, 52, 54, 55, 56, 58, 59, 61, 62, 64, 67, 68], "excluded_lines": []}, "examples/nemo_ppo_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 38, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 38, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 8, 9, 11, 12, 21, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 40, 81, 83, 84, 86, 87, 88, 98, 99, 100, 101, 102, 105, 106, 108, 116, 117, 118], "excluded_lines": []}, "examples/nemo_sft_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 7, 8, 16, 18, 21, 24, 26, 27, 28, 29, 30, 32, 34, 35, 37, 49, 51, 53, 62, 63, 64, 66, 74, 75], "excluded_lines": []}, "examples/nemo_vs_ds_chat.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 116, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 116, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 21, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 155, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 182, 184, 185, 188, 189, 191, 192, 200, 201, 202], "excluded_lines": []}, "examples/ppo_dense_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 39, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 39, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 18, 21, 22, 25, 27, 29, 30, 32, 34, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 73, 74, 75], "excluded_lines": []}, "examples/ppo_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 26, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 26, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 18, 21, 23, 25, 26, 28, 30, 39, 40, 41, 44, 45, 47, 55, 56, 57], "excluded_lines": []}, "examples/ppo_sentiments_llama.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 8, 9, 10, 12, 13, 24, 26, 29, 30, 75, 77, 79, 80, 82, 84, 93, 94, 95, 98, 99, 101, 109, 110, 111], "excluded_lines": []}, "examples/ppo_sentiments_peft.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 29, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 18, 20, 23, 25, 27, 28, 30, 32, 42, 49, 50, 51, 54, 55, 57, 65, 66, 67], "excluded_lines": []}, "examples/ppo_sentiments_t5.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 59, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 59, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 8, 10, 11, 19, 22, 24, 27, 93, 98, 99, 100, 102, 103, 106, 107, 109, 110, 111, 113, 121, 123, 125, 126, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 171, 172, 173], "excluded_lines": []}, "examples/ppo_translation_t5.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 65, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 65, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 23, 25, 26, 27, 29, 30, 31, 32, 38, 106, 107, 110, 111, 112, 114, 115, 117, 118, 120, 128, 129, 131, 133, 135, 141, 146, 154, 157, 160, 161, 163, 164, 165, 168, 169, 170, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185, 186, 190, 192, 193, 199, 201, 210, 211, 212], "excluded_lines": []}, "examples/randomwalks/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 1, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [1], "excluded_lines": []}, "examples/randomwalks/ilql_randomwalks.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 16, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 16, 17, 19, 20, 22, 24, 35, 64, 65, 66, 68, 69], "excluded_lines": []}, "examples/randomwalks/ppo_randomwalks.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 13, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 13, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 13, 55, 56, 57, 59, 72, 73, 74, 76, 77], "excluded_lines": []}, "examples/randomwalks/randomwalks.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 70, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 70, "excluded_lines": 0}, "missing_lines": [1, 3, 4, 5, 8, 19, 21, 25, 26, 29, 53, 61, 64, 68, 74, 75, 78, 84, 85, 90, 91, 94, 98, 101, 103, 106, 110, 113, 114, 117, 118, 121, 125, 128, 131, 134, 135, 137, 138, 139, 141, 143, 156, 160, 161, 163, 165, 166, 170, 173, 175, 178, 179, 180, 184, 185, 186, 189, 190, 194, 195, 199, 200, 203, 206, 208, 213, 217, 218, 220], "excluded_lines": []}, "examples/randomwalks/rft_randomwalks.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 14, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 14, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 11, 13, 46, 47, 48, 50, 59, 60, 61, 63, 64], "excluded_lines": []}, "examples/rft_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 28, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 6, 8, 9, 10, 12, 13, 21, 24, 26, 29, 61, 62, 64, 65, 67, 69, 78, 79, 80, 83, 84, 86, 94, 95, 96], "excluded_lines": []}, "examples/sft_sentiments.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 23, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 23, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 6, 7, 9, 10, 13, 15, 18, 20, 22, 24, 26, 35, 36, 37, 39, 45, 48, 49, 50], "excluded_lines": []}, "examples/simulacra.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 32, 33], "excluded_lines": []}, "examples/summarize_daily_cnn/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "examples/summarize_daily_cnn/t5_summarize_daily_cnn.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 22, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 22, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 14, 16, 17, 18, 19, 23, 90, 92, 94, 95, 99, 101, 104, 105, 106, 109, 110, 112], "excluded_lines": []}, "setup.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 2, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [1, 3], "excluded_lines": []}, "tests/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_configs.py": {"executed_lines": [1, 2, 4], "summary": {"covered_lines": 3, "num_statements": 27, "percent_covered": 11.11111111111111, "percent_covered_display": "11", "missing_lines": 24, "excluded_lines": 0}, "missing_lines": [7, 9, 10, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39], "excluded_lines": []}, "tests/test_minibatch.py": {"executed_lines": [1, 2, 4, 5, 6, 8], "summary": {"covered_lines": 6, "num_statements": 145, "percent_covered": 4.137931034482759, "percent_covered_display": "4", "missing_lines": 139, "excluded_lines": 0}, "missing_lines": [9, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 46, 47, 56, 57, 58, 59, 60, 61, 64, 65, 66, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 84, 86, 87, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 103, 105, 106, 108, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 132, 134, 135, 136, 138, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 161, 164, 165, 167, 170, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 199, 202, 204, 206, 208, 209, 210, 211, 213, 215, 216, 219, 223, 225, 227, 228, 229, 230, 233, 234], "excluded_lines": []}, "tests/test_models.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9], "summary": {"covered_lines": 8, "num_statements": 369, "percent_covered": 2.168021680216802, "percent_covered_display": "2", "missing_lines": 361, "excluded_lines": 0}, "missing_lines": [10, 12, 13, 21, 27, 29, 30, 36, 37, 38, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 88, 89, 90, 91, 94, 96, 97, 98, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 124, 125, 127, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 151, 152, 153, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 171, 172, 178, 179, 180, 181, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 210, 213, 214, 215, 216, 219, 221, 222, 223, 225, 226, 227, 230, 231, 232, 234, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 248, 250, 251, 253, 254, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 282, 283, 284, 286, 287, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321, 322, 323, 326, 330, 331, 332, 335, 336, 337, 338, 341, 347, 348, 349, 351, 352, 353, 356, 357, 358, 360, 361, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 405, 409, 410, 411, 414, 415, 416, 417, 419, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 440, 441, 444, 445, 446, 448, 451, 460, 461, 466, 467, 468, 470, 471, 473, 475, 476, 477, 479, 480, 481, 484, 493, 496, 498, 499, 500, 502, 504, 506, 507, 508, 510, 511, 512, 513, 515, 518, 524, 525, 527, 528, 529, 531, 532, 533, 535, 537, 538, 539, 542, 550, 551, 552, 554, 556, 558, 559, 560, 562, 563, 565, 574, 575, 578, 579, 580, 583, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 600, 601, 602, 604], "excluded_lines": []}, "tests/test_peft.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13], "summary": {"covered_lines": 12, "num_statements": 249, "percent_covered": 4.819277108433735, "percent_covered_display": "5", "missing_lines": 237, "excluded_lines": 0}, "missing_lines": [14, 16, 17, 23, 27, 32, 33, 34, 36, 37, 38, 39, 41, 42, 44, 50, 52, 54, 65, 66, 67, 68, 69, 71, 72, 74, 82, 83, 84, 85, 88, 89, 90, 91, 93, 98, 100, 101, 103, 104, 108, 109, 110, 111, 112, 113, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 161, 162, 171, 172, 179, 180, 189, 191, 192, 195, 200, 201, 206, 208, 209, 211, 213, 214, 218, 219, 220, 221, 222, 224, 225, 232, 233, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 253, 258, 260, 262, 263, 265, 267, 268, 269, 270, 271, 273, 275, 277, 278, 279, 280, 281, 282, 284, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 304, 307, 308, 309, 310, 311, 313, 316, 319, 320, 321, 322, 325, 326, 327, 329, 331, 332, 333, 334, 335, 337, 339, 340, 342, 345, 346, 348, 350, 354, 356, 360, 362, 363, 364, 365, 366, 367, 374, 380, 382, 384, 385, 387, 388, 390, 391, 393, 398, 399, 401, 410, 411, 412, 415, 416, 417, 419, 420, 421, 422, 423, 425, 432, 433, 434, 435, 436, 437, 443, 444, 446, 449, 451, 457, 461, 463, 471, 472, 474, 475, 477, 478, 486, 487, 489], "excluded_lines": []}, "tests/test_pipelines.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 96, "percent_covered": 2.0833333333333335, "percent_covered_display": "2", "missing_lines": 94, "excluded_lines": 0}, "missing_lines": [4, 5, 7, 10, 11, 12, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 73, 75, 76, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 131], "excluded_lines": []}, "tests/test_trainers.py": {"executed_lines": [1, 2, 3, 4, 5, 7], "summary": {"covered_lines": 6, "num_statements": 81, "percent_covered": 7.407407407407407, "percent_covered_display": "7", "missing_lines": 75, "excluded_lines": 0}, "missing_lines": [8, 16, 17, 19, 20, 23, 24, 39, 40, 41, 43, 46, 47, 48, 49, 51, 52, 53, 98, 99, 107, 108, 111, 112, 114, 117, 118, 120, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 180, 183, 186, 189, 192], "excluded_lines": []}, "tests/test_utils.py": {"executed_lines": [1, 3, 4, 5, 6, 8], "summary": {"covered_lines": 6, "num_statements": 64, "percent_covered": 9.375, "percent_covered_display": "9", "missing_lines": 58, "excluded_lines": 0}, "missing_lines": [9, 11, 12, 14, 15, 16, 22, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 40, 44, 45, 46, 47, 48, 51, 52, 58, 67, 68, 69, 70, 72, 78, 79, 80, 81, 82, 84, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112], "excluded_lines": []}, "trlx/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 1, "num_statements": 2, "percent_covered": 50.0, "percent_covered_display": "50", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [2], "excluded_lines": []}, "trlx/data/__init__.py": {"executed_lines": [1, 2, 4, 7, 8, 9, 13, 16, 17, 18, 22, 23, 24, 27, 28, 29, 33, 34], "summary": {"covered_lines": 15, "num_statements": 15, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "trlx/data/accelerate_base_datatypes.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 19, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 19, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 7, 8, 19, 20, 23, 24, 35, 36, 39, 40, 51, 52, 55, 56, 67, 68], "excluded_lines": []}, "trlx/data/configs.py": {"executed_lines": [1, 2, 3, 5, 7, 10, 23, 37, 38, 39, 64, 65, 66, 67, 68, 70, 71, 75, 76, 77, 90, 91, 92, 93, 95, 96, 100, 101, 102, 112, 113, 115, 116, 120, 121, 122, 132, 133, 135, 136, 140, 141, 142, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 232, 234, 235, 239, 240, 241, 245, 246, 247, 248, 249, 250, 252, 253, 264, 279, 289, 290, 303, 304, 331], "summary": {"covered_lines": 80, "num_statements": 126, "percent_covered": 63.492063492063494, "percent_covered_display": "63", "missing_lines": 46, "excluded_lines": 0}, "missing_lines": [12, 13, 14, 15, 16, 17, 18, 20, 26, 28, 29, 30, 32, 34, 72, 97, 117, 137, 236, 260, 261, 262, 268, 277, 287, 294, 305, 308, 309, 310, 312, 313, 314, 315, 316, 317, 319, 320, 322, 323, 325, 326, 327, 329, 333, 335], "excluded_lines": []}, "trlx/data/default_configs.py": {"executed_lines": [1, 3], "summary": {"covered_lines": 2, "num_statements": 23, "percent_covered": 8.695652173913043, "percent_covered_display": "9", "missing_lines": 21, "excluded_lines": 0}, "missing_lines": [4, 5, 7, 17, 18, 62, 63, 97, 98, 124, 127, 129, 130, 133, 136, 138, 139, 142, 145, 147, 148], "excluded_lines": []}, "trlx/data/ilql_types.py": {"executed_lines": [1, 3, 6, 7, 8, 30, 31, 32, 33, 34, 35, 38, 39, 40, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 98, 99, 100, 101, 102, 103, 106, 107, 108, 133, 134, 135, 136, 137, 138, 139], "summary": {"covered_lines": 36, "num_statements": 36, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "trlx/data/method_configs.py": {"executed_lines": [1, 2, 3, 6, 9, 15, 16, 17, 18, 20, 24, 25, 26, 28, 31, 32, 33, 34, 41, 43, 44, 48], "summary": {"covered_lines": 21, "num_statements": 28, "percent_covered": 75.0, "percent_covered_display": "75", "missing_lines": 7, "excluded_lines": 0}, "missing_lines": [21, 22, 45, 52, 53, 54, 56], "excluded_lines": []}, "trlx/data/ppo_types.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 16, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [1, 3, 6, 7, 31, 32, 33, 34, 35, 38, 39, 59, 60, 61, 62, 63], "excluded_lines": []}, "trlx/models/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "trlx/models/modeling_base.py": {"executed_lines": [19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 32, 34, 35], "summary": {"covered_lines": 13, "num_statements": 155, "percent_covered": 8.387096774193548, "percent_covered_display": "8", "missing_lines": 142, "excluded_lines": 0}, "missing_lines": [44, 62, 63, 67, 69, 70, 71, 72, 73, 75, 78, 79, 81, 82, 86, 87, 88, 89, 90, 92, 93, 95, 96, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 175, 177, 179, 183, 184, 185, 186, 187, 188, 190, 192, 194, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 215, 219, 220, 224, 225, 227, 228, 231, 236, 241, 244, 246, 247, 248, 251, 253, 254, 256, 257, 258, 262, 263, 265, 270, 271, 273, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 288, 293, 294, 297, 298, 300, 303, 304, 305, 307, 308, 309, 311, 313, 315, 318, 322, 324, 326, 328, 342, 343, 344, 345, 347, 349, 350, 351, 353, 355, 357, 362, 364, 366, 368, 374], "excluded_lines": []}, "trlx/models/modeling_ilql.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19], "summary": {"covered_lines": 17, "num_statements": 277, "percent_covered": 6.137184115523466, "percent_covered_display": "6", "missing_lines": 260, "excluded_lines": 0}, "missing_lines": [20, 29, 30, 31, 32, 33, 36, 44, 45, 48, 49, 50, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 112, 114, 116, 118, 119, 121, 123, 131, 132, 133, 134, 135, 137, 140, 141, 147, 148, 150, 151, 153, 166, 169, 170, 178, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 193, 204, 205, 206, 208, 210, 211, 212, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 230, 231, 254, 255, 256, 257, 258, 259, 262, 271, 272, 273, 275, 283, 284, 285, 286, 287, 288, 289, 291, 302, 308, 310, 312, 314, 315, 317, 318, 320, 321, 323, 325, 345, 346, 348, 349, 351, 352, 353, 355, 356, 358, 359, 360, 361, 369, 370, 371, 373, 375, 376, 378, 379, 380, 382, 383, 384, 386, 387, 389, 390, 392, 393, 395, 396, 397, 401, 402, 404, 407, 409, 410, 412, 414, 415, 417, 422, 423, 424, 429, 431, 436, 437, 440, 441, 442, 445, 446, 472, 473, 474, 475, 476, 477, 478, 481, 484, 485, 486, 488, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 512, 513, 514, 519, 521, 526, 527, 530, 531, 532, 534, 550, 561, 563, 565, 566, 568, 570, 572, 573, 574, 576, 577, 581, 583, 606, 607, 609, 610, 611, 613, 615, 616, 617, 618, 620, 621, 622, 623, 631, 632, 633, 635, 637, 638, 639, 640, 641, 643, 644, 646, 647, 648, 649, 650, 651, 655, 656, 658, 661, 663, 664, 666], "excluded_lines": []}, "trlx/models/modeling_nemo_ilql.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 344, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 344, "excluded_lines": 0}, "missing_lines": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 25, 28, 32, 36, 41, 42, 44, 45, 46, 49, 52, 64, 66, 70, 71, 84, 96, 97, 98, 99, 100, 103, 105, 106, 123, 124, 131, 132, 133, 134, 135, 137, 139, 141, 142, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 158, 159, 162, 163, 164, 166, 167, 168, 170, 172, 173, 176, 177, 179, 180, 182, 184, 186, 193, 194, 207, 208, 209, 211, 212, 215, 216, 217, 218, 221, 224, 225, 227, 228, 230, 232, 233, 234, 235, 236, 237, 239, 241, 244, 245, 246, 248, 250, 252, 255, 256, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 273, 274, 276, 277, 278, 279, 283, 292, 302, 303, 304, 306, 307, 308, 311, 312, 313, 315, 316, 317, 319, 320, 321, 322, 323, 324, 326, 328, 329, 330, 332, 334, 336, 338, 339, 341, 349, 351, 353, 355, 356, 363, 368, 372, 382, 384, 388, 392, 399, 406, 407, 409, 410, 414, 415, 418, 419, 422, 428, 430, 447, 449, 450, 452, 453, 455, 456, 459, 460, 461, 465, 466, 467, 469, 471, 475, 477, 479, 483, 485, 486, 487, 488, 490, 497, 498, 499, 501, 508, 509, 510, 512, 514, 515, 516, 517, 518, 520, 522, 523, 524, 526, 528, 529, 530, 532, 534, 536, 537, 538, 539, 541, 542, 543, 546, 547, 549, 550, 551, 554, 555, 556, 557, 558, 560, 562, 564, 565, 566, 568, 569, 571, 573, 575, 577, 579, 581, 582, 584, 586, 588, 589, 590, 591, 593, 595, 597, 598, 599, 609, 610, 612, 613, 615, 616, 617, 619, 620, 621, 623, 635, 643, 645, 647, 648, 649, 650, 652, 654, 656, 657, 659, 664, 669, 671, 672, 674, 677, 679, 681, 683, 685, 691, 695, 696, 698, 700, 701, 703, 711, 712, 714, 721, 723, 724, 726, 728, 729, 730, 731, 733, 735, 737, 739, 741, 747, 748, 759, 760, 761, 763, 765, 766, 768, 770, 771, 773, 774, 777, 785], "excluded_lines": []}, "trlx/models/modeling_nemo_ppo.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 605, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 605, "excluded_lines": 0}, "missing_lines": [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 25, 28, 31, 32, 36, 39, 43, 48, 49, 51, 52, 53, 54, 55, 59, 62, 63, 64, 67, 70, 83, 85, 86, 88, 93, 94, 95, 109, 121, 123, 124, 125, 126, 127, 130, 132, 133, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 185, 187, 189, 190, 191, 192, 194, 195, 196, 199, 200, 202, 203, 205, 207, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 222, 224, 226, 228, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 246, 256, 257, 259, 261, 262, 264, 265, 278, 279, 280, 282, 283, 285, 287, 288, 290, 291, 292, 293, 306, 307, 308, 310, 312, 315, 316, 317, 318, 321, 324, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 339, 341, 344, 345, 346, 348, 350, 352, 355, 356, 358, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 399, 400, 402, 403, 404, 405, 409, 418, 428, 429, 430, 432, 433, 434, 437, 438, 439, 441, 442, 443, 445, 446, 447, 448, 452, 453, 454, 456, 457, 459, 460, 462, 464, 466, 467, 469, 470, 471, 473, 474, 475, 477, 479, 480, 482, 484, 485, 486, 488, 490, 492, 494, 495, 497, 505, 507, 509, 512, 514, 515, 516, 517, 518, 519, 521, 522, 524, 525, 526, 528, 529, 531, 532, 534, 536, 538, 539, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 558, 559, 560, 564, 565, 566, 567, 572, 573, 575, 576, 577, 578, 579, 580, 585, 588, 589, 590, 591, 592, 593, 601, 602, 603, 604, 605, 607, 608, 609, 610, 612, 615, 616, 617, 618, 620, 621, 622, 624, 625, 627, 633, 634, 635, 636, 638, 640, 641, 642, 643, 644, 645, 647, 648, 652, 662, 664, 668, 672, 679, 686, 687, 688, 689, 690, 692, 693, 697, 698, 700, 701, 703, 704, 707, 713, 715, 734, 736, 737, 739, 740, 742, 743, 746, 747, 748, 752, 753, 754, 755, 757, 759, 763, 765, 769, 773, 775, 776, 777, 779, 780, 781, 782, 783, 784, 786, 788, 789, 790, 791, 792, 794, 796, 797, 798, 800, 802, 803, 804, 806, 808, 810, 811, 812, 813, 815, 816, 817, 820, 821, 823, 824, 825, 828, 829, 830, 831, 832, 834, 836, 838, 839, 840, 841, 842, 844, 846, 847, 849, 850, 852, 853, 855, 856, 858, 859, 861, 862, 864, 872, 873, 874, 876, 877, 879, 881, 883, 885, 887, 889, 890, 892, 894, 896, 897, 899, 900, 901, 903, 904, 906, 907, 908, 910, 912, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 927, 931, 932, 934, 935, 937, 938, 939, 940, 941, 943, 945, 946, 948, 949, 950, 952, 953, 954, 959, 971, 972, 974, 976, 985, 987, 989, 991, 993, 994, 996, 997, 999, 1003, 1005, 1007, 1017, 1020, 1022, 1024, 1026, 1028, 1035, 1039, 1040, 1042, 1043, 1049, 1051, 1052, 1054, 1062, 1063, 1065, 1072, 1074, 1075, 1076, 1081, 1082, 1083, 1085, 1086, 1087, 1089, 1091, 1093, 1095, 1096, 1097, 1100, 1104, 1106, 1107, 1108, 1111, 1119, 1120, 1128, 1129, 1138, 1147, 1148, 1150, 1152, 1153, 1154, 1156, 1158, 1164, 1175, 1176, 1178, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192, 1194, 1196, 1197, 1199, 1200, 1202, 1203, 1206, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1219, 1220, 1222], "excluded_lines": []}, "trlx/models/modeling_nemo_sft.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 244, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 244, "excluded_lines": 0}, "missing_lines": [2, 3, 4, 5, 7, 8, 9, 10, 13, 16, 19, 24, 26, 30, 31, 33, 34, 36, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 65, 74, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 100, 101, 102, 104, 107, 108, 110, 111, 113, 115, 116, 117, 119, 121, 123, 125, 126, 128, 129, 131, 133, 134, 138, 148, 150, 154, 158, 165, 172, 173, 175, 176, 180, 181, 184, 185, 188, 194, 196, 213, 215, 216, 218, 219, 221, 222, 225, 226, 227, 231, 232, 233, 235, 237, 241, 243, 245, 249, 251, 252, 253, 254, 256, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 281, 283, 284, 285, 287, 289, 290, 291, 293, 295, 297, 298, 299, 300, 302, 303, 304, 307, 308, 310, 311, 312, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 333, 335, 336, 338, 339, 341, 343, 345, 346, 348, 350, 352, 353, 355, 357, 358, 360, 361, 364, 367, 369, 377, 379, 380, 381, 382, 384, 386, 388, 389, 390, 400, 401, 403, 406, 408, 409, 411, 414, 415, 417, 418, 420, 421, 422, 424, 426, 433, 435, 436, 437, 439, 440, 442, 443, 444, 446, 448, 449, 450, 452, 455, 457, 459, 461, 463, 469, 470, 471, 473, 475, 476, 478, 486, 487, 489, 496, 498, 499, 501, 503, 505, 511, 512, 523], "excluded_lines": []}, "trlx/models/modeling_ppo.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 665, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 665, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 35, 41, 42, 43, 44, 46, 51, 52, 53, 56, 59, 60, 62, 67, 73, 74, 75, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 189, 194, 196, 197, 198, 200, 202, 203, 205, 206, 208, 209, 214, 215, 217, 219, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 271, 272, 273, 275, 281, 282, 283, 285, 299, 311, 312, 314, 316, 318, 319, 321, 322, 323, 324, 327, 329, 332, 333, 334, 335, 336, 337, 343, 345, 346, 347, 349, 351, 352, 354, 359, 360, 361, 363, 370, 376, 378, 379, 381, 382, 385, 386, 387, 389, 397, 398, 400, 401, 402, 403, 408, 410, 423, 435, 436, 437, 439, 440, 442, 444, 446, 447, 448, 449, 451, 452, 453, 455, 460, 461, 462, 467, 468, 473, 475, 482, 484, 485, 486, 487, 488, 490, 491, 492, 497, 498, 499, 502, 507, 519, 523, 524, 525, 527, 531, 532, 533, 535, 536, 537, 538, 539, 542, 543, 544, 547, 548, 566, 568, 569, 572, 573, 575, 577, 578, 579, 581, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 595, 597, 598, 603, 604, 605, 606, 608, 610, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 640, 641, 642, 643, 645, 646, 648, 650, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 664, 666, 667, 668, 670, 671, 672, 674, 676, 677, 678, 680, 689, 690, 708, 709, 712, 713, 715, 717, 718, 720, 721, 722, 724, 725, 727, 729, 736, 737, 740, 743, 745, 746, 747, 749, 750, 751, 752, 757, 758, 759, 761, 763, 772, 774, 775, 777, 778, 780, 781, 788, 789, 791, 793, 795, 796, 808, 816, 817, 835, 836, 839, 840, 842, 844, 845, 847, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 861, 863, 865, 866, 867, 868, 870, 871, 877, 878, 881, 883, 884, 885, 887, 897, 898, 899, 901, 902, 904, 906, 907, 909, 911, 912, 924, 932, 933, 937, 938, 939, 940, 941, 943, 944, 945, 947, 951, 952, 954, 956, 958, 960, 963, 964, 965, 969, 971, 974, 977, 979, 997, 998, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1017, 1019, 1022, 1023, 1026, 1031, 1032, 1033, 1035, 1036, 1037, 1039, 1041, 1050, 1052, 1053, 1055, 1056, 1058, 1059, 1060, 1063, 1064, 1066, 1067, 1068, 1069, 1071, 1079, 1080, 1091, 1092, 1093, 1094, 1095, 1097, 1116, 1117, 1120, 1121, 1123, 1125, 1126, 1128, 1130, 1131, 1132, 1134, 1137, 1138, 1139, 1141, 1142, 1148, 1152, 1153, 1154, 1155, 1156, 1158, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1174, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1197, 1198, 1200, 1202, 1203, 1216, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1242, 1247, 1248, 1249, 1251, 1257, 1259, 1260, 1261, 1263, 1282, 1299, 1300, 1302, 1304, 1306, 1307, 1309, 1310, 1311, 1312, 1315, 1317, 1319, 1320, 1322, 1324, 1325, 1327, 1332, 1333, 1334, 1336, 1338, 1344, 1346, 1347, 1349, 1350, 1353, 1354, 1355, 1357, 1365, 1366, 1368, 1369, 1370, 1375, 1377, 1395, 1412, 1413, 1414, 1416, 1417, 1419, 1421, 1422, 1433, 1434, 1435, 1437, 1442, 1443, 1444, 1449, 1450, 1455, 1457, 1464, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1478, 1479, 1480, 1483, 1486, 1492, 1493, 1494, 1496, 1510, 1511, 1513, 1516, 1518, 1519, 1520, 1521, 1522, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1546, 1557, 1558, 1560, 1562, 1563, 1564, 1566, 1567, 1569, 1570, 1573, 1574, 1576, 1578, 1581, 1583, 1585, 1586, 1588, 1598, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1634], "excluded_lines": []}, "trlx/pipeline/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 89, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 89, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 16, 19, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 54, 55, 67, 70, 71, 72, 73, 75, 76, 80, 82, 83, 85, 86, 88, 89, 102, 105, 110, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 154, 155, 156, 157, 162, 163, 165, 166, 167, 168, 172, 174, 175, 177], "excluded_lines": []}, "trlx/pipeline/offline_pipeline.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 114, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 114, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 13, 19, 22, 23, 34, 35, 38, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 61, 62, 65, 66, 67, 73, 74, 77, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 100, 104, 105, 107, 108, 111, 112, 113, 115, 118, 119, 134, 141, 143, 144, 145, 147, 149, 153, 154, 156, 157, 162, 163, 165, 166, 168, 169, 170, 172, 173, 174, 176, 180, 191, 192, 202, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 227, 228, 230, 231, 240, 241, 252, 257, 258, 260, 261, 262, 263, 264, 265, 266, 268, 269, 279, 280, 282, 283], "excluded_lines": []}, "trlx/pipeline/ppo_pipeline.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 47, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 47, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 10, 11, 14, 15, 17, 22, 23, 29, 31, 53, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 72, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 94, 95, 97, 102], "excluded_lines": []}, "trlx/reference.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 53, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 53, "excluded_lines": 0}, "missing_lines": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 46, 48, 49, 51, 56, 58, 59, 60, 62, 63, 65, 81, 82, 83, 84, 85, 87, 101, 102, 103], "excluded_lines": []}, "trlx/sweep.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 168, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 168, "excluded_lines": 0}, "missing_lines": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 103, 108, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 129, 130, 131, 133, 136, 149, 151, 152, 153, 154, 155, 156, 158, 161, 165, 166, 168, 169, 172, 174, 177, 178, 184, 211, 212, 213, 215, 216, 217, 218, 219, 221, 223, 224, 225, 239, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 263, 264, 267, 268, 269, 270, 277, 283, 284, 285, 286, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 310, 311, 312, 313, 314, 317, 318, 319, 321, 322, 323, 325, 342, 343, 344, 346, 348], "excluded_lines": []}, "trlx/trainer/__init__.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 33, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 33, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 9, 12, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 34, 35, 36, 45, 46, 47, 48, 49, 50, 51, 53, 57, 59, 60, 64], "excluded_lines": []}, "trlx/trainer/accelerate_base_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 389, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 389, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 30, 37, 40, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 67, 68, 70, 73, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 110, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 130, 131, 133, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 155, 157, 158, 159, 161, 163, 164, 165, 166, 171, 173, 177, 178, 183, 186, 188, 189, 190, 191, 193, 195, 199, 200, 201, 203, 213, 215, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 239, 242, 244, 245, 247, 248, 250, 252, 254, 256, 258, 259, 260, 261, 262, 264, 266, 267, 271, 273, 274, 275, 277, 279, 280, 284, 294, 295, 297, 298, 306, 307, 309, 311, 312, 314, 317, 318, 319, 320, 322, 324, 326, 327, 328, 329, 331, 333, 335, 337, 339, 341, 344, 345, 347, 349, 353, 361, 362, 364, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 387, 388, 390, 391, 398, 399, 400, 402, 403, 405, 409, 410, 411, 413, 415, 416, 418, 419, 421, 422, 423, 424, 427, 428, 429, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 456, 460, 462, 464, 465, 466, 467, 468, 469, 472, 473, 474, 476, 479, 480, 481, 484, 485, 486, 487, 489, 490, 491, 492, 494, 495, 497, 499, 500, 502, 503, 506, 507, 508, 512, 514, 515, 516, 518, 522, 524, 525, 526, 528, 529, 530, 531, 532, 534, 535, 536, 538, 539, 541, 549, 552, 554, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 583, 585, 586, 587, 588, 590, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 609, 610, 611, 612, 613, 616, 617, 618, 619, 621, 622, 623, 625, 626, 627, 628, 629, 630, 632, 633, 634, 636, 637, 638, 640, 641, 642, 644, 646, 647, 649, 651, 652, 654, 655, 657, 659, 660, 662, 664, 665, 667, 669, 670, 672, 674, 675, 677, 679, 680, 682], "excluded_lines": []}, "trlx/trainer/accelerate_ilql_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 155, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 155, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 23, 24, 25, 27, 30, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 103, 104, 105, 106, 108, 109, 111, 113, 121, 122, 123, 124, 125, 127, 128, 129, 130, 138, 139, 140, 142, 143, 144, 145, 153, 160, 162, 163, 165, 166, 167, 169, 175, 176, 177, 179, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 235, 236, 246, 251, 252, 254], "excluded_lines": []}, "trlx/trainer/accelerate_ppo_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 268, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 268, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 25, 26, 27, 28, 29, 30, 32, 35, 36, 39, 40, 42, 49, 52, 53, 54, 56, 60, 64, 67, 71, 74, 75, 76, 77, 81, 82, 84, 89, 96, 98, 99, 101, 104, 105, 106, 108, 110, 111, 112, 114, 116, 117, 119, 127, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 154, 157, 164, 165, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 194, 204, 206, 208, 209, 210, 212, 213, 214, 216, 217, 219, 221, 222, 223, 225, 227, 228, 230, 231, 233, 234, 235, 237, 239, 241, 242, 243, 245, 247, 248, 249, 251, 261, 262, 273, 274, 275, 277, 278, 280, 282, 285, 286, 288, 289, 291, 292, 295, 298, 299, 300, 301, 303, 304, 308, 311, 318, 325, 326, 328, 330, 332, 333, 335, 336, 337, 338, 340, 341, 343, 346, 347, 349, 350, 352, 353, 354, 362, 364, 365, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 396, 397, 398, 399, 407, 415, 416, 417, 418, 419, 420, 424, 425, 432, 438, 440, 441, 442, 445, 446, 448, 451, 452, 453, 455, 457, 458, 459, 460, 462, 463, 464, 465, 466, 471, 472, 473, 475, 476, 478, 480, 481, 483, 485, 487, 488, 489, 490, 491, 492, 494, 504, 506, 507, 509, 510, 511, 512, 514, 515, 516, 518, 519, 520, 521, 524, 526, 535, 536, 538, 542, 544, 552, 553], "excluded_lines": []}, "trlx/trainer/accelerate_rft_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 101, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 101, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 18, 19, 20, 40, 41, 42, 43, 44, 47, 48, 49, 50, 52, 58, 60, 61, 62, 63, 65, 67, 69, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 99, 101, 103, 104, 106, 108, 110, 111, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 133, 134, 140, 142, 143, 144, 145, 147, 149, 150, 152, 154, 157, 160, 162, 165, 166, 167, 168, 169, 172, 174, 194, 195], "excluded_lines": []}, "trlx/trainer/accelerate_sft_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 54, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 54, "excluded_lines": 0}, "missing_lines": [1, 3, 5, 6, 7, 12, 13, 16, 17, 18, 26, 29, 30, 31, 32, 34, 40, 41, 42, 43, 45, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 63, 64, 65, 67, 68, 70, 71, 73, 75, 76, 78, 79, 80, 82, 88, 89, 90, 92, 93, 94, 96, 97], "excluded_lines": []}, "trlx/trainer/nemo_ilql_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 120, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 120, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 28, 31, 32, 33, 34, 36, 37, 39, 40, 45, 46, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 64, 65, 67, 69, 71, 73, 74, 75, 79, 80, 82, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 101, 102, 103, 105, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 130, 131, 133, 134, 141, 142, 144, 145, 146, 147, 149, 151, 152, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 177, 178, 180, 181, 183, 188, 189, 190, 192, 194, 196, 197, 199, 203, 204], "excluded_lines": []}, "trlx/trainer/nemo_ppo_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 259, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 259, "excluded_lines": 0}, "missing_lines": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 34, 37, 38, 39, 47, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 73, 75, 76, 78, 80, 82, 84, 86, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 109, 111, 119, 121, 122, 124, 126, 127, 129, 130, 132, 133, 134, 135, 137, 139, 140, 142, 144, 146, 147, 149, 150, 152, 154, 156, 158, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 179, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 214, 216, 217, 218, 219, 220, 221, 225, 226, 227, 228, 230, 231, 233, 239, 240, 241, 252, 253, 254, 255, 257, 258, 262, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 307, 309, 310, 312, 313, 315, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 341, 342, 344, 345, 346, 348, 349, 351, 352, 354, 357, 364, 365, 367, 368, 370, 372, 373, 375, 376, 378, 379, 381, 382, 384, 385, 391, 392, 393, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 416, 419, 423, 425, 426, 427, 428, 429, 431, 433, 435, 436, 438, 439, 440, 441], "excluded_lines": []}, "trlx/trainer/nemo_sft_trainer.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 85, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 85, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 19, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 96, 97, 99, 100, 101, 103, 104, 108, 110, 111, 113, 114, 116, 121, 122, 123, 125, 131, 133, 134, 136, 137, 138, 140], "excluded_lines": []}, "trlx/trlx.py": {"executed_lines": [1, 2, 3, 5, 6], "summary": {"covered_lines": 5, "num_statements": 48, "percent_covered": 10.416666666666666, "percent_covered_display": "10", "missing_lines": 43, "excluded_lines": 0}, "missing_lines": [11, 12, 15, 71, 72, 76, 77, 78, 79, 81, 83, 85, 86, 87, 89, 90, 92, 100, 101, 104, 105, 107, 108, 110, 113, 115, 116, 119, 120, 121, 122, 124, 125, 127, 128, 130, 132, 134, 137, 139, 140, 142, 143], "excluded_lines": []}, "trlx/utils/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 19, 20, 23, 31, 44, 58, 83, 84, 86, 87, 88, 89, 90, 93, 130, 131, 133, 134, 137, 149, 150, 154, 159, 175, 190, 204, 211, 225, 240], "summary": {"covered_lines": 41, "num_statements": 126, "percent_covered": 32.53968253968254, "percent_covered_display": "33", "missing_lines": 85, "excluded_lines": 0}, "missing_lines": [27, 28, 35, 36, 38, 39, 41, 48, 49, 50, 51, 52, 63, 68, 69, 70, 80, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 124, 125, 126, 127, 141, 142, 143, 144, 145, 146, 155, 156, 157, 165, 166, 167, 169, 170, 171, 173, 181, 183, 184, 185, 187, 194, 195, 196, 197, 198, 199, 201, 208, 215, 216, 217, 218, 219, 220, 222, 229, 230, 231, 232, 233, 234, 244, 245, 246, 247, 248, 250], "excluded_lines": []}, "trlx/utils/loading.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 29, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 29, "excluded_lines": 0}, "missing_lines": [1, 4, 5, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 25, 26, 28, 31, 35, 36, 37, 39, 42, 46, 47, 48, 50], "excluded_lines": []}, "trlx/utils/logging.py": {"executed_lines": [14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 36, 44, 47, 52, 53, 60, 63, 64, 67, 68, 71, 74, 75, 77, 78, 79, 82, 83, 84, 85, 88, 101, 105, 106, 108, 122, 127, 138, 140, 141, 142, 145, 164, 181, 190, 199, 208, 217, 226, 236, 253, 264, 275, 278, 279, 281, 284, 287, 295, 298, 302, 305, 306, 312, 317, 322, 325, 331, 337], "summary": {"covered_lines": 75, "num_statements": 143, "percent_covered": 52.44755244755245, "percent_covered_display": "52", "missing_lines": 68, "excluded_lines": 0}, "missing_lines": [54, 55, 57, 91, 92, 93, 95, 96, 97, 98, 102, 116, 117, 118, 119, 120, 123, 124, 139, 160, 161, 177, 178, 184, 186, 187, 193, 195, 196, 202, 204, 205, 211, 213, 214, 222, 223, 232, 233, 244, 246, 247, 250, 258, 260, 261, 269, 270, 271, 272, 282, 285, 290, 291, 293, 296, 299, 307, 308, 310, 313, 314, 315, 318, 319, 328, 334, 340], "excluded_lines": []}, "trlx/utils/modeling.py": {"executed_lines": [], "summary": {"covered_lines": 0, "num_statements": 139, "percent_covered": 0.0, "percent_covered_display": "0", "missing_lines": 139, "excluded_lines": 0}, "missing_lines": [1, 2, 4, 5, 6, 7, 8, 9, 10, 13, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 60, 63, 69, 70, 71, 72, 73, 75, 76, 79, 86, 87, 89, 92, 93, 94, 95, 96, 99, 108, 109, 112, 119, 126, 129, 137, 148, 151, 158, 161, 169, 170, 173, 181, 182, 185, 189, 190, 191, 192, 194, 195, 196, 197, 200, 202, 203, 205, 207, 208, 209, 210, 213, 217, 218, 219, 222, 228, 229, 230, 231, 232, 234, 235, 238, 243, 244, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 259, 262, 263, 264, 266, 267, 275, 276, 281, 282, 283, 284, 286, 288, 289, 291, 292, 294, 295, 297, 299, 300, 302, 303, 304, 305, 307], "excluded_lines": []}}, "totals": {"covered_lines": 349, "num_statements": 6813, "percent_covered": 5.122559812123881, "percent_covered_display": "5", "missing_lines": 6464, "excluded_lines": 0}}